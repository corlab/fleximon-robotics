/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2015-02-18 20:00:09.735779
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73;
x0=IKsin(j[0]);
x1=IKsin(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[1]);
x4=IKcos(j[2]);
x5=IKsin(j[4]);
x6=IKcos(j[3]);
x7=IKcos(j[0]);
x8=IKsin(j[3]);
x9=IKcos(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.706824225064850))*(x8));
x13=((IkReal(0.707389224445407))*(x10));
x14=((IkReal(0.706824225064850))*(x5));
x15=((IkReal(0.0946500000000000))*(x7));
x16=((IkReal(0.707389224445407))*(x5));
x17=((IkReal(1.00000000000000))*(x0));
x18=((IkReal(0.707389224445407))*(x11));
x19=((IkReal(1.00000000000000))*(x8));
x20=((IkReal(0.0823000000000000))*(x6));
x21=((IkReal(0.0823000000000000))*(x8));
x22=((IkReal(1.00000000000000))*(x9));
x23=((IkReal(0.277251802281688))*(x7));
x24=((IkReal(1.00000000000000))*(x6));
x25=((IkReal(0.707389224445407))*(x9));
x26=((IkReal(0.706824225064850))*(x10));
x27=((IkReal(0.0946500000000000))*(x0));
x28=((IkReal(0.706824225064850))*(x11));
x29=((IkReal(0.707389224445407))*(x6));
x30=((IkReal(0.707389224445407))*(x8));
x31=((IkReal(1.00000000000000))*(x7));
x32=((IkReal(0.277473423288711))*(x7));
x33=((IkReal(0.277473423288711))*(x0));
x34=((IkReal(0.277251802281688))*(x0));
x35=((IkReal(0.706824225064850))*(x6));
x36=((x2)*(x3));
x37=((x1)*(x2));
x38=((x3)*(x4));
x39=((x7)*(x9));
x40=((x1)*(x4));
x41=((x5)*(x7));
x42=((x0)*(x3));
x43=((x3)*(x7));
x44=((x0)*(x9));
x45=((x17)*(x5));
x46=((IkReal(0.0946500000000000))*(x38));
x47=((x31)*(x38));
x48=((x17)*(x38));
x49=((x36)+(x40));
x50=((((IkReal(-1.00000000000000))*(x37)))+(((IkReal(1.00000000000000))*(x38))));
x51=((((IkReal(-1.00000000000000))*(x48)))+(((x0)*(x37))));
x52=((((IkReal(-1.00000000000000))*(x47)))+(((x37)*(x7))));
x53=((x27)*(((((IkReal(-1.00000000000000))*(x38)))+(x37))));
x54=((x15)*(((((IkReal(-1.00000000000000))*(x38)))+(x37))));
x55=((x17)*(((x36)+(x40))));
x56=((x31)*(((x36)+(x40))));
x57=((x27)*(((((IkReal(-1.00000000000000))*(x36)))+(((IkReal(-1.00000000000000))*(x40))))));
x58=((x15)*(((((IkReal(-1.00000000000000))*(x36)))+(((IkReal(-1.00000000000000))*(x40))))));
x59=((((IkReal(-1.00000000000000))*(x24)*(x49)))+(((IkReal(-1.00000000000000))*(x19)*(x50))));
x60=((((IkReal(-1.00000000000000))*(x50)*(x6)))+(((x8)*(((((IkReal(1.00000000000000))*(x36)))+(((IkReal(1.00000000000000))*(x40))))))));
x61=((((x51)*(x6)))+(((x55)*(x8))));
x62=((((x56)*(x8)))+(((x52)*(x6))));
x63=((((IkReal(-1.00000000000000))*(x19)*(x55)))+(((IkReal(-1.00000000000000))*(x24)*(x51))));
x64=((((IkReal(-1.00000000000000))*(x19)*(x56)))+(((IkReal(-1.00000000000000))*(x24)*(x52))));
x65=((((IkReal(-1.00000000000000))*(x20)*(x51)))+(((IkReal(-1.00000000000000))*(x21)*(x55))));
x66=((((IkReal(-1.00000000000000))*(x20)*(x52)))+(((IkReal(-1.00000000000000))*(x21)*(x56))));
x67=((x61)*(x9));
x68=((((x19)*(((((IkReal(-1.00000000000000))*(x48)))+(((x17)*(x37)))))))+(((IkReal(-1.00000000000000))*(x24)*(x55))));
x69=((((x19)*(((((IkReal(-1.00000000000000))*(x47)))+(((x31)*(x37)))))))+(((IkReal(-1.00000000000000))*(x24)*(x56))));
x70=((x41)+(x67));
x71=((((IkReal(-1.00000000000000))*(x45)))+(((x62)*(x9))));
x72=((x45)+(((IkReal(-1.00000000000000))*(x22)*(x62))));
x73=((((IkReal(-1.00000000000000))*(x31)*(x5)))+(((IkReal(-1.00000000000000))*(x22)*(x61))));
eerot[0]=((((IkReal(0.706824225064850))*(x39)))+(((x14)*(x63)))+(((IkReal(-1.00000000000000))*(x0)*(x25)))+(((x16)*(x64))));
eerot[1]=((((x26)*(x73)))+(((x18)*(x69)))+(((x13)*(x72)))+(((x28)*(x68))));
eerot[2]=((((x26)*(x68)))+(((x13)*(x69)))+(((x28)*(x70)))+(((x18)*(x71))));
IkReal x74=((IkReal(1.00000000000000))*(x37));
eetrans[0]=((IkReal(0.130000000000000))+(((IkReal(0.0581716337228372))*(x39)))+(((x14)*(x65)))+(((IkReal(-1.00000000000000))*(x34)*(x74)))+(((x12)*(x53)))+(((x34)*(x38)))+(((IkReal(-0.0772115338482161))*(x0)))+(((IkReal(0.300400295652561))*(x42)))+(((x16)*(x66)))+(((x35)*(x57)))+(((IkReal(0.0771498641658284))*(x7)))+(((IkReal(-1.00000000000000))*(x32)*(x74)))+(((IkReal(-0.0582181331718570))*(x44)))+(((x30)*(x54)))+(((x32)*(x38)))+(((IkReal(0.300640420389298))*(x43)))+(((x29)*(x58))));
eerot[3]=((((IkReal(0.706824225064850))*(x44)))+(((x16)*(x63)))+(((IkReal(-1.00000000000000))*(x14)*(x64)))+(((x25)*(x7))));
eerot[4]=((((IkReal(-1.00000000000000))*(x28)*(x69)))+(((x18)*(x68)))+(((IkReal(-1.00000000000000))*(x26)*(x72)))+(((x13)*(x73))));
eerot[5]=((((x13)*(x68)))+(((x18)*(x70)))+(((IkReal(-1.00000000000000))*(x28)*(x71)))+(((IkReal(-1.00000000000000))*(x26)*(x69))));
eetrans[1]=((IkReal(0.530000000000000))+(((IkReal(0.0581716337228372))*(x44)))+(((x23)*(x37)))+(((IkReal(0.0772115338482161))*(x7)))+(((x16)*(x65)))+(((IkReal(0.0771498641658284))*(x0)))+(((IkReal(-1.00000000000000))*(x12)*(x54)))+(((IkReal(0.0582181331718570))*(x39)))+(((IkReal(-0.300400295652561))*(x43)))+(((x30)*(x53)))+(((IkReal(-1.00000000000000))*(x23)*(x38)))+(((IkReal(-1.00000000000000))*(x14)*(x66)))+(((IkReal(-1.00000000000000))*(x33)*(x37)))+(((IkReal(-1.00000000000000))*(x35)*(x58)))+(((IkReal(0.300640420389298))*(x42)))+(((x29)*(x57)))+(((x33)*(x38))));
eerot[6]=((x5)*(x59));
eerot[7]=((((x11)*(x60)))+(((x10)*(x59)*(x9))));
eerot[8]=((((x10)*(x60)))+(((x11)*(x9)*(((((x50)*(x8)))+(((x49)*(x6))))))));
eetrans[2]=((IkReal(0.0991590000000000))+(((x6)*(((((IkReal(-1.00000000000000))*(x46)))+(((IkReal(0.0946500000000000))*(x37)))))))+(((IkReal(-0.392250000000000))*(x36)))+(((x5)*(((((IkReal(-1.00000000000000))*(x20)*(x49)))+(((IkReal(-1.00000000000000))*(x21)*(x50)))))))+(((IkReal(-0.425000000000000))*(x1)))+(((x8)*(((((IkReal(0.0946500000000000))*(x36)))+(((IkReal(0.0946500000000000))*(x40)))))))+(((IkReal(-0.392250000000000))*(x40))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((((IkReal(-0.707389224445407))*(r01)))+(((IkReal(0.706824225064850))*(r11))));
new_r01=((((IkReal(-0.707389224445407))*(r02)))+(((IkReal(0.706824225064850))*(r12))));
new_r02=((((IkReal(-0.706824225064850))*(r10)))+(((IkReal(0.707389224445407))*(r00))));
new_px=((IkReal(0.282656240106468))+(((IkReal(0.0581716337228372))*(r10)))+(((IkReal(-0.706824225064850))*(py)))+(((IkReal(-0.0582181331718570))*(r00)))+(((IkReal(0.707389224445407))*(px))));
new_r10=((((IkReal(-0.706824225064850))*(r01)))+(((IkReal(-0.707389224445407))*(r11))));
new_r11=((((IkReal(-0.706824225064850))*(r02)))+(((IkReal(-0.707389224445407))*(r12))));
new_r12=((((IkReal(0.707389224445407))*(r10)))+(((IkReal(0.706824225064850))*(r00))));
new_py=((IkReal(-0.466803438214496))+(((IkReal(0.706824225064850))*(px)))+(((IkReal(-0.0581716337228372))*(r00)))+(((IkReal(-0.0582181331718570))*(r10)))+(((IkReal(0.707389224445407))*(py))));
new_r20=((IkReal(-1.00000000000000))*(r21));
new_r21=((IkReal(-1.00000000000000))*(r22));
new_r22=r20;
new_pz=((IkReal(-0.0991590000000000))+(pz)+(((IkReal(-0.0823000000000000))*(r20))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal IKFAST_ALIGNED16(matrixinvcoeffs[64]);
IkReal x75=((IkReal(0.189300000000000))*(py));
IkReal x76=((IkReal(0.0946500000000000))*(r10));
IkReal x77=((IkReal(0.0946500000000000))*(r11));
IkReal x78=((IkReal(2.00000000000000))*(npx));
IkReal x79=((IkReal(2.00000000000000))*(npy));
IkReal x80=((pp)*(r01));
IkReal x81=((pp)*(r00));
IkReal x82=((IkReal(1.00000000000000))*(pp));
IkReal x83=((px)*(x78));
IkReal x84=((py)*(x78));
IkReal x85=((r10)*(x82));
IkReal x86=((px)*(x79));
IkReal x87=((py)*(x79));
IkReal x88=((r11)*(x82));
matrixinvcoeffs[0]=((IkReal(0.271700000000000))*(rxp0_2));
matrixinvcoeffs[1]=((IkReal(-0.271700000000000))*(npx));
matrixinvcoeffs[2]=((IkReal(0.189300000000000))*(npx));
matrixinvcoeffs[3]=IkReal(0);
matrixinvcoeffs[4]=IkReal(0);
matrixinvcoeffs[5]=((IkReal(-0.135850000000000))*(r20));
matrixinvcoeffs[6]=rxp0_2;
matrixinvcoeffs[7]=((((pp)*(r20)))+(((IkReal(0.00949660000000000))*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(x78))));
matrixinvcoeffs[8]=((IkReal(0.271700000000000))*(rxp1_2));
matrixinvcoeffs[9]=((IkReal(-0.271700000000000))*(npy));
matrixinvcoeffs[10]=((IkReal(0.189300000000000))*(npy));
matrixinvcoeffs[11]=IkReal(0);
matrixinvcoeffs[12]=IkReal(0);
matrixinvcoeffs[13]=((IkReal(-0.135850000000000))*(r21));
matrixinvcoeffs[14]=rxp1_2;
matrixinvcoeffs[15]=((((pp)*(r21)))+(((IkReal(0.00949660000000000))*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(x79))));
matrixinvcoeffs[16]=x75;
matrixinvcoeffs[17]=((IkReal(-0.189300000000000))*(px));
matrixinvcoeffs[18]=((IkReal(0.271700000000000))*(px));
matrixinvcoeffs[19]=py;
matrixinvcoeffs[20]=((IkReal(-1.00000000000000))*(px));
matrixinvcoeffs[21]=IkReal(0);
matrixinvcoeffs[22]=IkReal(0);
matrixinvcoeffs[23]=IkReal(0);
matrixinvcoeffs[24]=((((IkReal(-0.00949660000000000))*(r10)))+(x84)+(((IkReal(-1.00000000000000))*(x85))));
matrixinvcoeffs[25]=((((IkReal(-0.0274138450000000))*(r00)))+(x81)+(((IkReal(-1.00000000000000))*(x83))));
matrixinvcoeffs[26]=((IkReal(0.0257164050000000))*(r00));
matrixinvcoeffs[27]=x76;
matrixinvcoeffs[28]=((IkReal(-0.0946500000000000))*(r00));
matrixinvcoeffs[29]=((IkReal(-1.00000000000000))*(rxp0_1));
matrixinvcoeffs[30]=((IkReal(-0.135850000000000))*(r10));
matrixinvcoeffs[31]=((IkReal(0.271700000000000))*(rxp0_1));
matrixinvcoeffs[32]=((((IkReal(-0.00949660000000000))*(r11)))+(x87)+(((IkReal(-1.00000000000000))*(x88))));
matrixinvcoeffs[33]=((((IkReal(-0.0274138450000000))*(r01)))+(x80)+(((IkReal(-1.00000000000000))*(x86))));
matrixinvcoeffs[34]=((IkReal(0.0257164050000000))*(r01));
matrixinvcoeffs[35]=x77;
matrixinvcoeffs[36]=((IkReal(-0.0946500000000000))*(r01));
matrixinvcoeffs[37]=((IkReal(-1.00000000000000))*(rxp1_1));
matrixinvcoeffs[38]=((IkReal(-0.135850000000000))*(r11));
matrixinvcoeffs[39]=((IkReal(0.271700000000000))*(rxp1_1));
matrixinvcoeffs[40]=((IkReal(0.189300000000000))*(px));
matrixinvcoeffs[41]=x75;
matrixinvcoeffs[42]=((IkReal(-0.271700000000000))*(py));
matrixinvcoeffs[43]=px;
matrixinvcoeffs[44]=py;
matrixinvcoeffs[45]=IkReal(0);
matrixinvcoeffs[46]=IkReal(0);
matrixinvcoeffs[47]=IkReal(0);
matrixinvcoeffs[48]=((((IkReal(-0.00949660000000000))*(r00)))+(x83)+(((IkReal(-1.00000000000000))*(x81))));
matrixinvcoeffs[49]=((x84)+(((IkReal(0.0274138450000000))*(r10)))+(((IkReal(-1.00000000000000))*(x85))));
matrixinvcoeffs[50]=((IkReal(-0.0257164050000000))*(r10));
matrixinvcoeffs[51]=((IkReal(0.0946500000000000))*(r00));
matrixinvcoeffs[52]=x76;
matrixinvcoeffs[53]=((IkReal(-1.00000000000000))*(rxp0_0));
matrixinvcoeffs[54]=((IkReal(-0.135850000000000))*(r00));
matrixinvcoeffs[55]=((IkReal(0.271700000000000))*(rxp0_0));
matrixinvcoeffs[56]=((((IkReal(-0.00949660000000000))*(r01)))+(x86)+(((IkReal(-1.00000000000000))*(x80))));
matrixinvcoeffs[57]=((x87)+(((IkReal(0.0274138450000000))*(r11)))+(((IkReal(-1.00000000000000))*(x88))));
matrixinvcoeffs[58]=((IkReal(-0.0257164050000000))*(r11));
matrixinvcoeffs[59]=((IkReal(0.0946500000000000))*(r01));
matrixinvcoeffs[60]=x77;
matrixinvcoeffs[61]=((IkReal(-1.00000000000000))*(rxp1_0));
matrixinvcoeffs[62]=((IkReal(-0.135850000000000))*(r01));
matrixinvcoeffs[63]=((IkReal(0.271700000000000))*(rxp1_0));
if( !matrixinverse<8>(matrixinvcoeffs) ) {
continue;
}
IkReal gconst0_0=matrixinvcoeffs[0], gconst0_1=matrixinvcoeffs[8], gconst0_2=matrixinvcoeffs[16], gconst0_3=matrixinvcoeffs[24], gconst0_4=matrixinvcoeffs[32], gconst0_5=matrixinvcoeffs[40], gconst0_6=matrixinvcoeffs[48], gconst0_7=matrixinvcoeffs[56], gconst1_0=matrixinvcoeffs[1], gconst1_1=matrixinvcoeffs[9], gconst1_2=matrixinvcoeffs[17], gconst1_3=matrixinvcoeffs[25], gconst1_4=matrixinvcoeffs[33], gconst1_5=matrixinvcoeffs[41], gconst1_6=matrixinvcoeffs[49], gconst1_7=matrixinvcoeffs[57], gconst2_0=matrixinvcoeffs[2], gconst2_1=matrixinvcoeffs[10], gconst2_2=matrixinvcoeffs[18], gconst2_3=matrixinvcoeffs[26], gconst2_4=matrixinvcoeffs[34], gconst2_5=matrixinvcoeffs[42], gconst2_6=matrixinvcoeffs[50], gconst2_7=matrixinvcoeffs[58], gconst3_0=matrixinvcoeffs[3], gconst3_1=matrixinvcoeffs[11], gconst3_2=matrixinvcoeffs[19], gconst3_3=matrixinvcoeffs[27], gconst3_4=matrixinvcoeffs[35], gconst3_5=matrixinvcoeffs[43], gconst3_6=matrixinvcoeffs[51], gconst3_7=matrixinvcoeffs[59], gconst4_0=matrixinvcoeffs[4], gconst4_1=matrixinvcoeffs[12], gconst4_2=matrixinvcoeffs[20], gconst4_3=matrixinvcoeffs[28], gconst4_4=matrixinvcoeffs[36], gconst4_5=matrixinvcoeffs[44], gconst4_6=matrixinvcoeffs[52], gconst4_7=matrixinvcoeffs[60], gconst5_0=matrixinvcoeffs[5], gconst5_1=matrixinvcoeffs[13], gconst5_2=matrixinvcoeffs[21], gconst5_3=matrixinvcoeffs[29], gconst5_4=matrixinvcoeffs[37], gconst5_5=matrixinvcoeffs[45], gconst5_6=matrixinvcoeffs[53], gconst5_7=matrixinvcoeffs[61], gconst6_0=matrixinvcoeffs[6], gconst6_1=matrixinvcoeffs[14], gconst6_2=matrixinvcoeffs[22], gconst6_3=matrixinvcoeffs[30], gconst6_4=matrixinvcoeffs[38], gconst6_5=matrixinvcoeffs[46], gconst6_6=matrixinvcoeffs[54], gconst6_7=matrixinvcoeffs[62], gconst7_0=matrixinvcoeffs[7], gconst7_1=matrixinvcoeffs[15], gconst7_2=matrixinvcoeffs[23], gconst7_3=matrixinvcoeffs[31], gconst7_4=matrixinvcoeffs[39], gconst7_5=matrixinvcoeffs[47], gconst7_6=matrixinvcoeffs[55], gconst7_7=matrixinvcoeffs[63];
IkReal op[162], zeror[48];
int numroots;
IkReal x89=((gconst7_7)*(r01));
IkReal x90=((gconst1_3)*(r21));
IkReal x91=((gconst0_1)*(npx));
IkReal x92=((gconst1_3)*(npy));
IkReal x93=((IkReal(0.0521040950000000))*(gconst4_0));
IkReal x94=((IkReal(0.109150000000000))*(gconst1_4));
IkReal x95=((gconst3_1)*(rxp0_0));
IkReal x96=((IkReal(0.0257164050000000))*(r01));
IkReal x97=((gconst4_7)*(pz));
IkReal x98=((gconst3_0)*(r00));
IkReal x99=((IkReal(0.109911310000000))*(gconst4_7));
IkReal x100=((gconst6_1)*(r10));
IkReal x101=((gconst0_3)*(r20));
IkReal x102=((IkReal(0.0327500000000000))*(gconst7_3));
IkReal x103=((gconst4_2)*(r01));
IkReal x104=((gconst4_1)*(r01));
IkReal x105=((gconst7_7)*(r11));
IkReal x106=((IkReal(0.135850000000000))*(pp));
IkReal x107=((gconst1_7)*(r21));
IkReal x108=((gconst4_1)*(rxp1_0));
IkReal x109=((IkReal(0.00178545250000000))*(r10));
IkReal x110=((gconst0_1)*(r20));
IkReal x111=((gconst3_2)*(r00));
IkReal x112=((gconst3_7)*(r00));
IkReal x113=((gconst0_5)*(npx));
IkReal x114=((IkReal(1.33436934500000))*(gconst7_0));
IkReal x115=((gconst7_0)*(r11));
IkReal x116=((IkReal(0.109150000000000))*(gconst3_4));
IkReal x117=((IkReal(0.668610452500000))*(gconst3_7));
IkReal x118=((gconst4_3)*(r01));
IkReal x119=((IkReal(0.189300000000000))*(pz));
IkReal x120=((gconst0_7)*(npx));
IkReal x121=((gconst6_2)*(r10));
IkReal x122=((gconst1_2)*(npy));
IkReal x123=((IkReal(0.0257164050000000))*(pz));
IkReal x124=((IkReal(0.668610452500000))*(gconst6_7));
IkReal x125=((IkReal(0.109150000000000))*(gconst7_4));
IkReal x126=((IkReal(0.0534000000000000))*(gconst0_6));
IkReal x127=((IkReal(0.106800000000000))*(gconst4_5));
IkReal x128=((gconst0_2)*(r20));
IkReal x129=((gconst1_1)*(npy));
IkReal x130=((gconst0_0)*(r20));
IkReal x131=((gconst6_0)*(r10));
IkReal x132=((gconst0_3)*(npx));
IkReal x133=((gconst3_0)*(rxp0_0));
IkReal x134=((IkReal(0.0534000000000000))*(gconst1_6));
IkReal x135=((gconst4_7)*(r01));
IkReal x136=((gconst3_1)*(r00));
IkReal x137=((gconst7_5)*(rxp1_1));
IkReal x138=((gconst6_2)*(rxp0_1));
IkReal x139=((gconst6_3)*(r10));
IkReal x140=((IkReal(0.817250000000000))*(r11));
IkReal x141=((gconst1_0)*(r21));
IkReal x142=((IkReal(0.0267000000000000))*(gconst3_5));
IkReal x143=((IkReal(0.641196607500000))*(gconst7_2));
IkReal x144=((IkReal(0.0327500000000000))*(r00));
IkReal x145=((gconst0_0)*(npx));
IkReal x146=((gconst0_7)*(r20));
IkReal x147=((IkReal(0.0534000000000000))*(gconst3_6));
IkReal x148=((IkReal(1.33436934500000))*(gconst6_0));
IkReal x149=((gconst6_7)*(r10));
IkReal x150=((gconst3_2)*(rxp0_0));
IkReal x151=((IkReal(0.668610452500000))*(gconst4_7));
IkReal x152=((gconst0_4)*(r20));
IkReal x153=((IkReal(0.0256283925000000))*(r11));
IkReal x154=((gconst7_1)*(r11));
IkReal x155=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x156=((gconst6_5)*(r10));
IkReal x157=((gconst3_1)*(r10));
IkReal x158=((gconst6_1)*(r00));
IkReal x159=((gconst6_0)*(r00));
IkReal x160=((IkReal(0.817250000000000))*(gconst7_3));
IkReal x161=((gconst7_5)*(r01));
IkReal x162=((gconst6_2)*(r00));
IkReal x163=((IkReal(0.000719345000000000))*(gconst4_0));
IkReal x164=((IkReal(0.109150000000000))*(gconst4_4));
IkReal x165=((IkReal(1.00000000000000))*(pp));
IkReal x166=((gconst7_2)*(rxp1_1));
IkReal x167=((gconst1_1)*(r21));
IkReal x168=((gconst1_0)*(npy));
IkReal x169=((gconst6_1)*(rxp0_1));
IkReal x170=((gconst3_3)*(r00));
IkReal x171=((IkReal(0.817250000000000))*(gconst3_3));
IkReal x172=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x173=((gconst6_7)*(rxp0_1));
IkReal x174=((gconst7_2)*(r11));
IkReal x175=((gconst7_3)*(r11));
IkReal x176=((gconst3_7)*(rxp0_0));
IkReal x177=((gconst7_7)*(rxp1_1));
IkReal x178=((gconst3_7)*(r10));
IkReal x179=((IkReal(0.0534000000000000))*(gconst4_6));
IkReal x180=((gconst0_2)*(npx));
IkReal x181=((gconst0_5)*(r20));
IkReal x182=((gconst4_5)*(r01));
IkReal x183=((gconst4_2)*(rxp1_0));
IkReal x184=((gconst7_5)*(r11));
IkReal x185=((IkReal(0.0946500000000000))*(pp));
IkReal x186=((gconst4_2)*(r11));
IkReal x187=((gconst1_2)*(r21));
IkReal x188=((gconst7_1)*(r01));
IkReal x189=((gconst6_4)*(r10));
IkReal x190=((gconst7_1)*(rxp1_1));
IkReal x191=((gconst4_1)*(r11));
IkReal x192=((gconst4_0)*(r01));
IkReal x193=((gconst1_5)*(r21));
IkReal x194=((gconst6_0)*(rxp0_1));
IkReal x195=((gconst1_5)*(npy));
IkReal x196=((gconst3_5)*(r00));
IkReal x197=((IkReal(1.33436934500000))*(gconst4_0));
IkReal x198=((IkReal(0.106800000000000))*(gconst3_5));
IkReal x199=((IkReal(0.00178545250000000))*(gconst4_7));
IkReal x200=((gconst6_6)*(r10));
IkReal x201=((gconst7_2)*(r01));
IkReal x202=((gconst1_7)*(npy));
IkReal x203=((gconst4_3)*(rxp1_0));
IkReal x204=((gconst7_0)*(r01));
IkReal x205=((gconst7_0)*(rxp1_1));
IkReal x206=((IkReal(0.817250000000000))*(gconst6_3));
IkReal x207=((gconst3_2)*(r10));
IkReal x208=((IkReal(0.0327500000000000))*(gconst3_3));
IkReal x209=((IkReal(0.0179172450000000))*(pz));
IkReal x210=((gconst6_7)*(r00));
IkReal x211=((gconst3_0)*(r10));
IkReal x212=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x213=((IkReal(0.0267000000000000))*(gconst6_5));
IkReal x214=((IkReal(0.0267000000000000))*(gconst4_5));
IkReal x215=((IkReal(0.109150000000000))*(gconst6_4));
IkReal x216=((IkReal(0.00362719500000000))*(x182));
IkReal x217=((IkReal(0.0148280275000000))*(gconst4_4)*(r01));
IkReal x218=((IkReal(0.0257164050000000))*(x91));
IkReal x219=((IkReal(0.00349357361925000))*(x104));
IkReal x220=((IkReal(0.817250000000000))*(x92));
IkReal x221=((IkReal(0.0267000000000000))*(x113));
IkReal x222=((IkReal(0.0267000000000000))*(x195));
IkReal x223=((IkReal(0.00362719500000000))*(x196));
IkReal x224=((IkReal(0.641196607500000))*(x122));
IkReal x225=((IkReal(0.0871065591288750))*(x111));
IkReal x226=((IkReal(0.0257164050000000))*(x129));
IkReal x227=((IkReal(0.111023412500000))*(x170));
IkReal x228=((IkReal(0.0871065591288750))*(x103));
IkReal x229=((IkReal(0.0148280275000000))*(gconst3_4)*(r00));
IkReal x230=((IkReal(0.641196607500000))*(x180));
IkReal x231=((IkReal(0.00349357361925000))*(x136));
IkReal x232=((IkReal(0.0908307299721250))*(x149));
IkReal x233=((IkReal(0.111023412500000))*(x118));
IkReal x234=((IkReal(0.817250000000000))*(x132));
IkReal x235=((npy)*(x94));
IkReal x236=((IkReal(0.109150000000000))*(gconst0_4)*(npx));
IkReal x237=((IkReal(0.0908307299721250))*(x105));
IkReal x238=((IkReal(0.0148280275000000))*(x189));
IkReal x239=((IkReal(0.0871065591288750))*(x174));
IkReal x240=((IkReal(0.111023412500000))*(x139));
IkReal x241=((IkReal(0.00362719500000000))*(x156));
IkReal x242=((IkReal(0.668610452500000))*(x120));
IkReal x243=((IkReal(0.0148280275000000))*(gconst7_4)*(r11));
IkReal x244=((IkReal(0.111023412500000))*(x175));
IkReal x245=((IkReal(0.0871065591288750))*(x121));
IkReal x246=((IkReal(0.00349357361925000))*(x154));
IkReal x247=((IkReal(0.00362719500000000))*(x184));
IkReal x248=((IkReal(0.0908307299721250))*(x112));
IkReal x249=((IkReal(0.00349357361925000))*(x100));
IkReal x250=((IkReal(0.0908307299721250))*(x135));
IkReal x251=((IkReal(0.668610452500000))*(x202));
IkReal x252=((IkReal(0.00725439000000000))*(gconst7_6)*(r11));
IkReal x253=((IkReal(0.00725439000000000))*(x200));
IkReal x254=((IkReal(0.00725439000000000))*(gconst3_6)*(r00));
IkReal x255=((IkReal(0.00725439000000000))*(gconst4_6)*(r01));
IkReal x256=((npx)*(x126));
IkReal x257=((npy)*(x134));
IkReal x258=((IkReal(0.00616623150000000))*(x136));
IkReal x259=((IkReal(0.0453900000000000))*(x91));
IkReal x260=((IkReal(0.00707834130575000))*(x115));
IkReal x261=((IkReal(0.00616623150000000))*(x104));
IkReal x262=((IkReal(0.00707834130575000))*(x131));
IkReal x263=((IkReal(0.0453900000000000))*(x129));
IkReal x264=((IkReal(0.0521040950000000))*(x168));
IkReal x265=((IkReal(0.00707834130575000))*(x192));
IkReal x266=((IkReal(0.00707834130575000))*(x98));
IkReal x267=((IkReal(0.00616623150000000))*(x100));
IkReal x268=((IkReal(0.0521040950000000))*(x145));
IkReal x269=((IkReal(0.00616623150000000))*(x154));
IkReal x270=((IkReal(0.00444908750000000))*(x118));
IkReal x271=((IkReal(0.00348161712112500))*(x174));
IkReal x272=((IkReal(0.00444908750000000))*(x170));
IkReal x273=((IkReal(0.0327500000000000))*(x132));
IkReal x274=((IkReal(0.000242553722125000))*(x112));
IkReal x275=((IkReal(0.000242553722125000))*(x135));
IkReal x276=((IkReal(0.00348161712112500))*(x121));
IkReal x277=((IkReal(0.00178545250000000))*(x202));
IkReal x278=((IkReal(0.00178545250000000))*(x120));
IkReal x279=((IkReal(0.0327500000000000))*(x92));
IkReal x280=((IkReal(0.000242553722125000))*(x105));
IkReal x281=((IkReal(0.00348161712112500))*(x103));
IkReal x282=((IkReal(0.0256283925000000))*(x180));
IkReal x283=((IkReal(0.000242553722125000))*(x149));
IkReal x284=((IkReal(0.0256283925000000))*(x122));
IkReal x285=((IkReal(0.00444908750000000))*(x175));
IkReal x286=((IkReal(0.00444908750000000))*(x139));
IkReal x287=((IkReal(0.00348161712112500))*(x111));
IkReal x288=((r00)*(x206));
IkReal x289=((r00)*(x215));
IkReal x290=((r00)*(x213));
IkReal x291=((r01)*(x160));
IkReal x292=((r11)*(x164));
IkReal x293=((r10)*(x142));
IkReal x294=((IkReal(0.0257164050000000))*(x191));
IkReal x295=((IkReal(0.0257164050000000))*(x157));
IkReal x296=((IkReal(0.641196607500000))*(x207));
IkReal x297=((gconst4_3)*(x140));
IkReal x298=((IkReal(0.641196607500000))*(x186));
IkReal x299=((IkReal(0.0257164050000000))*(x158));
IkReal x300=((r10)*(x171));
IkReal x301=((r11)*(x214));
IkReal x302=((gconst7_1)*(x96));
IkReal x303=((r01)*(x125));
IkReal x304=((IkReal(0.641196607500000))*(x162));
IkReal x305=((r01)*(x143));
IkReal x306=((r10)*(x116));
IkReal x307=((IkReal(0.0267000000000000))*(x161));
IkReal x308=((r00)*(x124));
IkReal x309=((IkReal(0.668610452500000))*(x89));
IkReal x310=((r11)*(x151));
IkReal x311=((r10)*(x117));
IkReal x312=((r11)*(x179));
IkReal x313=((r01)*(x172));
IkReal x314=((r00)*(x212));
IkReal x315=((r10)*(x147));
IkReal x316=((IkReal(0.0453900000000000))*(x191));
IkReal x317=((IkReal(0.0453900000000000))*(x188));
IkReal x318=((IkReal(0.0453900000000000))*(x158));
IkReal x319=((IkReal(0.0453900000000000))*(x157));
IkReal x320=((IkReal(0.0521040950000000))*(x159));
IkReal x321=((IkReal(0.0521040950000000))*(x211));
IkReal x322=((IkReal(0.0521040950000000))*(x204));
IkReal x323=((r11)*(x93));
IkReal x324=((IkReal(0.0327500000000000))*(gconst4_3)*(r11));
IkReal x325=((IkReal(0.00178545250000000))*(x210));
IkReal x326=((IkReal(0.00178545250000000))*(x89));
IkReal x327=((gconst3_7)*(x109));
IkReal x328=((r11)*(x199));
IkReal x329=((r01)*(x102));
IkReal x330=((gconst6_3)*(x144));
IkReal x331=((r10)*(x208));
IkReal x332=((IkReal(0.0256283925000000))*(x201));
IkReal x333=((IkReal(0.0256283925000000))*(x207));
IkReal x334=((gconst4_2)*(x153));
IkReal x335=((IkReal(0.0256283925000000))*(x162));
IkReal x336=((IkReal(0.0267000000000000))*(x156));
IkReal x337=((IkReal(0.668610452500000))*(x135));
IkReal x338=((gconst7_3)*(x140));
IkReal x339=((IkReal(0.817250000000000))*(x139));
IkReal x340=((pp)*(x103));
IkReal x341=((pp)*(x111));
IkReal x342=((IkReal(0.0257164050000000))*(x100));
IkReal x343=((IkReal(0.668610452500000))*(x112));
IkReal x344=((r11)*(x125));
IkReal x345=((r11)*(x143));
IkReal x346=((IkReal(0.0257164050000000))*(x154));
IkReal x347=((IkReal(0.641196607500000))*(x121));
IkReal x348=((IkReal(0.0267000000000000))*(x184));
IkReal x349=((IkReal(0.109150000000000))*(x189));
IkReal x350=((IkReal(0.668610452500000))*(x105));
IkReal x351=((r10)*(x124));
IkReal x352=((gconst4_1)*(x96));
IkReal x353=((r00)*(x142));
IkReal x354=((r01)*(x164));
IkReal x355=((IkReal(0.817250000000000))*(x118));
IkReal x356=((IkReal(0.641196607500000))*(x103));
IkReal x357=((IkReal(0.817250000000000))*(x170));
IkReal x358=((IkReal(0.0257164050000000))*(x136));
IkReal x359=((IkReal(0.641196607500000))*(x111));
IkReal x360=((IkReal(0.0267000000000000))*(x182));
IkReal x361=((r00)*(x116));
IkReal x362=((r01)*(x179));
IkReal x363=((r00)*(x147));
IkReal x364=((IkReal(0.0534000000000000))*(x200));
IkReal x365=((r11)*(x172));
IkReal x366=((IkReal(0.0256283925000000))*(x111));
IkReal x367=((gconst6_7)*(x109));
IkReal x368=((IkReal(0.00178545250000000))*(x105));
IkReal x369=((r11)*(x102));
IkReal x370=((IkReal(0.0327500000000000))*(x139));
IkReal x371=((IkReal(0.0256283925000000))*(x103));
IkReal x372=((IkReal(0.0327500000000000))*(x118));
IkReal x373=((gconst7_2)*(x153));
IkReal x374=((IkReal(0.00178545250000000))*(x135));
IkReal x375=((IkReal(0.00178545250000000))*(x112));
IkReal x376=((IkReal(0.0256283925000000))*(x121));
IkReal x377=((gconst3_3)*(x144));
IkReal x378=((IkReal(0.668610452500000))*(x146));
IkReal x379=((pp)*(x128));
IkReal x380=((pp)*(x187));
IkReal x381=((IkReal(0.668610452500000))*(x107));
IkReal x382=((IkReal(0.0267000000000000))*(x181));
IkReal x383=((IkReal(0.817250000000000))*(x90));
IkReal x384=((IkReal(0.109150000000000))*(x152));
IkReal x385=((IkReal(0.0257164050000000))*(x167));
IkReal x386=((IkReal(0.817250000000000))*(x101));
IkReal x387=((IkReal(0.641196607500000))*(x187));
IkReal x388=((IkReal(0.641196607500000))*(x128));
IkReal x389=((IkReal(0.0257164050000000))*(x110));
IkReal x390=((r21)*(x94));
IkReal x391=((IkReal(0.0267000000000000))*(x193));
IkReal x392=((r20)*(x126));
IkReal x393=((r21)*(x134));
IkReal x394=((IkReal(0.0256283925000000))*(x128));
IkReal x395=((IkReal(0.0256283925000000))*(x187));
IkReal x396=((IkReal(0.00178545250000000))*(x146));
IkReal x397=((IkReal(0.0327500000000000))*(x101));
IkReal x398=((IkReal(0.0327500000000000))*(x90));
IkReal x399=((IkReal(0.00178545250000000))*(x107));
IkReal x400=((rxp0_1)*(x215));
IkReal x401=((rxp1_0)*(x151));
IkReal x402=((rxp1_1)*(x143));
IkReal x403=((rxp0_1)*(x213));
IkReal x404=((rxp0_1)*(x206));
IkReal x405=((pp)*(x183));
IkReal x406=((IkReal(0.0257164050000000))*(x169));
IkReal x407=((IkReal(0.0267000000000000))*(x137));
IkReal x408=((rxp1_1)*(x160));
IkReal x409=((rxp1_1)*(x125));
IkReal x410=((pp)*(x150));
IkReal x411=((rxp0_0)*(x117));
IkReal x412=((IkReal(0.0257164050000000))*(x190));
IkReal x413=((IkReal(0.641196607500000))*(x138));
IkReal x414=((rxp0_0)*(x116));
IkReal x415=((rxp1_0)*(x214));
IkReal x416=((IkReal(0.641196607500000))*(x150));
IkReal x417=((rxp0_0)*(x142));
IkReal x418=((IkReal(0.668610452500000))*(x177));
IkReal x419=((IkReal(0.0257164050000000))*(x108));
IkReal x420=((rxp0_0)*(x171));
IkReal x421=((IkReal(0.0257164050000000))*(x95));
IkReal x422=((rxp1_0)*(x164));
IkReal x423=((IkReal(0.817250000000000))*(x203));
IkReal x424=((rxp0_1)*(x124));
IkReal x425=((IkReal(0.641196607500000))*(x183));
IkReal x426=((rxp0_0)*(x147));
IkReal x427=((rxp1_0)*(x179));
IkReal x428=((rxp1_1)*(x172));
IkReal x429=((rxp0_1)*(x212));
IkReal x430=((IkReal(0.0256283925000000))*(x183));
IkReal x431=((IkReal(0.00178545250000000))*(x177));
IkReal x432=((rxp1_1)*(x102));
IkReal x433=((IkReal(0.0327500000000000))*(gconst6_3)*(rxp0_1));
IkReal x434=((IkReal(0.0256283925000000))*(x150));
IkReal x435=((IkReal(0.00178545250000000))*(x173));
IkReal x436=((rxp0_0)*(x208));
IkReal x437=((rxp1_0)*(x199));
IkReal x438=((IkReal(0.0256283925000000))*(x138));
IkReal x439=((IkReal(0.00178545250000000))*(x176));
IkReal x440=((IkReal(0.0327500000000000))*(x203));
IkReal x441=((IkReal(0.0256283925000000))*(x166));
IkReal x442=((IkReal(0.00243405773325000))*(x167));
IkReal x443=((IkReal(0.00252715500000000))*(x193));
IkReal x444=((IkReal(0.0103310475000000))*(gconst1_4)*(r21));
IkReal x445=((IkReal(0.0606892588998750))*(x187));
IkReal x446=((IkReal(0.00243405773325000))*(x110));
IkReal x447=((IkReal(0.0773527125000000))*(x90));
IkReal x448=((IkReal(0.0606892588998750))*(x128));
IkReal x449=((IkReal(0.0103310475000000))*(x152));
IkReal x450=((IkReal(0.00252715500000000))*(x181));
IkReal x451=((IkReal(0.0773527125000000))*(x101));
IkReal x452=((IkReal(0.0632839793291250))*(x107));
IkReal x453=((IkReal(0.0632839793291250))*(x146));
IkReal x454=((IkReal(0.00505431000000000))*(gconst0_6)*(r20));
IkReal x455=((IkReal(0.00505431000000000))*(gconst1_6)*(r21));
IkReal x456=((IkReal(0.00429616350000000))*(x110));
IkReal x457=((IkReal(0.00429616350000000))*(x167));
IkReal x458=((IkReal(0.00493165259175000))*(x141));
IkReal x459=((IkReal(0.00493165259175000))*(x130));
IkReal x460=((r00)*(x119));
IkReal x461=((x119)*(x120));
IkReal x462=((x96)*(x97));
IkReal x463=((x112)*(x123));
IkReal x464=((x119)*(x202));
IkReal x465=((x106)*(x121));
IkReal x466=((x106)*(x174));
IkReal x467=((x105)*(x123));
IkReal x468=((x123)*(x149));
IkReal x469=((x103)*(x106));
IkReal x470=((x122)*(x165));
IkReal x471=((x165)*(x180));
IkReal x472=((x106)*(x111));
IkReal x473=((x119)*(x210));
IkReal x474=((IkReal(0.189300000000000))*(r11)*(x97));
IkReal x475=((x119)*(x178));
IkReal x476=((x119)*(x89));
IkReal x477=((x165)*(x186));
IkReal x478=((x162)*(x165));
IkReal x479=((x165)*(x201));
IkReal x480=((x165)*(x207));
IkReal x481=((x119)*(x149));
IkReal x482=((x105)*(x119));
IkReal x483=((IkReal(0.189300000000000))*(r01)*(x97));
IkReal x484=((x112)*(x119));
IkReal x485=((x121)*(x165));
IkReal x486=((x165)*(x174));
IkReal x487=((x119)*(x146));
IkReal x488=((x107)*(x119));
IkReal x489=((x119)*(x177));
IkReal x490=((x119)*(x173));
IkReal x491=((x165)*(x166));
IkReal x492=((x138)*(x165));
IkReal x493=((IkReal(0.189300000000000))*(rxp1_0)*(x97));
IkReal x494=((x119)*(x176));
IkReal x495=((x146)*(x209));
IkReal x496=((x107)*(x209));
IkReal x497=((x185)*(x187));
IkReal x498=((x128)*(x185));
IkReal x499=((((IkReal(0.0521040950000000))*(x130)))+(((IkReal(0.0521040950000000))*(x141))));
IkReal x500=((x252)+(x253));
IkReal x501=((x381)+(x378));
IkReal x502=((x380)+(x379));
IkReal x503=((x397)+(x398));
IkReal x504=((x396)+(x399));
IkReal x505=((x454)+(x455));
IkReal x506=((x362)+(x363));
IkReal x507=((x382)+(x391));
IkReal x508=((x364)+(x365));
IkReal x509=((x403)+(x407));
IkReal x510=((x401)+(x411));
IkReal x511=((x336)+(x348));
IkReal x512=((x375)+(x374));
IkReal x513=((x395)+(x394));
IkReal x514=((x456)+(x457));
IkReal x515=((x429)+(x428));
IkReal x516=((x452)+(x453));
IkReal x517=((x458)+(x459));
IkReal x518=((x393)+(x392));
IkReal x519=((x439)+(x437));
IkReal x520=((x427)+(x426));
IkReal x521=((x337)+(x343));
IkReal x522=((x443)+(x450));
IkReal x523=((x498)+(x497));
IkReal x524=((((IkReal(0.0453900000000000))*(x167)))+(x518)+(((IkReal(0.0453900000000000))*(x110))));
IkReal x525=((x353)+(x368)+(x360)+(x367));
IkReal x526=((x377)+(x376)+(x373)+(x372));
IkReal x527=((x325)+(x326)+(x327)+(x328));
IkReal x528=((x331)+(x330)+(x324)+(x329));
IkReal x529=((x371)+(x370)+(x369)+(x366));
IkReal x530=((x333)+(x332)+(x335)+(x334));
IkReal x531=((x386)+(x387)+(x383)+(x388));
IkReal x532=((x339)+(x338)+(x347)+(x345));
IkReal x533=((x351)+(x350)+(x353)+(x360));
IkReal x534=((x308)+(x309)+(x311)+(x310));
IkReal x535=((x448)+(x445)+(x447)+(x451));
IkReal x536=((x417)+(x415)+(x418)+(x424));
IkReal x537=((x239)+(x240)+(x245)+(x244));
IkReal x538=((x416)+(x425)+(x423)+(x420));
IkReal x539=((x320)+(x321)+(x322)+(x323));
IkReal x540=((x307)+(x301)+(x290)+(x293));
IkReal x541=((x315)+(x314)+(x313)+(x312));
IkReal x542=((x438)+(x436)+(x441)+(x440));
IkReal x543=((x319)+(x318)+(x317)+(x316));
IkReal x544=((x355)+(x357)+(x356)+(x359));
IkReal x545=((x417)+(x415)+(x431)+(x435));
IkReal x546=((x254)+(x255)+(x256)+(x257));
IkReal x547=((x480)+(x477)+(x478)+(x479));
IkReal x548=((((IkReal(0.0453900000000000))*(x154)))+(((r01)*(x93)))+(((IkReal(0.0521040950000000))*(x98)))+(x508)+(((IkReal(0.0453900000000000))*(x100))));
IkReal x549=((((IkReal(0.0453900000000000))*(x136)))+(((IkReal(0.0521040950000000))*(x131)))+(((IkReal(0.0521040950000000))*(x115)))+(x506)+(((IkReal(0.0453900000000000))*(x104))));
IkReal x550=((((rxp1_0)*(x93)))+(((IkReal(0.0521040950000000))*(x133)))+(((IkReal(0.0453900000000000))*(x169)))+(((IkReal(0.0453900000000000))*(x190)))+(x515));
IkReal x551=((((IkReal(0.0453900000000000))*(x95)))+(((IkReal(0.0521040950000000))*(x205)))+(((IkReal(0.0521040950000000))*(x194)))+(x520)+(((IkReal(0.0453900000000000))*(x108))));
IkReal x552=((x265)+(x264)+(x267)+(x266)+(x269)+(x268));
IkReal x553=((x250)+(x251)+(x242)+(x241)+(x247)+(x248));
IkReal x554=((x216)+(x221)+(x223)+(x222)+(x232)+(x237));
IkReal x555=((x277)+(x274)+(x275)+(x278)+(x241)+(x247));
IkReal x556=((x287)+(x286)+(x285)+(x284)+(x282)+(x281));
IkReal x557=((x216)+(x221)+(x223)+(x222)+(x283)+(x280));
IkReal x558=((x384)+(x385)+(x389)+(x390)+(x488)+(x487));
IkReal x559=((x496)+(x495)+(x449)+(x444)+(x446)+(x442)+(pz));
IkReal x560=((x304)+(x305)+(x300)+(x298)+(x291)+(x296)+(x297)+(x288));
IkReal x561=((x342)+(x340)+(x341)+(x346)+(x344)+(x349)+(x481)+(x482));
IkReal x562=((x352)+(x354)+(x358)+(x361)+(x483)+(x485)+(x484)+(x486));
IkReal x563=((x492)+(x493)+(x491)+(x494)+(x414)+(x419)+(x422)+(x421));
IkReal x564=((x258)+(x259)+(x261)+(x260)+(x263)+(x262)+(x546));
IkReal x565=((x238)+(x243)+(x246)+(x249)+(x469)+(x468)+(x467)+(x470)+(x471)+(x472));
IkReal x566=((x489)+(x490)+(x400)+(x402)+(x405)+(x404)+(x406)+(x409)+(x408)+(x412)+(x413)+(x410));
IkReal x567=((x489)+(x490)+(x400)+(x405)+(x406)+(x409)+(x412)+(x410)+(x430)+(x432)+(x433)+(x434));
IkReal x568=((x306)+(x302)+(x303)+(x299)+(x292)+(x294)+(x295)+(x289)+(x474)+(x475)+(x476)+(x473));
IkReal x569=((IkReal(0.0946500000000000))+(x217)+(x218)+(x219)+(x229)+(x226)+(x231)+(x236)+(x235)+(x276)+(x272)+(x273)+(x270)+(x271)+(x279)+(x463)+(x462)+(x461)+(x466)+(x465)+(x464));
IkReal x570=((IkReal(0.0946500000000000))+(x217)+(x218)+(x219)+(x229)+(x228)+(x220)+(x225)+(x224)+(x227)+(x226)+(x233)+(x230)+(x231)+(x236)+(x234)+(x235)+(x463)+(x462)+(x461)+(x466)+(x465)+(x464));
op[0]=((((IkReal(-1.00000000000000))*(x537)))+(((IkReal(-1.00000000000000))*(x554)))+(x553)+(x570)+(((IkReal(-1.00000000000000))*(x565))));
op[1]=((IkReal(-1.63450000000000))+(((IkReal(0.0118573004550000))*(x154)))+(((IkReal(-0.181274075518250))*(x131)))+(((IkReal(-0.181274075518250))*(x115)))+(((IkReal(0.181274075518250))*(x192)))+(((IkReal(1.33436934500000))*(x168)))+(((IkReal(-0.0872823000000000))*(x91)))+(((IkReal(-0.0118573004550000))*(x136)))+(((IkReal(0.181274075518250))*(x98)))+(((IkReal(-1.00000000000000))*(x546)))+(((IkReal(1.33436934500000))*(x145)))+(((IkReal(-0.0118573004550000))*(x104)))+(x500)+(((IkReal(0.0118573004550000))*(x100)))+(((IkReal(-0.0872823000000000))*(x129))));
op[2]=((((IkReal(-1.00000000000000))*(x537)))+(((IkReal(-1.00000000000000))*(x553)))+(x554)+(x570)+(((IkReal(-1.00000000000000))*(x565))));
op[3]=((IkReal(-0.850000000000000))+(x500)+(x552)+(((IkReal(-1.00000000000000))*(x564))));
op[4]=((((IkReal(0.106800000000000))*(x113)))+(((IkReal(0.0149314514635000))*(x149)))+(((IkReal(-0.109911310000000))*(x202)))+(((IkReal(-0.0149314514635000))*(x135)))+(((IkReal(0.0145087800000000))*(x196)))+(((IkReal(0.0145087800000000))*(x182)))+(((IkReal(-0.0145087800000000))*(x184)))+(((IkReal(0.0149314514635000))*(x105)))+(((IkReal(-0.109911310000000))*(x120)))+(((IkReal(-0.0149314514635000))*(x112)))+(((IkReal(-0.0145087800000000))*(x156)))+(((IkReal(0.106800000000000))*(x195))));
op[5]=((IkReal(0.850000000000000))+(((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-1.00000000000000))*(x552)))+(x564));
op[6]=((((IkReal(-1.00000000000000))*(x555)))+(((IkReal(-1.00000000000000))*(x556)))+(x557)+(x569)+(((IkReal(-1.00000000000000))*(x565))));
op[7]=((IkReal(0.0655000000000000))+(((IkReal(9.77230182500000e-5))*(x115)))+(((IkReal(-0.000475162545000000))*(x154)))+(((IkReal(-9.77230182500000e-5))*(x192)))+(((IkReal(-1.00000000000000))*(x500)))+(((IkReal(-0.000719345000000000))*(x145)))+(((IkReal(0.00349770000000000))*(x129)))+(((IkReal(-9.77230182500000e-5))*(x98)))+(((IkReal(-0.000719345000000000))*(x168)))+(x546)+(((IkReal(0.000475162545000000))*(x136)))+(((IkReal(0.000475162545000000))*(x104)))+(((IkReal(-0.000475162545000000))*(x100)))+(((IkReal(0.00349770000000000))*(x91)))+(((IkReal(9.77230182500000e-5))*(x131))));
op[8]=((((IkReal(-1.00000000000000))*(x557)))+(((IkReal(-1.00000000000000))*(x556)))+(x555)+(x569)+(((IkReal(-1.00000000000000))*(x565))));
op[9]=((((IkReal(-1.00000000000000))*(x540)))+(((IkReal(-1.00000000000000))*(x547)))+(x534)+(x568)+(x560));
op[10]=((IkReal(-2.00000000000000))+(((IkReal(1.33436934500000))*(x211)))+(((IkReal(-0.0872823000000000))*(x188)))+(((IkReal(-0.0872823000000000))*(x191)))+(((r00)*(x148)))+(((IkReal(-0.0872823000000000))*(x158)))+(((IkReal(-0.0872823000000000))*(x157)))+(((IkReal(-1.00000000000000))*(x541)))+(((r01)*(x114)))+(((r11)*(x197))));
op[11]=((((IkReal(-1.00000000000000))*(x534)))+(((IkReal(-1.00000000000000))*(x547)))+(x540)+(x568)+(x560));
op[12]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x543)))+(((IkReal(-1.00000000000000))*(x541)))+(x539));
op[13]=((((IkReal(0.106800000000000))*(x161)))+(((IkReal(-1.00000000000000))*(r11)*(x99)))+(((r00)*(x155)))+(((r11)*(x127)))+(((r10)*(x198)))+(((IkReal(-0.109911310000000))*(x210)))+(((IkReal(-0.109911310000000))*(x178)))+(((IkReal(-0.109911310000000))*(x89))));
op[14]=((IkReal(2.00000000000000))+(((IkReal(-1.00000000000000))*(x539)))+(x541)+(x543));
op[15]=((((IkReal(-1.00000000000000))*(x530)))+(((IkReal(-1.00000000000000))*(x527)))+(((IkReal(-1.00000000000000))*(x547)))+(x540)+(x528)+(x568));
op[16]=((IkReal(2.00000000000000))+(((IkReal(-0.000719345000000000))*(x159)))+(((IkReal(-0.000719345000000000))*(x204)))+(x541)+(((IkReal(-0.000719345000000000))*(x211)))+(((IkReal(0.00349770000000000))*(x188)))+(((IkReal(-1.00000000000000))*(r11)*(x163)))+(((IkReal(0.00349770000000000))*(x158)))+(((IkReal(0.00349770000000000))*(x157)))+(((IkReal(0.00349770000000000))*(x191))));
op[17]=((((IkReal(-1.00000000000000))*(x530)))+(((IkReal(-1.00000000000000))*(x540)))+(((IkReal(-1.00000000000000))*(x547)))+(x527)+(x528)+(x568));
op[18]=((((IkReal(-1.00000000000000))*(x521)))+(((IkReal(-1.00000000000000))*(x544)))+(x533)+(x532)+(x561)+(((IkReal(-1.00000000000000))*(x511)))+(((IkReal(-1.00000000000000))*(x562))));
op[19]=((((IkReal(-0.0872823000000000))*(x100)))+(((IkReal(1.33436934500000))*(x131)))+(((IkReal(-1.00000000000000))*(x508)))+(((IkReal(-1.33436934500000))*(x98)))+(((IkReal(0.0872823000000000))*(x104)))+(((IkReal(0.0872823000000000))*(x136)))+(((IkReal(-0.0872823000000000))*(x154)))+(((r11)*(x114)))+(x506)+(((IkReal(-1.33436934500000))*(x192))));
op[20]=((((IkReal(-1.00000000000000))*(x533)))+(((IkReal(-1.00000000000000))*(x544)))+(x532)+(x521)+(x511)+(x561)+(((IkReal(-1.00000000000000))*(x562))));
op[21]=((((IkReal(-1.00000000000000))*(x548)))+(x549));
op[22]=((((IkReal(-0.106800000000000))*(x196)))+(((IkReal(0.109911310000000))*(x112)))+(((r01)*(x99)))+(((IkReal(-0.109911310000000))*(x105)))+(((r10)*(x155)))+(((IkReal(-0.109911310000000))*(x149)))+(((IkReal(0.106800000000000))*(x184)))+(((IkReal(-1.00000000000000))*(r01)*(x127))));
op[23]=((((IkReal(-1.00000000000000))*(x549)))+(x548));
op[24]=((((IkReal(-1.00000000000000))*(x526)))+(((IkReal(-1.00000000000000))*(x525)))+(x529)+(x512)+(x511)+(x561)+(((IkReal(-1.00000000000000))*(x562))));
op[25]=((((r01)*(x163)))+(((IkReal(0.00349770000000000))*(x100)))+(((IkReal(-1.00000000000000))*(x506)))+(((IkReal(-0.000719345000000000))*(x115)))+(x508)+(((IkReal(-0.000719345000000000))*(x131)))+(((IkReal(0.000719345000000000))*(x98)))+(((IkReal(-0.00349770000000000))*(x136)))+(((IkReal(-0.00349770000000000))*(x104)))+(((IkReal(0.00349770000000000))*(x154))));
op[26]=((((IkReal(-1.00000000000000))*(x526)))+(x525)+(x529)+(x561)+(((IkReal(-1.00000000000000))*(x512)))+(((IkReal(-1.00000000000000))*(x511)))+(((IkReal(-1.00000000000000))*(x562))));
op[27]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x501)))+(((IkReal(-1.00000000000000))*(x531)))+(((IkReal(-1.00000000000000))*(x558)))+(x502)+(x507));
op[28]=((((IkReal(0.0872823000000000))*(x167)))+(((IkReal(0.0872823000000000))*(x110)))+(((IkReal(-1.33436934500000))*(x130)))+(x518)+(((IkReal(-1.33436934500000))*(x141))));
op[29]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x507)))+(((IkReal(-1.00000000000000))*(x531)))+(((IkReal(-1.00000000000000))*(x558)))+(x501)+(x502));
op[30]=((((IkReal(-1.00000000000000))*(x499)))+(x524));
op[31]=((IkReal(-4.00000000000000))+(((IkReal(-0.106800000000000))*(x193)))+(((IkReal(0.109911310000000))*(x107)))+(((IkReal(0.109911310000000))*(x146)))+(((IkReal(-0.106800000000000))*(x181))));
op[32]=((((IkReal(-1.00000000000000))*(x524)))+(x499));
op[33]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x503)))+(((IkReal(-1.00000000000000))*(x507)))+(((IkReal(-1.00000000000000))*(x558)))+(x502)+(x504)+(x513));
op[34]=((((IkReal(-0.00349770000000000))*(x167)))+(((IkReal(0.000719345000000000))*(x141)))+(((IkReal(-1.00000000000000))*(x518)))+(((IkReal(-0.00349770000000000))*(x110)))+(((IkReal(0.000719345000000000))*(x130))));
op[35]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x504)))+(((IkReal(-1.00000000000000))*(x503)))+(((IkReal(-1.00000000000000))*(x558)))+(x502)+(x507)+(x513));
op[36]=((IkReal(-0.817250000000000))+(((IkReal(-1.00000000000000))*(x509)))+(((IkReal(-1.00000000000000))*(x538)))+(x536)+(x566)+(((IkReal(-1.00000000000000))*(x510)))+(((IkReal(-1.00000000000000))*(x563))));
op[37]=((((IkReal(0.0872823000000000))*(x95)))+(((IkReal(-1.00000000000000))*(rxp1_0)*(x197)))+(((IkReal(-0.0872823000000000))*(x190)))+(((IkReal(-0.0872823000000000))*(x169)))+(((IkReal(0.0872823000000000))*(x108)))+(((IkReal(-1.33436934500000))*(x133)))+(((rxp1_1)*(x114)))+(((rxp0_1)*(x148)))+(x520)+(((IkReal(-1.00000000000000))*(x515))));
op[38]=((IkReal(0.817250000000000))+(((IkReal(-1.00000000000000))*(x538)))+(((IkReal(-1.00000000000000))*(x536)))+(x509)+(x510)+(x566)+(((IkReal(-1.00000000000000))*(x563))));
op[39]=((((IkReal(-1.00000000000000))*(x550)))+(x551));
op[40]=((IkReal(1.70000000000000))+(((rxp1_0)*(x99)))+(((IkReal(0.106800000000000))*(x137)))+(((IkReal(-1.00000000000000))*(rxp1_0)*(x127)))+(((rxp0_1)*(x155)))+(((IkReal(0.109911310000000))*(x176)))+(((IkReal(-1.00000000000000))*(rxp0_0)*(x198)))+(((IkReal(-0.109911310000000))*(x173)))+(((IkReal(-0.109911310000000))*(x177))));
op[41]=((((IkReal(-1.00000000000000))*(x551)))+(x550));
op[42]=((IkReal(0.0327500000000000))+(((IkReal(-1.00000000000000))*(x545)))+(((IkReal(-1.00000000000000))*(x542)))+(x509)+(x519)+(x567)+(((IkReal(-1.00000000000000))*(x563))));
op[43]=((((IkReal(0.00349770000000000))*(x169)))+(((IkReal(-1.00000000000000))*(x520)))+(((IkReal(-0.000719345000000000))*(x194)))+(((rxp1_0)*(x163)))+(((IkReal(-0.000719345000000000))*(x205)))+(x515)+(((IkReal(-0.00349770000000000))*(x95)))+(((IkReal(-0.00349770000000000))*(x108)))+(((IkReal(0.000719345000000000))*(x133)))+(((IkReal(0.00349770000000000))*(x190))));
op[44]=((IkReal(-0.0327500000000000))+(((IkReal(-1.00000000000000))*(x509)))+(((IkReal(-1.00000000000000))*(x542)))+(x545)+(x567)+(((IkReal(-1.00000000000000))*(x519)))+(((IkReal(-1.00000000000000))*(x563))));
op[45]=((((IkReal(-1.00000000000000))*(x523)))+(((IkReal(-1.00000000000000))*(x522)))+(x559)+(x535)+(x516));
op[46]=((((IkReal(-1.00000000000000))*(x505)))+(((IkReal(0.126298058504250))*(x141)))+(((IkReal(0.126298058504250))*(x130)))+(((IkReal(-0.00826126969500000))*(x167)))+(((IkReal(-0.00826126969500000))*(x110))));
op[47]=((((IkReal(-1.00000000000000))*(x523)))+(x559)+(x535)+(x522)+(((IkReal(-1.00000000000000))*(x516))));
op[48]=((IkReal(0.784500000000000))+(((IkReal(-1.00000000000000))*(x505)))+(x517)+(((IkReal(-1.00000000000000))*(x514))));
op[49]=((((IkReal(-0.0104031054915000))*(x146)))+(((IkReal(-0.0104031054915000))*(x107)))+(((IkReal(0.0101086200000000))*(x181)))+(((IkReal(0.0101086200000000))*(x193))));
op[50]=((IkReal(0.784500000000000))+(x505)+(x514)+(((IkReal(-1.00000000000000))*(x517))));
op[51]=((((IkReal(0.00309978750000000))*(x101)))+(((IkReal(-0.000168993079125000))*(x146)))+(((IkReal(-0.00242572735012500))*(x187)))+(((IkReal(-1.00000000000000))*(x523)))+(((IkReal(0.00309978750000000))*(x90)))+(((IkReal(-0.00242572735012500))*(x128)))+(x559)+(x522)+(((IkReal(-0.000168993079125000))*(x107))));
op[52]=((((IkReal(0.000331057305000000))*(x167)))+(((IkReal(-6.80860042500000e-5))*(x141)))+(((IkReal(-6.80860042500000e-5))*(x130)))+(x505)+(((IkReal(0.000331057305000000))*(x110))));
IkReal x571=((gconst7_7)*(r01));
IkReal x572=((gconst0_3)*(r20));
IkReal x573=((gconst1_3)*(r21));
IkReal x574=((gconst4_0)*(r11));
IkReal x575=((gconst0_1)*(npx));
IkReal x576=((gconst1_3)*(npy));
IkReal x577=((gconst4_0)*(r01));
IkReal x578=((gconst6_7)*(r10));
IkReal x579=((gconst0_7)*(npx));
IkReal x580=((gconst6_0)*(r10));
IkReal x581=((gconst7_0)*(r01));
IkReal x582=((IkReal(0.0257164050000000))*(r01));
IkReal x583=((gconst4_7)*(pz));
IkReal x584=((gconst3_0)*(r00));
IkReal x585=((gconst4_7)*(r11));
IkReal x586=((gconst3_0)*(r10));
IkReal x587=((gconst6_3)*(r10));
IkReal x588=((gconst0_0)*(r20));
IkReal x589=((gconst3_2)*(r00));
IkReal x590=((gconst4_1)*(r01));
IkReal x591=((IkReal(2.66873869000000))*(gconst7_7));
IkReal x592=((gconst7_7)*(r11));
IkReal x593=((gconst4_2)*(r01));
IkReal x594=((IkReal(0.135850000000000))*(pp));
IkReal x595=((gconst0_6)*(npx));
IkReal x596=((gconst0_5)*(npx));
IkReal x597=((IkReal(0.189300000000000))*(pz));
IkReal x598=((gconst3_7)*(r00));
IkReal x599=((gconst7_0)*(r11));
IkReal x600=((gconst4_7)*(r01));
IkReal x601=((gconst6_1)*(r10));
IkReal x602=((gconst1_0)*(npy));
IkReal x603=((gconst6_2)*(r10));
IkReal x604=((gconst1_2)*(npy));
IkReal x605=((IkReal(0.0257164050000000))*(pz));
IkReal x606=((gconst4_3)*(r01));
IkReal x607=((gconst0_6)*(r20));
IkReal x608=((IkReal(0.213600000000000))*(gconst6_6));
IkReal x609=((IkReal(0.106800000000000))*(gconst4_5));
IkReal x610=((gconst0_2)*(r20));
IkReal x611=((gconst1_1)*(npy));
IkReal x612=((gconst0_3)*(npx));
IkReal x613=((gconst1_6)*(r21));
IkReal x614=((gconst3_7)*(r10));
IkReal x615=((gconst1_7)*(npy));
IkReal x616=((gconst1_7)*(r21));
IkReal x617=((gconst3_1)*(r00));
IkReal x618=((gconst6_1)*(r00));
IkReal x619=((IkReal(1.56900000000000))*(gconst4_3));
IkReal x620=((IkReal(0.817250000000000))*(r11));
IkReal x621=((IkReal(0.0267000000000000))*(gconst3_5));
IkReal x622=((gconst0_2)*(npx));
IkReal x623=((gconst7_2)*(r01));
IkReal x624=((gconst0_7)*(r20));
IkReal x625=((gconst6_6)*(r10));
IkReal x626=((gconst0_0)*(npx));
IkReal x627=((IkReal(0.0534000000000000))*(gconst3_6));
IkReal x628=((gconst6_0)*(r00));
IkReal x629=((gconst4_6)*(r01));
IkReal x630=((gconst6_7)*(r00));
IkReal x631=((gconst3_3)*(r10));
IkReal x632=((gconst0_5)*(r20));
IkReal x633=((gconst7_1)*(r11));
IkReal x634=((gconst6_3)*(r00));
IkReal x635=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x636=((gconst6_5)*(r10));
IkReal x637=((gconst3_1)*(r10));
IkReal x638=((IkReal(0.106800000000000))*(gconst7_5));
IkReal x639=((gconst3_2)*(r10));
IkReal x640=((gconst3_6)*(r00));
IkReal x641=((gconst6_2)*(r00));
IkReal x642=((gconst3_5)*(r00));
IkReal x643=((gconst7_4)*(r11));
IkReal x644=((gconst3_3)*(r00));
IkReal x645=((IkReal(1.56900000000000))*(gconst7_3));
IkReal x646=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x647=((gconst1_6)*(npy));
IkReal x648=((gconst7_6)*(r11));
IkReal x649=((gconst7_2)*(r11));
IkReal x650=((gconst7_3)*(r11));
IkReal x651=((gconst7_0)*(rxp1_1));
IkReal x652=((gconst6_7)*(rxp0_1));
IkReal x653=((gconst4_6)*(r11));
IkReal x654=((IkReal(1.00000000000000))*(pp));
IkReal x655=((IkReal(0.213600000000000))*(gconst3_6));
IkReal x656=((gconst4_5)*(r01));
IkReal x657=((gconst7_5)*(r11));
IkReal x658=((gconst3_0)*(rxp0_0));
IkReal x659=((IkReal(0.0946500000000000))*(pp));
IkReal x660=((gconst3_7)*(rxp0_0));
IkReal x661=((gconst4_2)*(r11));
IkReal x662=((gconst7_1)*(r01));
IkReal x663=((gconst6_4)*(r10));
IkReal x664=((gconst6_0)*(rxp0_1));
IkReal x665=((gconst1_2)*(r21));
IkReal x666=((IkReal(0.109150000000000))*(r01));
IkReal x667=((gconst1_0)*(r21));
IkReal x668=((gconst1_5)*(r21));
IkReal x669=((gconst1_5)*(npy));
IkReal x670=((gconst4_7)*(rxp1_0));
IkReal x671=((IkReal(0.106800000000000))*(gconst3_5));
IkReal x672=((gconst4_1)*(r11));
IkReal x673=((gconst3_4)*(r00));
IkReal x674=((IkReal(0.213600000000000))*(gconst7_6));
IkReal x675=((IkReal(0.0179172450000000))*(pz));
IkReal x676=((gconst4_0)*(rxp1_0));
IkReal x677=((gconst4_6)*(rxp1_0));
IkReal x678=((gconst7_3)*(r01));
IkReal x679=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x680=((gconst7_7)*(rxp1_1));
IkReal x681=((IkReal(0.0145087800000000))*(x642));
IkReal x682=((IkReal(0.106800000000000))*(x669));
IkReal x683=((IkReal(0.106800000000000))*(x596));
IkReal x684=((IkReal(0.0145087800000000))*(x656));
IkReal x685=((IkReal(0.0145087800000000))*(x636));
IkReal x686=((IkReal(0.0145087800000000))*(x657));
IkReal x687=((IkReal(0.0141566826115000))*(x592));
IkReal x688=((IkReal(0.213148650000000))*(x650));
IkReal x689=((IkReal(0.213148650000000))*(x587));
IkReal x690=((IkReal(0.0141566826115000))*(x578));
IkReal x691=((IkReal(0.104208190000000))*(x579));
IkReal x692=((IkReal(0.213148650000000))*(x606));
IkReal x693=((IkReal(0.213148650000000))*(x644));
IkReal x694=((IkReal(0.0141566826115000))*(x598));
IkReal x695=((IkReal(0.104208190000000))*(x615));
IkReal x696=((IkReal(1.56900000000000))*(x576));
IkReal x697=((IkReal(0.0141566826115000))*(x600));
IkReal x698=((IkReal(1.56900000000000))*(x612));
IkReal x699=((IkReal(0.00725439000000000))*(x640));
IkReal x700=((IkReal(0.00725439000000000))*(x629));
IkReal x701=((IkReal(0.0534000000000000))*(x595));
IkReal x702=((IkReal(0.0534000000000000))*(x647));
IkReal x703=((IkReal(0.00725439000000000))*(x648));
IkReal x704=((IkReal(0.00725439000000000))*(x625));
IkReal x705=((IkReal(0.0534000000000000))*(x653));
IkReal x706=((r01)*(x646));
IkReal x707=((IkReal(1.33722090500000))*(x628));
IkReal x708=((IkReal(1.33722090500000))*(x574));
IkReal x709=((r00)*(x679));
IkReal x710=((r10)*(x627));
IkReal x711=((IkReal(1.33722090500000))*(x586));
IkReal x712=((IkReal(1.33722090500000))*(x581));
IkReal x713=((r10)*(x671));
IkReal x714=((r00)*(x635));
IkReal x715=((r11)*(x609));
IkReal x716=((r01)*(x638));
IkReal x717=((IkReal(0.104208190000000))*(x571));
IkReal x718=((IkReal(1.56900000000000))*(x634));
IkReal x719=((IkReal(0.104208190000000))*(x614));
IkReal x720=((IkReal(0.104208190000000))*(x585));
IkReal x721=((r01)*(x645));
IkReal x722=((IkReal(0.104208190000000))*(x630));
IkReal x723=((r11)*(x619));
IkReal x724=((IkReal(1.56900000000000))*(x631));
IkReal x725=((IkReal(0.00357090500000000))*(x581));
IkReal x726=((IkReal(0.00357090500000000))*(x628));
IkReal x727=((IkReal(0.00357090500000000))*(x586));
IkReal x728=((IkReal(0.00357090500000000))*(x574));
IkReal x729=((r10)*(x635));
IkReal x730=((r11)*(x638));
IkReal x731=((r01)*(x609));
IkReal x732=((IkReal(0.106800000000000))*(x642));
IkReal x733=((IkReal(0.104208190000000))*(x598));
IkReal x734=((IkReal(0.104208190000000))*(x600));
IkReal x735=((IkReal(1.56900000000000))*(x644));
IkReal x736=((IkReal(1.56900000000000))*(x606));
IkReal x737=((IkReal(1.56900000000000))*(x587));
IkReal x738=((r11)*(x645));
IkReal x739=((IkReal(0.104208190000000))*(x578));
IkReal x740=((IkReal(0.104208190000000))*(x592));
IkReal x741=((IkReal(0.0534000000000000))*(x625));
IkReal x742=((r11)*(x646));
IkReal x743=((IkReal(0.0534000000000000))*(x629));
IkReal x744=((r00)*(x627));
IkReal x745=((IkReal(0.106800000000000))*(x668));
IkReal x746=((IkReal(0.106800000000000))*(x632));
IkReal x747=((IkReal(0.104208190000000))*(x624));
IkReal x748=((IkReal(1.56900000000000))*(x572));
IkReal x749=((IkReal(0.104208190000000))*(x616));
IkReal x750=((IkReal(1.56900000000000))*(x573));
IkReal x751=((IkReal(0.0534000000000000))*(x607));
IkReal x752=((IkReal(0.0534000000000000))*(x613));
IkReal x753=((rxp1_1)*(x638));
IkReal x754=((rxp0_1)*(x635));
IkReal x755=((rxp1_0)*(x609));
IkReal x756=((rxp0_0)*(x671));
IkReal x757=((IkReal(1.56900000000000))*(gconst3_3)*(rxp0_0));
IkReal x758=((IkReal(0.104208190000000))*(x670));
IkReal x759=((IkReal(0.104208190000000))*(x660));
IkReal x760=((rxp1_0)*(x619));
IkReal x761=((IkReal(0.104208190000000))*(x680));
IkReal x762=((IkReal(0.104208190000000))*(x652));
IkReal x763=((IkReal(1.56900000000000))*(gconst6_3)*(rxp0_1));
IkReal x764=((rxp1_1)*(x645));
IkReal x765=((rxp1_1)*(x646));
IkReal x766=((rxp0_1)*(x679));
IkReal x767=((rxp0_0)*(x627));
IkReal x768=((IkReal(0.0534000000000000))*(x677));
IkReal x769=((IkReal(0.126567958658250))*(x588));
IkReal x770=((IkReal(0.126567958658250))*(x667));
IkReal x771=((IkReal(0.00505431000000000))*(x607));
IkReal x772=((IkReal(0.00505431000000000))*(x613));
IkReal x773=((IkReal(0.0101086200000000))*(x668));
IkReal x774=((IkReal(0.0101086200000000))*(x632));
IkReal x775=((IkReal(0.148505850000000))*(x572));
IkReal x776=((IkReal(0.00986330518350000))*(x616));
IkReal x777=((IkReal(0.00986330518350000))*(x624));
IkReal x778=((IkReal(0.148505850000000))*(x573));
IkReal x779=((IkReal(0.000337986158250000))*(x588));
IkReal x780=((IkReal(0.000337986158250000))*(x667));
IkReal x781=((IkReal(0.111023412500000))*(x587));
IkReal x782=((IkReal(0.0148280275000000))*(gconst4_4)*(r01));
IkReal x783=((IkReal(0.0257164050000000))*(x575));
IkReal x784=((IkReal(0.00349357361925000))*(x590));
IkReal x785=((IkReal(0.00362719500000000))*(x636));
IkReal x786=((IkReal(0.668610452500000))*(x579));
IkReal x787=((IkReal(0.641196607500000))*(x604));
IkReal x788=((IkReal(0.0871065591288750))*(x589));
IkReal x789=((IkReal(0.0257164050000000))*(x611));
IkReal x790=((IkReal(0.0871065591288750))*(x593));
IkReal x791=((IkReal(0.111023412500000))*(x650));
IkReal x792=((IkReal(0.0148280275000000))*(x673));
IkReal x793=((IkReal(0.00362719500000000))*(x657));
IkReal x794=((IkReal(0.641196607500000))*(x622));
IkReal x795=((IkReal(0.00349357361925000))*(x617));
IkReal x796=((IkReal(0.0908307299721250))*(x598));
IkReal x797=((IkReal(0.109150000000000))*(gconst1_4)*(npy));
IkReal x798=((IkReal(0.0908307299721250))*(x600));
IkReal x799=((IkReal(0.668610452500000))*(x615));
IkReal x800=((IkReal(0.109150000000000))*(gconst0_4)*(npx));
IkReal x801=((IkReal(0.0148280275000000))*(x663));
IkReal x802=((IkReal(0.0871065591288750))*(x649));
IkReal x803=((IkReal(0.00362719500000000))*(x656));
IkReal x804=((IkReal(0.817250000000000))*(x576));
IkReal x805=((IkReal(0.0267000000000000))*(x596));
IkReal x806=((IkReal(0.0267000000000000))*(x669));
IkReal x807=((IkReal(0.00362719500000000))*(x642));
IkReal x808=((IkReal(0.0148280275000000))*(x643));
IkReal x809=((IkReal(0.111023412500000))*(x644));
IkReal x810=((IkReal(0.0871065591288750))*(x603));
IkReal x811=((IkReal(0.00349357361925000))*(x633));
IkReal x812=((IkReal(0.0908307299721250))*(x578));
IkReal x813=((IkReal(0.111023412500000))*(x606));
IkReal x814=((IkReal(0.817250000000000))*(x612));
IkReal x815=((IkReal(0.00349357361925000))*(x601));
IkReal x816=((IkReal(0.0908307299721250))*(x592));
IkReal x817=((IkReal(0.00616623150000000))*(x617));
IkReal x818=((IkReal(0.0453900000000000))*(x575));
IkReal x819=((IkReal(0.0521040950000000))*(x602));
IkReal x820=((IkReal(0.00707834130575000))*(x577));
IkReal x821=((IkReal(0.00707834130575000))*(x584));
IkReal x822=((IkReal(0.0521040950000000))*(x626));
IkReal x823=((IkReal(0.00616623150000000))*(x590));
IkReal x824=((IkReal(0.0453900000000000))*(x611));
IkReal x825=((IkReal(0.00616623150000000))*(x601));
IkReal x826=((IkReal(0.00707834130575000))*(x599));
IkReal x827=((IkReal(0.00707834130575000))*(x580));
IkReal x828=((IkReal(0.00616623150000000))*(x633));
IkReal x829=((IkReal(0.000242553722125000))*(x592));
IkReal x830=((IkReal(0.00348161712112500))*(x649));
IkReal x831=((IkReal(0.000242553722125000))*(x578));
IkReal x832=((IkReal(0.00348161712112500))*(x603));
IkReal x833=((IkReal(0.00444908750000000))*(x650));
IkReal x834=((IkReal(0.00444908750000000))*(x587));
IkReal x835=((IkReal(0.00444908750000000))*(x606));
IkReal x836=((IkReal(0.00348161712112500))*(x593));
IkReal x837=((IkReal(0.00444908750000000))*(x644));
IkReal x838=((IkReal(0.0327500000000000))*(x612));
IkReal x839=((IkReal(0.0256283925000000))*(x622));
IkReal x840=((IkReal(0.000242553722125000))*(x598));
IkReal x841=((IkReal(0.000242553722125000))*(x600));
IkReal x842=((IkReal(0.0256283925000000))*(x604));
IkReal x843=((IkReal(0.00178545250000000))*(x615));
IkReal x844=((IkReal(0.00178545250000000))*(x579));
IkReal x845=((IkReal(0.00348161712112500))*(x589));
IkReal x846=((IkReal(0.0327500000000000))*(x576));
IkReal x847=((IkReal(0.109150000000000))*(gconst6_4)*(r00));
IkReal x848=((IkReal(0.668610452500000))*(x630));
IkReal x849=((IkReal(0.668610452500000))*(x571));
IkReal x850=((IkReal(0.668610452500000))*(x585));
IkReal x851=((IkReal(0.109150000000000))*(gconst4_4)*(r11));
IkReal x852=((IkReal(0.0257164050000000))*(x672));
IkReal x853=((IkReal(0.0257164050000000))*(x637));
IkReal x854=((IkReal(0.641196607500000))*(x639));
IkReal x855=((IkReal(0.641196607500000))*(x661));
IkReal x856=((IkReal(0.0257164050000000))*(x618));
IkReal x857=((IkReal(0.668610452500000))*(x614));
IkReal x858=((gconst7_1)*(x582));
IkReal x859=((gconst7_4)*(x666));
IkReal x860=((IkReal(0.641196607500000))*(x641));
IkReal x861=((IkReal(0.641196607500000))*(x623));
IkReal x862=((IkReal(0.109150000000000))*(gconst3_4)*(r10));
IkReal x863=((IkReal(0.817250000000000))*(x634));
IkReal x864=((IkReal(0.0267000000000000))*(gconst6_5)*(r00));
IkReal x865=((IkReal(0.817250000000000))*(x678));
IkReal x866=((r10)*(x621));
IkReal x867=((gconst4_3)*(x620));
IkReal x868=((IkReal(0.817250000000000))*(x631));
IkReal x869=((IkReal(0.0267000000000000))*(gconst4_5)*(r11));
IkReal x870=((IkReal(0.0267000000000000))*(gconst7_5)*(r01));
IkReal x871=((IkReal(0.0453900000000000))*(x672));
IkReal x872=((IkReal(0.0521040950000000))*(x628));
IkReal x873=((IkReal(0.0521040950000000))*(x586));
IkReal x874=((IkReal(0.0453900000000000))*(x662));
IkReal x875=((IkReal(0.0521040950000000))*(x581));
IkReal x876=((IkReal(0.0521040950000000))*(x574));
IkReal x877=((IkReal(0.0453900000000000))*(x618));
IkReal x878=((IkReal(0.0453900000000000))*(x637));
IkReal x879=((IkReal(0.0327500000000000))*(gconst4_3)*(r11));
IkReal x880=((IkReal(0.0256283925000000))*(x623));
IkReal x881=((IkReal(0.0256283925000000))*(x639));
IkReal x882=((IkReal(0.00178545250000000))*(x630));
IkReal x883=((IkReal(0.00178545250000000))*(x571));
IkReal x884=((IkReal(0.00178545250000000))*(x614));
IkReal x885=((IkReal(0.00178545250000000))*(x585));
IkReal x886=((IkReal(0.0327500000000000))*(x678));
IkReal x887=((IkReal(0.0327500000000000))*(x634));
IkReal x888=((IkReal(0.0256283925000000))*(x661));
IkReal x889=((IkReal(0.0256283925000000))*(x641));
IkReal x890=((IkReal(0.0327500000000000))*(x631));
IkReal x891=((IkReal(0.668610452500000))*(x592));
IkReal x892=((IkReal(0.668610452500000))*(x578));
IkReal x893=((pp)*(x593));
IkReal x894=((r00)*(x621));
IkReal x895=((IkReal(0.817250000000000))*(x606));
IkReal x896=((pp)*(x589));
IkReal x897=((IkReal(0.817250000000000))*(x644));
IkReal x898=((IkReal(0.0257164050000000))*(x601));
IkReal x899=((IkReal(0.109150000000000))*(x643));
IkReal x900=((IkReal(0.641196607500000))*(x649));
IkReal x901=((IkReal(0.0257164050000000))*(x633));
IkReal x902=((IkReal(0.0267000000000000))*(x656));
IkReal x903=((IkReal(0.641196607500000))*(x603));
IkReal x904=((IkReal(0.109150000000000))*(x663));
IkReal x905=((IkReal(0.0267000000000000))*(x636));
IkReal x906=((IkReal(0.668610452500000))*(x600));
IkReal x907=((gconst7_3)*(x620));
IkReal x908=((IkReal(0.817250000000000))*(x587));
IkReal x909=((gconst4_1)*(x582));
IkReal x910=((gconst4_4)*(x666));
IkReal x911=((IkReal(0.641196607500000))*(x593));
IkReal x912=((IkReal(0.0257164050000000))*(x617));
IkReal x913=((IkReal(0.641196607500000))*(x589));
IkReal x914=((IkReal(0.668610452500000))*(x598));
IkReal x915=((IkReal(0.109150000000000))*(x673));
IkReal x916=((IkReal(0.0267000000000000))*(x657));
IkReal x917=((x579)*(x597));
IkReal x918=((x582)*(x583));
IkReal x919=((x598)*(x605));
IkReal x920=((x597)*(x615));
IkReal x921=((x594)*(x603));
IkReal x922=((x594)*(x649));
IkReal x923=((x592)*(x605));
IkReal x924=((x578)*(x605));
IkReal x925=((x593)*(x594));
IkReal x926=((x604)*(x654));
IkReal x927=((x622)*(x654));
IkReal x928=((x589)*(x594));
IkReal x929=((x597)*(x630));
IkReal x930=((IkReal(0.189300000000000))*(r11)*(x583));
IkReal x931=((x597)*(x614));
IkReal x932=((x571)*(x597));
IkReal x933=((x654)*(x661));
IkReal x934=((x641)*(x654));
IkReal x935=((x623)*(x654));
IkReal x936=((x639)*(x654));
IkReal x937=((x578)*(x597));
IkReal x938=((x592)*(x597));
IkReal x939=((IkReal(0.189300000000000))*(r01)*(x583));
IkReal x940=((x597)*(x598));
IkReal x941=((x603)*(x654));
IkReal x942=((x649)*(x654));
IkReal x943=((x829)+(x831));
IkReal x944=((x793)+(x785));
IkReal x945=((x703)+(x704));
IkReal x946=((x732)+(x731));
IkReal x947=((x686)+(x685));
IkReal x948=((x751)+(x752));
IkReal x949=((x816)+(x812));
IkReal x950=((x775)+(x778));
IkReal x951=((x736)+(x735));
IkReal x952=((x747)+(x749));
IkReal x953=((x750)+(x748));
IkReal x954=((x768)+(x767));
IkReal x955=((x734)+(x733));
IkReal x956=((x755)+(x756));
IkReal x957=((x759)+(x758));
IkReal x958=((x764)+(x763));
IkReal x959=((x754)+(x753));
IkReal x960=((x757)+(x760));
IkReal x961=((x761)+(x762));
IkReal x962=((x742)+(x741));
IkReal x963=((x737)+(x738));
IkReal x964=((x746)+(x745));
IkReal x965=((x773)+(x774));
IkReal x966=((x777)+(x776));
IkReal x967=((x744)+(x743));
IkReal x968=((x687)+(x690));
IkReal x969=((x689)+(x688));
IkReal x970=((x730)+(x729));
IkReal x971=((x765)+(x766));
IkReal x972=((IkReal(4.00000000000000))+(x964));
IkReal x973=((((IkReal(0.181661459944250))*(x599)))+(((IkReal(0.181661459944250))*(x580)))+(x945));
IkReal x974=((((IkReal(0.000485107444250000))*(x580)))+(((IkReal(0.000485107444250000))*(x599)))+(x945));
IkReal x975=((((IkReal(1.33722090500000))*(x580)))+(((IkReal(1.33722090500000))*(x599)))+(x962));
IkReal x976=((((IkReal(1.33722090500000))*(x584)))+(((IkReal(1.33722090500000))*(x577)))+(x967));
IkReal x977=((x967)+(((IkReal(0.00357090500000000))*(x577)))+(((IkReal(0.00357090500000000))*(x584))));
IkReal x978=((((IkReal(0.00357090500000000))*(x599)))+(x962)+(((IkReal(0.00357090500000000))*(x580))));
IkReal x979=((((IkReal(1.33722090500000))*(x667)))+(((IkReal(1.33722090500000))*(x588)))+(x948));
IkReal x980=((((IkReal(0.00357090500000000))*(x667)))+(x948)+(((IkReal(0.00357090500000000))*(x588))));
IkReal x981=((((IkReal(1.33722090500000))*(x664)))+(((IkReal(1.33722090500000))*(x651)))+(x971));
IkReal x982=((((IkReal(1.33722090500000))*(x658)))+(((IkReal(1.33722090500000))*(x676)))+(x954));
IkReal x983=((((IkReal(0.00357090500000000))*(x676)))+(((IkReal(0.00357090500000000))*(x658)))+(x954));
IkReal x984=((((IkReal(0.00357090500000000))*(x664)))+(((IkReal(0.00357090500000000))*(x651)))+(x971));
IkReal x985=((x710)+(x709)+(x706)+(x705));
IkReal x986=((x805)+(x807)+(x806)+(x803));
IkReal x987=((x713)+(x715)+(x714)+(x716));
IkReal x988=((x834)+(x830)+(x832)+(x833));
IkReal x989=((x841)+(x840)+(x843)+(x844));
IkReal x990=((x683)+(x682)+(x681)+(x684));
IkReal x991=((x739)+(x740)+(x970));
IkReal x992=((x894)+(x892)+(x891)+(x902));
IkReal x993=((x718)+(x721)+(x723)+(x724));
IkReal x994=((x719)+(x717)+(x720)+(x722));
IkReal x995=((x772)+(x771)+(x770)+(x769));
IkReal x996=((x869)+(x866)+(x864)+(x870));
IkReal x997=((x916)+(x914)+(x905)+(x906));
IkReal x998=((x796)+(x799)+(x798)+(x786));
IkReal x999=((x772)+(x771)+(x779)+(x780));
IkReal x1000=((x699)+(x702)+(x700)+(x701));
IkReal x1001=((x828)+(x827)+(x826)+(x825));
IkReal x1002=((x885)+(x884)+(x883)+(x882));
IkReal x1003=((x696)+(x692)+(x693)+(x698));
IkReal x1004=((x854)+(x855)+(x861)+(x860));
IkReal x1005=((x694)+(x695)+(x697)+(x691));
IkReal x1006=((x711)+(x712)+(x708)+(x707));
IkReal x1007=((x850)+(x857)+(x849)+(x848));
IkReal x1008=((IkReal(2.00000000000000))+(x985));
IkReal x1009=((x791)+(x790)+(x794)+(x781)+(x787)+(x788));
IkReal x1010=((x814)+(x813)+(x810)+(x809)+(x804)+(x802));
IkReal x1011=((x1000)+(((IkReal(0.181661459944250))*(x577)))+(((IkReal(1.33722090500000))*(x626)))+(((IkReal(0.181661459944250))*(x584)))+(((IkReal(1.33722090500000))*(x602))));
IkReal x1012=((((IkReal(0.000485107444250000))*(x584)))+(((IkReal(0.00357090500000000))*(x626)))+(x1000)+(((IkReal(0.000485107444250000))*(x577)))+(((IkReal(0.00357090500000000))*(x602))));
IkReal x1013=((x835)+(x836)+(x837)+(x838)+(x839)+(x842)+(x845)+(x846));
IkReal x1014=((x818)+(x819)+(x817)+(x823)+(x822)+(x821)+(x820)+(x824));
IkReal x1015=((x725)+(x726)+(x727)+(x728)+(x985));
IkReal x1016=((x878)+(x871)+(x872)+(x873)+(x874)+(x875)+(x876)+(x877));
IkReal x1017=((x868)+(x867)+(x865)+(x863)+(x935)+(x934)+(x936)+(x933));
IkReal x1018=((x815)+(x811)+(x808)+(x801)+(x928)+(x926)+(x927)+(x924)+(x925)+(x923));
IkReal x1019=((x896)+(x897)+(x895)+(x893)+(x898)+(x899)+(x938)+(x937)+(x904)+(x900)+(x901)+(x903));
IkReal x1020=((x939)+(x913)+(x912)+(x911)+(x910)+(x915)+(x907)+(x908)+(x909)+(x940)+(x941)+(x942));
IkReal x1021=((x879)+(x887)+(x886)+(x881)+(x880)+(x889)+(x888)+(x890)+(x935)+(x934)+(x936)+(x933));
IkReal x1022=((x852)+(x853)+(x851)+(x856)+(x858)+(x859)+(x862)+(x847)+(x931)+(x930)+(x932)+(x929));
IkReal x1023=((IkReal(0.0946500000000000))+(x792)+(x795)+(x797)+(x782)+(x783)+(x784)+(x789)+(x800)+(x922)+(x920)+(x921)+(x919)+(x918)+(x917));
op[53]=((((IkReal(0.00243405773325000))*(gconst1_1)*(r21)))+(((IkReal(-1.00000000000000))*(x659)*(x665)))+(((IkReal(-0.00252715500000000))*(x632)))+(((IkReal(0.0103310475000000))*(gconst1_4)*(r21)))+(((IkReal(0.000168993079125000))*(x624)))+(((IkReal(0.00309978750000000))*(x573)))+(((IkReal(0.00309978750000000))*(x572)))+(((IkReal(0.00243405773325000))*(gconst0_1)*(r20)))+(((x624)*(x675)))+(((IkReal(-1.00000000000000))*(x610)*(x659)))+(pz)+(((IkReal(0.0103310475000000))*(gconst0_4)*(r20)))+(((IkReal(0.000168993079125000))*(x616)))+(((IkReal(-0.00252715500000000))*(x668)))+(((IkReal(-0.00242572735012500))*(x665)))+(((IkReal(-0.00242572735012500))*(x610)))+(((x616)*(x675))));
op[54]=((((IkReal(-1.00000000000000))*(x1011)))+(x973));
op[55]=((((IkReal(-1.00000000000000))*(x947)))+(((IkReal(-0.362548151036500))*(x578)))+(((IkReal(2.66873869000000))*(x579)))+(((IkReal(0.362548151036500))*(x598)))+(((IkReal(-0.362548151036500))*(x592)))+(((IkReal(2.66873869000000))*(x615)))+(((IkReal(0.362548151036500))*(x600)))+(x990));
op[56]=((x1011)+(((IkReal(-1.00000000000000))*(x973))));
op[57]=((((IkReal(-1.00000000000000))*(x947)))+(x1005)+(((IkReal(-1.00000000000000))*(x1003)))+(x990)+(x969)+(((IkReal(-1.00000000000000))*(x968))));
op[58]=((((IkReal(-0.0298629029270000))*(x580)))+(((IkReal(0.0298629029270000))*(x577)))+(((IkReal(0.213600000000000))*(x595)))+(((IkReal(-0.0290175600000000))*(x648)))+(((IkReal(0.0290175600000000))*(x629)))+(((IkReal(0.0290175600000000))*(x640)))+(((IkReal(-0.0290175600000000))*(x625)))+(((IkReal(-0.0298629029270000))*(x599)))+(((IkReal(0.213600000000000))*(x647)))+(((IkReal(0.219822620000000))*(x626)))+(((IkReal(0.0298629029270000))*(x584)))+(((IkReal(0.219822620000000))*(x602))));
op[59]=((((IkReal(-1.00000000000000))*(x1003)))+(((IkReal(-1.00000000000000))*(x1005)))+(((IkReal(-1.00000000000000))*(x990)))+(x968)+(x969)+(x947));
op[60]=((x1012)+(((IkReal(-1.00000000000000))*(x974))));
op[61]=((((IkReal(-0.00143869000000000))*(x579)))+(((IkReal(-1.00000000000000))*(x990)))+(((IkReal(0.000195446036500000))*(x592)))+(((IkReal(-0.000195446036500000))*(x600)))+(((IkReal(-0.000195446036500000))*(x598)))+(((IkReal(0.000195446036500000))*(x578)))+(x947)+(((IkReal(-0.00143869000000000))*(x615))));
op[62]=((((IkReal(-1.00000000000000))*(x1012)))+(x974));
op[63]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x985)))+(((IkReal(-1.00000000000000))*(x1006))));
op[64]=((((IkReal(2.66873869000000))*(x571)))+(((IkReal(2.66873869000000))*(x630)))+(((IkReal(2.66873869000000))*(x614)))+(x987)+(((IkReal(2.66873869000000))*(x585))));
op[65]=((x1008)+(x1006));
op[66]=((((IkReal(-1.00000000000000))*(x993)))+(x994)+(x987));
op[67]=((IkReal(8.00000000000000))+(((r00)*(x608)))+(((IkReal(0.219822620000000))*(x574)))+(((IkReal(0.213600000000000))*(x653)))+(((IkReal(0.219822620000000))*(x581)))+(((IkReal(0.219822620000000))*(x586)))+(((r01)*(x674)))+(((IkReal(0.219822620000000))*(x628)))+(((r10)*(x655))));
op[68]=((((IkReal(-1.00000000000000))*(x987)))+(((IkReal(-1.00000000000000))*(x993)))+(((IkReal(-1.00000000000000))*(x994))));
op[69]=((x1008)+(x725)+(x726)+(x727)+(x728));
op[70]=((((IkReal(-1.00000000000000))*(x987)))+(((IkReal(-0.00143869000000000))*(x630)))+(((IkReal(-0.00143869000000000))*(x571)))+(((IkReal(-0.00143869000000000))*(x585)))+(((IkReal(-0.00143869000000000))*(x614))));
op[71]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x1015))));
op[72]=((x976)+(((IkReal(-1.00000000000000))*(x975))));
op[73]=((((IkReal(-1.00000000000000))*(x946)))+(((IkReal(2.66873869000000))*(x578)))+(((IkReal(-2.66873869000000))*(x600)))+(((IkReal(-2.66873869000000))*(x598)))+(((r11)*(x591)))+(x970));
op[74]=((x975)+(((IkReal(-1.00000000000000))*(x976))));
op[75]=((((IkReal(-1.00000000000000))*(x946)))+(((IkReal(-1.00000000000000))*(x955)))+(x991)+(x951)+(((IkReal(-1.00000000000000))*(x963))));
op[76]=((((IkReal(0.219822620000000))*(x580)))+(((IkReal(-0.219822620000000))*(x584)))+(((IkReal(-0.213600000000000))*(x640)))+(((IkReal(0.213600000000000))*(x648)))+(((IkReal(-0.219822620000000))*(x577)))+(((IkReal(0.219822620000000))*(x599)))+(((r10)*(x608)))+(((IkReal(-0.213600000000000))*(x629))));
op[77]=((((IkReal(-1.00000000000000))*(x991)))+(x955)+(x951)+(x946)+(((IkReal(-1.00000000000000))*(x963))));
op[78]=((x978)+(((IkReal(-1.00000000000000))*(x977))));
op[79]=((((IkReal(-0.00143869000000000))*(x578)))+(((IkReal(-0.00143869000000000))*(x592)))+(((IkReal(0.00143869000000000))*(x598)))+(((IkReal(0.00143869000000000))*(x600)))+(x946)+(((IkReal(-1.00000000000000))*(x970))));
op[80]=((x977)+(((IkReal(-1.00000000000000))*(x978))));
op[81]=x979;
op[82]=((IkReal(-4.00000000000000))+(((IkReal(-2.66873869000000))*(x616)))+(((IkReal(-2.66873869000000))*(x624)))+(((IkReal(-1.00000000000000))*(x964))));
op[83]=((IkReal(-1.00000000000000))*(x979));
op[84]=((IkReal(-4.00000000000000))+(((IkReal(-1.00000000000000))*(x952)))+(x953)+(((IkReal(-1.00000000000000))*(x964))));
op[85]=((((IkReal(-0.219822620000000))*(x667)))+(((IkReal(-0.219822620000000))*(x588)))+(((IkReal(-0.213600000000000))*(x607)))+(((IkReal(-0.213600000000000))*(x613))));
op[86]=((x972)+(x953)+(x952));
op[87]=((IkReal(-1.00000000000000))*(x980));
op[88]=((((IkReal(0.00143869000000000))*(x624)))+(((IkReal(0.00143869000000000))*(x616)))+(x972));
op[89]=x980;
op[90]=((((IkReal(-1.00000000000000))*(x981)))+(x982));
op[91]=((((IkReal(-2.66873869000000))*(x660)))+(((IkReal(2.66873869000000))*(x652)))+(((IkReal(-2.66873869000000))*(x670)))+(((rxp1_1)*(x591)))+(((IkReal(-1.00000000000000))*(x956)))+(x959));
op[92]=((((IkReal(-1.00000000000000))*(x982)))+(x981));
op[93]=((((IkReal(-1.00000000000000))*(x956)))+(((IkReal(-1.00000000000000))*(x957)))+(((IkReal(-1.00000000000000))*(x958)))+(x960)+(x961)+(x959));
op[94]=((((IkReal(-0.219822620000000))*(x676)))+(((IkReal(-0.219822620000000))*(x658)))+(((rxp0_1)*(x608)))+(((rxp1_1)*(x674)))+(((IkReal(0.219822620000000))*(x664)))+(((IkReal(-0.213600000000000))*(x677)))+(((IkReal(0.219822620000000))*(x651)))+(((IkReal(-1.00000000000000))*(rxp0_0)*(x655))));
op[95]=((((IkReal(-1.00000000000000))*(x958)))+(((IkReal(-1.00000000000000))*(x959)))+(x960)+(x957)+(x956)+(((IkReal(-1.00000000000000))*(x961))));
op[96]=((((IkReal(-1.00000000000000))*(x983)))+(x984));
op[97]=((((IkReal(-0.00143869000000000))*(x680)))+(((IkReal(0.00143869000000000))*(x670)))+(((IkReal(-0.00143869000000000))*(x652)))+(((IkReal(0.00143869000000000))*(x660)))+(((IkReal(-1.00000000000000))*(x959)))+(x956));
op[98]=((((IkReal(-1.00000000000000))*(x984)))+(x983));
op[99]=((IkReal(1.63450000000000))+(((IkReal(-1.00000000000000))*(x995))));
op[100]=((((IkReal(0.252596117008500))*(x624)))+(x965)+(((IkReal(0.252596117008500))*(x616))));
op[101]=((IkReal(1.63450000000000))+(x995));
op[102]=((((IkReal(-1.00000000000000))*(x950)))+(x966)+(x965));
op[103]=((((IkReal(0.0208062109830000))*(x667)))+(((IkReal(0.0202172400000000))*(x607)))+(((IkReal(0.0202172400000000))*(x613)))+(((IkReal(0.0208062109830000))*(x588))));
op[104]=((((IkReal(-1.00000000000000))*(x950)))+(((IkReal(-1.00000000000000))*(x965)))+(((IkReal(-1.00000000000000))*(x966))));
op[105]=((IkReal(0.0655000000000000))+(x999));
op[106]=((((IkReal(-0.000136172008500000))*(x624)))+(((IkReal(-0.000136172008500000))*(x616)))+(((IkReal(-1.00000000000000))*(x965))));
op[107]=((IkReal(0.0655000000000000))+(((IkReal(-1.00000000000000))*(x999))));
op[108]=((((IkReal(-1.00000000000000))*(x944)))+(x1009)+(x1023)+(((IkReal(-1.00000000000000))*(x1018)))+(((IkReal(-1.00000000000000))*(x1010)))+(((IkReal(-1.00000000000000))*(x998)))+(x986)+(x949));
op[109]=((IkReal(-1.63450000000000))+(((IkReal(-0.0118573004550000))*(x590)))+(((IkReal(-1.00000000000000))*(x945)))+(x1000)+(((IkReal(-1.33436934500000))*(x626)))+(((IkReal(0.0118573004550000))*(x601)))+(((IkReal(-0.181274075518250))*(x584)))+(((IkReal(0.181274075518250))*(x599)))+(((IkReal(-1.33436934500000))*(x602)))+(((IkReal(0.0118573004550000))*(x633)))+(((IkReal(-0.0118573004550000))*(x617)))+(((IkReal(-0.181274075518250))*(x577)))+(((IkReal(-0.0872823000000000))*(x611)))+(((IkReal(-0.0872823000000000))*(x575)))+(((IkReal(0.181274075518250))*(x580))));
op[110]=((((IkReal(-1.00000000000000))*(x986)))+(((IkReal(-1.00000000000000))*(x949)))+(x1009)+(x1023)+(((IkReal(-1.00000000000000))*(x1018)))+(((IkReal(-1.00000000000000))*(x1010)))+(x998)+(x944));
op[111]=((IkReal(-0.850000000000000))+(((IkReal(-1.00000000000000))*(x945)))+(x1001)+(x1000)+(((IkReal(-1.00000000000000))*(x1014))));
op[112]=((((IkReal(0.109911310000000))*(x579)))+(((IkReal(0.109911310000000))*(x615)))+(((IkReal(0.0149314514635000))*(x600)))+(((IkReal(0.0149314514635000))*(x598)))+(((IkReal(-1.00000000000000))*(x990)))+(((IkReal(-0.0149314514635000))*(x592)))+(x947)+(((IkReal(-0.0149314514635000))*(x578))));
op[113]=((IkReal(0.850000000000000))+(x1014)+(((IkReal(-1.00000000000000))*(x1001)))+(((IkReal(-1.00000000000000))*(x1000)))+(x945));
op[114]=((((IkReal(-1.00000000000000))*(x986)))+(((IkReal(-1.00000000000000))*(x943)))+(x1023)+(((IkReal(-1.00000000000000))*(x1018)))+(((IkReal(-1.00000000000000))*(x1013)))+(x988)+(x989)+(x944));
op[115]=((IkReal(0.0655000000000000))+(((IkReal(-9.77230182500000e-5))*(x599)))+(((IkReal(-1.00000000000000))*(x1000)))+(((IkReal(0.000475162545000000))*(x590)))+(((IkReal(-0.000475162545000000))*(x633)))+(((IkReal(-9.77230182500000e-5))*(x580)))+(((IkReal(0.000475162545000000))*(x617)))+(((IkReal(0.000719345000000000))*(x602)))+(((IkReal(0.00349770000000000))*(x575)))+(((IkReal(0.00349770000000000))*(x611)))+(((IkReal(9.77230182500000e-5))*(x577)))+(((IkReal(-0.000475162545000000))*(x601)))+(x945)+(((IkReal(9.77230182500000e-5))*(x584)))+(((IkReal(0.000719345000000000))*(x626))));
op[116]=((((IkReal(-1.00000000000000))*(x989)))+(((IkReal(-1.00000000000000))*(x944)))+(x1023)+(((IkReal(-1.00000000000000))*(x1018)))+(((IkReal(-1.00000000000000))*(x1013)))+(x988)+(x986)+(x943));
op[117]=((x1004)+(x1022)+(((IkReal(-1.00000000000000))*(x1007)))+(((IkReal(-1.00000000000000))*(x1017)))+(x996));
op[118]=((((IkReal(-1.33436934500000))*(x581)))+(((IkReal(-1.33436934500000))*(x586)))+(((IkReal(-1.33436934500000))*(x574)))+(x1008)+(((IkReal(-1.33436934500000))*(x628)))+(((IkReal(-0.0872823000000000))*(x672)))+(((IkReal(-0.0872823000000000))*(x662)))+(((IkReal(-0.0872823000000000))*(x618)))+(((IkReal(-0.0872823000000000))*(x637))));
op[119]=((x1007)+(x1004)+(x1022)+(((IkReal(-1.00000000000000))*(x1017)))+(((IkReal(-1.00000000000000))*(x996))));
op[120]=((x1008)+(((IkReal(-1.00000000000000))*(x1016))));
op[121]=((((IkReal(0.109911310000000))*(x571)))+(((IkReal(-1.00000000000000))*(x987)))+(((IkReal(0.109911310000000))*(x614)))+(((IkReal(0.109911310000000))*(x630)))+(((IkReal(0.109911310000000))*(x585))));
op[122]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x985)))+(x1016));
op[123]=((x1002)+(x1022)+(((IkReal(-1.00000000000000))*(x1021)))+(((IkReal(-1.00000000000000))*(x996))));
op[124]=((IkReal(-2.00000000000000))+(((IkReal(-1.00000000000000))*(x985)))+(((IkReal(0.00349770000000000))*(x637)))+(((IkReal(0.000719345000000000))*(x574)))+(((IkReal(0.00349770000000000))*(x662)))+(((IkReal(0.00349770000000000))*(x618)))+(((IkReal(0.000719345000000000))*(x586)))+(((IkReal(0.000719345000000000))*(x581)))+(((IkReal(0.000719345000000000))*(x628)))+(((IkReal(0.00349770000000000))*(x672))));
op[125]=((x1022)+(((IkReal(-1.00000000000000))*(x1002)))+(((IkReal(-1.00000000000000))*(x1021)))+(x996));
op[126]=((x1019)+(((IkReal(-1.00000000000000))*(x1020)))+(((IkReal(-1.00000000000000))*(x992)))+(x997));
op[127]=((((IkReal(-1.33436934500000))*(x580)))+(((IkReal(0.0872823000000000))*(x617)))+(((IkReal(-1.33436934500000))*(x599)))+(((IkReal(-0.0872823000000000))*(x601)))+(((IkReal(1.33436934500000))*(x577)))+(x962)+(((IkReal(-1.00000000000000))*(x967)))+(((IkReal(1.33436934500000))*(x584)))+(((IkReal(0.0872823000000000))*(x590)))+(((IkReal(-0.0872823000000000))*(x633))));
op[128]=((x1019)+(((IkReal(-1.00000000000000))*(x1020)))+(((IkReal(-1.00000000000000))*(x997)))+(x992));
op[129]=((((IkReal(-0.0453900000000000))*(x601)))+(((IkReal(0.0453900000000000))*(x617)))+(((IkReal(0.0453900000000000))*(x590)))+(((IkReal(-0.0521040950000000))*(x599)))+(((IkReal(0.0521040950000000))*(x584)))+(((IkReal(0.0521040950000000))*(x577)))+(((IkReal(-0.0521040950000000))*(x580)))+(((IkReal(-0.0453900000000000))*(x633)))+(x962)+(((IkReal(-1.00000000000000))*(x967))));
IkReal x1024=((gconst7_7)*(rxp1_1));
IkReal x1025=((IkReal(0.106800000000000))*(gconst7_5));
IkReal x1026=((gconst0_3)*(r20));
IkReal x1027=((gconst6_2)*(r10));
IkReal x1028=((IkReal(1.00000000000000))*(pp));
IkReal x1029=((gconst4_0)*(r01));
IkReal x1030=((gconst1_2)*(r21));
IkReal x1031=((IkReal(0.0946500000000000))*(pp));
IkReal x1032=((gconst1_4)*(r21));
IkReal x1033=((gconst0_2)*(r20));
IkReal x1034=((gconst0_1)*(r20));
IkReal x1035=((IkReal(0.189300000000000))*(pz));
IkReal x1036=((gconst3_7)*(rxp0_0));
IkReal x1037=((gconst3_1)*(r00));
IkReal x1038=((gconst1_3)*(r21));
IkReal x1039=((gconst1_1)*(r21));
IkReal x1040=((gconst3_1)*(rxp0_0));
IkReal x1041=((gconst6_3)*(rxp0_1));
IkReal x1042=((gconst6_1)*(r10));
IkReal x1043=((IkReal(0.0267000000000000))*(gconst6_5));
IkReal x1044=((gconst3_2)*(r00));
IkReal x1045=((gconst4_0)*(rxp1_0));
IkReal x1046=((gconst0_5)*(r20));
IkReal x1047=((gconst1_5)*(r21));
IkReal x1048=((gconst7_2)*(rxp1_1));
IkReal x1049=((IkReal(0.0257164050000000))*(gconst7_1));
IkReal x1050=((gconst4_2)*(rxp1_0));
IkReal x1051=((gconst1_0)*(r21));
IkReal x1052=((gconst0_0)*(r20));
IkReal x1053=((gconst4_7)*(rxp1_0));
IkReal x1054=((gconst6_7)*(r10));
IkReal x1055=((gconst0_7)*(r20));
IkReal x1056=((gconst6_1)*(rxp0_1));
IkReal x1057=((IkReal(0.0534000000000000))*(gconst6_6));
IkReal x1058=((gconst3_7)*(r00));
IkReal x1059=((gconst4_1)*(rxp1_0));
IkReal x1060=((gconst1_7)*(r21));
IkReal x1061=((gconst7_0)*(rxp1_1));
IkReal x1062=((gconst7_0)*(r11));
IkReal x1063=((gconst7_3)*(rxp1_1));
IkReal x1064=((IkReal(0.0534000000000000))*(gconst3_6));
IkReal x1065=((IkReal(0.106800000000000))*(gconst6_5));
IkReal x1066=((IkReal(0.109150000000000))*(gconst3_4));
IkReal x1067=((gconst3_2)*(rxp0_0));
IkReal x1068=((gconst0_6)*(r20));
IkReal x1069=((gconst7_1)*(r11));
IkReal x1070=((IkReal(0.0327500000000000))*(gconst4_3));
IkReal x1071=((gconst6_7)*(rxp0_1));
IkReal x1072=((IkReal(0.0521040950000000))*(gconst6_0));
IkReal x1073=((IkReal(0.109150000000000))*(gconst7_4));
IkReal x1074=((gconst7_7)*(r11));
IkReal x1075=((IkReal(0.0534000000000000))*(gconst7_6));
IkReal x1076=((gconst4_5)*(r01));
IkReal x1077=((IkReal(0.0534000000000000))*(gconst4_6));
IkReal x1078=((gconst4_7)*(r01));
IkReal x1079=((gconst3_0)*(rxp0_0));
IkReal x1080=((gconst4_5)*(rxp1_0));
IkReal x1081=((gconst3_0)*(r00));
IkReal x1082=((IkReal(0.106800000000000))*(gconst3_5));
IkReal x1083=((gconst1_6)*(r21));
IkReal x1084=((gconst6_2)*(rxp0_1));
IkReal x1085=((IkReal(0.0179172450000000))*(pz));
IkReal x1086=((gconst3_3)*(rxp0_0));
IkReal x1087=((IkReal(0.0267000000000000))*(gconst7_5));
IkReal x1088=((IkReal(0.109150000000000))*(gconst6_4));
IkReal x1089=((gconst6_0)*(rxp0_1));
IkReal x1090=((IkReal(0.109150000000000))*(gconst4_4));
IkReal x1091=((gconst4_1)*(r01));
IkReal x1092=((gconst7_1)*(rxp1_1));
IkReal x1093=((gconst7_2)*(r11));
IkReal x1094=((gconst4_2)*(r01));
IkReal x1095=((IkReal(0.0267000000000000))*(gconst3_5));
IkReal x1096=((gconst0_4)*(r20));
IkReal x1097=((r01)*(x1077));
IkReal x1098=((r00)*(x1064));
IkReal x1099=((r10)*(x1057));
IkReal x1100=((r11)*(x1075));
IkReal x1101=((r10)*(x1043));
IkReal x1102=((r01)*(x1070));
IkReal x1103=((IkReal(0.0256283925000000))*(x1044));
IkReal x1104=((IkReal(0.00178545250000000))*(x1078));
IkReal x1105=((pp)*(x1094));
IkReal x1106=((IkReal(0.00178545250000000))*(x1058));
IkReal x1107=((pp)*(x1044));
IkReal x1108=((IkReal(0.0257164050000000))*(x1042));
IkReal x1109=((r11)*(x1073));
IkReal x1110=((IkReal(0.0256283925000000))*(x1094));
IkReal x1111=((r11)*(x1049));
IkReal x1112=((IkReal(0.0327500000000000))*(gconst3_3)*(r00));
IkReal x1113=((r11)*(x1087));
IkReal x1114=((r10)*(x1088));
IkReal x1115=((IkReal(0.0256283925000000))*(x1093));
IkReal x1116=((IkReal(0.00178545250000000))*(x1054));
IkReal x1117=((IkReal(0.00178545250000000))*(x1074));
IkReal x1118=((IkReal(0.0257164050000000))*(x1091));
IkReal x1119=((r00)*(x1095));
IkReal x1120=((r01)*(x1090));
IkReal x1121=((IkReal(0.0327500000000000))*(gconst7_3)*(r11));
IkReal x1122=((IkReal(0.0257164050000000))*(x1037));
IkReal x1123=((IkReal(0.0327500000000000))*(gconst6_3)*(r10));
IkReal x1124=((IkReal(0.0267000000000000))*(x1076));
IkReal x1125=((IkReal(0.0256283925000000))*(x1027));
IkReal x1126=((r00)*(x1066));
IkReal x1127=((pp)*(x1033));
IkReal x1128=((IkReal(0.0267000000000000))*(x1046));
IkReal x1129=((IkReal(0.817250000000000))*(x1038));
IkReal x1130=((IkReal(0.817250000000000))*(x1026));
IkReal x1131=((pp)*(x1030));
IkReal x1132=((IkReal(0.0267000000000000))*(x1047));
IkReal x1133=((IkReal(0.668610452500000))*(x1055));
IkReal x1134=((IkReal(0.109150000000000))*(x1096));
IkReal x1135=((IkReal(0.0257164050000000))*(x1039));
IkReal x1136=((IkReal(0.641196607500000))*(x1030));
IkReal x1137=((IkReal(0.641196607500000))*(x1033));
IkReal x1138=((IkReal(0.0257164050000000))*(x1034));
IkReal x1139=((IkReal(0.109150000000000))*(x1032));
IkReal x1140=((IkReal(0.668610452500000))*(x1060));
IkReal x1141=((IkReal(0.00178545250000000))*(x1055));
IkReal x1142=((IkReal(0.0327500000000000))*(x1026));
IkReal x1143=((IkReal(0.0327500000000000))*(x1038));
IkReal x1144=((IkReal(0.0256283925000000))*(x1033));
IkReal x1145=((IkReal(0.00178545250000000))*(x1060));
IkReal x1146=((IkReal(0.0256283925000000))*(x1030));
IkReal x1147=((rxp0_1)*(x1088));
IkReal x1148=((IkReal(0.641196607500000))*(x1048));
IkReal x1149=((IkReal(0.0267000000000000))*(x1080));
IkReal x1150=((rxp0_0)*(x1095));
IkReal x1151=((IkReal(0.668610452500000))*(x1024));
IkReal x1152=((pp)*(x1050));
IkReal x1153=((IkReal(0.0257164050000000))*(x1056));
IkReal x1154=((IkReal(0.817250000000000))*(x1086));
IkReal x1155=((rxp1_1)*(x1073));
IkReal x1156=((pp)*(x1067));
IkReal x1157=((rxp1_1)*(x1049));
IkReal x1158=((IkReal(0.641196607500000))*(x1084));
IkReal x1159=((IkReal(0.817250000000000))*(gconst4_3)*(rxp1_0));
IkReal x1160=((IkReal(0.668610452500000))*(x1071));
IkReal x1161=((IkReal(0.668610452500000))*(x1053));
IkReal x1162=((rxp0_0)*(x1066));
IkReal x1163=((IkReal(0.641196607500000))*(x1067));
IkReal x1164=((rxp0_1)*(x1043));
IkReal x1165=((IkReal(0.817250000000000))*(x1041));
IkReal x1166=((rxp1_1)*(x1087));
IkReal x1167=((IkReal(0.0257164050000000))*(x1059));
IkReal x1168=((IkReal(0.817250000000000))*(x1063));
IkReal x1169=((IkReal(0.0257164050000000))*(x1040));
IkReal x1170=((IkReal(0.668610452500000))*(x1036));
IkReal x1171=((rxp1_0)*(x1090));
IkReal x1172=((IkReal(0.641196607500000))*(x1050));
IkReal x1173=((rxp1_1)*(x1075));
IkReal x1174=((rxp0_1)*(x1057));
IkReal x1175=((rxp0_0)*(x1064));
IkReal x1176=((rxp1_0)*(x1077));
IkReal x1177=((IkReal(0.0327500000000000))*(x1086));
IkReal x1178=((IkReal(0.00178545250000000))*(x1053));
IkReal x1179=((IkReal(0.0256283925000000))*(x1050));
IkReal x1180=((IkReal(0.00178545250000000))*(x1036));
IkReal x1181=((rxp1_0)*(x1070));
IkReal x1182=((IkReal(0.0256283925000000))*(x1067));
IkReal x1183=((IkReal(0.00178545250000000))*(x1024));
IkReal x1184=((IkReal(0.0256283925000000))*(x1084));
IkReal x1185=((IkReal(0.0327500000000000))*(x1063));
IkReal x1186=((IkReal(0.0256283925000000))*(x1048));
IkReal x1187=((IkReal(0.0327500000000000))*(x1041));
IkReal x1188=((IkReal(0.00178545250000000))*(x1071));
IkReal x1189=((IkReal(0.00243405773325000))*(x1039));
IkReal x1190=((IkReal(0.0632839793291250))*(x1060));
IkReal x1191=((IkReal(0.0103310475000000))*(x1032));
IkReal x1192=((IkReal(0.0606892588998750))*(x1030));
IkReal x1193=((IkReal(0.00243405773325000))*(x1034));
IkReal x1194=((IkReal(0.0632839793291250))*(x1055));
IkReal x1195=((IkReal(0.0606892588998750))*(x1033));
IkReal x1196=((IkReal(0.0103310475000000))*(x1096));
IkReal x1197=((IkReal(0.00252715500000000))*(x1047));
IkReal x1198=((IkReal(0.0773527125000000))*(x1038));
IkReal x1199=((IkReal(0.00252715500000000))*(x1046));
IkReal x1200=((IkReal(0.0773527125000000))*(x1026));
IkReal x1201=((IkReal(0.00505431000000000))*(x1068));
IkReal x1202=((IkReal(0.00505431000000000))*(x1083));
IkReal x1203=((IkReal(0.00493165259175000))*(x1051));
IkReal x1204=((IkReal(0.00429616350000000))*(x1034));
IkReal x1205=((IkReal(0.00429616350000000))*(x1039));
IkReal x1206=((IkReal(0.00493165259175000))*(x1052));
IkReal x1207=((IkReal(0.00309978750000000))*(x1038));
IkReal x1208=((IkReal(0.00242572735012500))*(x1033));
IkReal x1209=((IkReal(0.000168993079125000))*(x1055));
IkReal x1210=((IkReal(0.000168993079125000))*(x1060));
IkReal x1211=((IkReal(0.00242572735012500))*(x1030));
IkReal x1212=((IkReal(0.00309978750000000))*(x1026));
IkReal x1213=((x1035)*(x1054));
IkReal x1214=((x1035)*(x1074));
IkReal x1215=((x1035)*(x1078));
IkReal x1216=((x1035)*(x1058));
IkReal x1217=((x1027)*(x1028));
IkReal x1218=((x1028)*(x1093));
IkReal x1219=((x1035)*(x1055));
IkReal x1220=((x1035)*(x1060));
IkReal x1221=((x1024)*(x1035));
IkReal x1222=((x1035)*(x1071));
IkReal x1223=((x1028)*(x1048));
IkReal x1224=((x1028)*(x1084));
IkReal x1225=((x1035)*(x1053));
IkReal x1226=((x1035)*(x1036));
IkReal x1227=((x1055)*(x1085));
IkReal x1228=((x1060)*(x1085));
IkReal x1229=((x1030)*(x1031));
IkReal x1230=((x1031)*(x1033));
IkReal x1231=((((IkReal(0.0534000000000000))*(x1068)))+(((IkReal(0.0534000000000000))*(x1083))));
IkReal x1232=((x1201)+(x1202));
IkReal x1233=((x1097)+(x1098));
IkReal x1234=((x1174)+(x1173));
IkReal x1235=((x1192)+(x1195));
IkReal x1236=((x1140)+(x1133));
IkReal x1237=((x1128)+(x1132));
IkReal x1238=((x1209)+(x1210));
IkReal x1239=((x1127)+(x1131));
IkReal x1240=((x1129)+(x1130));
IkReal x1241=((x1198)+(x1200));
IkReal x1242=((x1100)+(x1099));
IkReal x1243=((x1190)+(x1194));
IkReal x1244=((x1176)+(x1175));
IkReal x1245=((x1141)+(x1145));
IkReal x1246=((x1230)+(x1229));
IkReal x1247=((((IkReal(0.0453900000000000))*(x1039)))+(((IkReal(0.0453900000000000))*(x1034)))+(((IkReal(0.0521040950000000))*(x1052)))+(((IkReal(0.0521040950000000))*(x1051))));
IkReal x1248=((x1164)+(x1166)+(x1161)+(x1170));
IkReal x1249=((x1148)+(x1159)+(x1158)+(x1154));
IkReal x1250=((x1106)+(x1104)+(x1101)+(x1113));
IkReal x1251=((x1165)+(x1163)+(x1168)+(x1172));
IkReal x1252=((x1180)+(x1164)+(x1166)+(x1178));
IkReal x1253=((x1186)+(x1187)+(x1184)+(x1185));
IkReal x1254=((x1182)+(x1181)+(x1177)+(x1179));
IkReal x1255=((x1149)+(x1150)+(x1188)+(x1183));
IkReal x1256=((x1208)+(x1207)+(x1212)+(x1211));
IkReal x1257=((x1117)+(x1116)+(x1119)+(x1124));
IkReal x1258=((x1142)+(x1143)+(x1146)+(x1144));
IkReal x1259=((x1205)+(x1204)+(x1206)+(x1203));
IkReal x1260=((x1149)+(x1151)+(x1150)+(x1160));
IkReal x1261=((x1199)+(x1197)+(x1246));
IkReal x1262=((x1244)+(((IkReal(0.0453900000000000))*(x1056)))+(((IkReal(0.0521040950000000))*(x1061)))+(((rxp0_1)*(x1072)))+(((IkReal(0.0453900000000000))*(x1092))));
IkReal x1263=((((IkReal(0.0453900000000000))*(x1040)))+(x1234)+(((IkReal(0.0453900000000000))*(x1059)))+(((IkReal(0.0521040950000000))*(x1079)))+(((IkReal(0.0521040950000000))*(x1045))));
IkReal x1264=((x1139)+(x1138)+(x1135)+(x1134)+(x1220)+(x1219));
IkReal x1265=((x1189)+(x1191)+(x1193)+(x1196)+(x1227)+(x1228)+(pz));
IkReal x1266=((x1147)+(x1155)+(x1157)+(x1156)+(x1153)+(x1152)+(x1222)+(x1221));
IkReal x1267=((x1137)+(x1136)+(x1264));
IkReal x1268=((x1199)+(x1197)+(x1265));
IkReal x1269=((x1167)+(x1162)+(x1169)+(x1171)+(x1226)+(x1225)+(x1224)+(x1223));
IkReal x1270=((x1107)+(x1105)+(x1102)+(x1103)+(x1108)+(x1109)+(x1111)+(x1110)+(x1112)+(x1114)+(x1213)+(x1214));
IkReal x1271=((x1115)+(x1118)+(x1120)+(x1121)+(x1122)+(x1123)+(x1125)+(x1126)+(x1216)+(x1217)+(x1215)+(x1218));
op[130]=((((IkReal(-1.00000000000000))*(r11)*(x1025)))+(((IkReal(0.106800000000000))*(x1076)))+(((r00)*(x1082)))+(((IkReal(-1.00000000000000))*(r10)*(x1065)))+(((IkReal(-0.109911310000000))*(x1078)))+(((IkReal(-0.109911310000000))*(x1058)))+(((IkReal(0.109911310000000))*(x1054)))+(((IkReal(0.109911310000000))*(x1074))));
op[131]=((((IkReal(0.0453900000000000))*(x1042)))+(x1233)+(((IkReal(0.0521040950000000))*(x1062)))+(((IkReal(-0.0453900000000000))*(x1037)))+(((IkReal(-0.0521040950000000))*(x1029)))+(((IkReal(-1.00000000000000))*(x1242)))+(((r10)*(x1072)))+(((IkReal(-0.0521040950000000))*(x1081)))+(((IkReal(-0.0453900000000000))*(x1091)))+(((IkReal(0.0453900000000000))*(x1069))));
op[132]=((((IkReal(-1.00000000000000))*(x1250)))+(x1270)+(x1257)+(((IkReal(-1.00000000000000))*(x1271))));
op[133]=((((IkReal(-0.000719345000000000))*(x1081)))+(x1233)+(((IkReal(-0.00349770000000000))*(x1037)))+(((IkReal(-0.00349770000000000))*(x1091)))+(((IkReal(-1.00000000000000))*(x1242)))+(((IkReal(0.000719345000000000))*(gconst6_0)*(r10)))+(((IkReal(-0.000719345000000000))*(x1029)))+(((IkReal(0.00349770000000000))*(x1069)))+(((IkReal(0.00349770000000000))*(x1042)))+(((IkReal(0.000719345000000000))*(x1062))));
op[134]=((((IkReal(-1.00000000000000))*(x1257)))+(x1270)+(x1250)+(((IkReal(-1.00000000000000))*(x1271))));
op[135]=((IkReal(-1.00000000000000))+(x1240)+(x1236)+(x1239)+(((IkReal(-1.00000000000000))*(x1237)))+(((IkReal(-1.00000000000000))*(x1267))));
op[136]=((((IkReal(-1.00000000000000))*(x1231)))+(((IkReal(1.33436934500000))*(x1051)))+(((IkReal(1.33436934500000))*(x1052)))+(((IkReal(0.0872823000000000))*(x1034)))+(((IkReal(0.0872823000000000))*(x1039))));
op[137]=((IkReal(1.00000000000000))+(x1240)+(x1237)+(x1239)+(((IkReal(-1.00000000000000))*(x1236)))+(((IkReal(-1.00000000000000))*(x1267))));
op[138]=((x1247)+(((IkReal(-1.00000000000000))*(x1231))));
op[139]=((IkReal(4.00000000000000))+(((IkReal(0.106800000000000))*(x1047)))+(((IkReal(0.106800000000000))*(x1046)))+(((IkReal(-0.109911310000000))*(x1060)))+(((IkReal(-0.109911310000000))*(x1055))));
op[140]=((x1231)+(((IkReal(-1.00000000000000))*(x1247))));
op[141]=((IkReal(1.00000000000000))+(x1258)+(x1237)+(x1239)+(((IkReal(-1.00000000000000))*(x1245)))+(((IkReal(-1.00000000000000))*(x1264))));
op[142]=((x1231)+(((IkReal(-0.000719345000000000))*(x1052)))+(((IkReal(-0.000719345000000000))*(x1051)))+(((IkReal(-0.00349770000000000))*(x1039)))+(((IkReal(-0.00349770000000000))*(x1034))));
op[143]=((IkReal(-1.00000000000000))+(x1245)+(x1258)+(x1239)+(((IkReal(-1.00000000000000))*(x1237)))+(((IkReal(-1.00000000000000))*(x1264))));
op[144]=((IkReal(-0.817250000000000))+(((IkReal(-1.00000000000000))*(x1251)))+(x1249)+(x1248)+(x1266)+(((IkReal(-1.00000000000000))*(x1269)))+(((IkReal(-1.00000000000000))*(x1260))));
op[145]=((((IkReal(-0.0872823000000000))*(x1092)))+(x1234)+(((IkReal(-1.33436934500000))*(x1061)))+(((IkReal(1.33436934500000))*(x1045)))+(((IkReal(0.0872823000000000))*(x1059)))+(((IkReal(-1.33436934500000))*(x1089)))+(((IkReal(0.0872823000000000))*(x1040)))+(((IkReal(-1.00000000000000))*(x1244)))+(((IkReal(1.33436934500000))*(x1079)))+(((IkReal(-0.0872823000000000))*(x1056))));
op[146]=((IkReal(0.817250000000000))+(((IkReal(-1.00000000000000))*(x1251)))+(x1249)+(x1260)+(x1266)+(((IkReal(-1.00000000000000))*(x1248)))+(((IkReal(-1.00000000000000))*(x1269))));
op[147]=((x1263)+(((IkReal(-1.00000000000000))*(x1262))));
op[148]=((IkReal(1.70000000000000))+(((IkReal(0.106800000000000))*(x1080)))+(((IkReal(0.109911310000000))*(x1024)))+(((IkReal(-0.109911310000000))*(x1036)))+(((IkReal(-1.00000000000000))*(rxp0_1)*(x1065)))+(((IkReal(-0.109911310000000))*(x1053)))+(((rxp0_0)*(x1082)))+(((IkReal(-1.00000000000000))*(rxp1_1)*(x1025)))+(((IkReal(0.109911310000000))*(x1071))));
op[149]=((x1262)+(((IkReal(-1.00000000000000))*(x1263))));
op[150]=((IkReal(0.0327500000000000))+(((IkReal(-1.00000000000000))*(x1253)))+(((IkReal(-1.00000000000000))*(x1252)))+(x1266)+(x1254)+(x1255)+(((IkReal(-1.00000000000000))*(x1269))));
op[151]=((((IkReal(0.00349770000000000))*(x1056)))+(((IkReal(-0.000719345000000000))*(x1079)))+(x1244)+(((IkReal(-1.00000000000000))*(x1234)))+(((IkReal(0.00349770000000000))*(x1092)))+(((IkReal(-0.000719345000000000))*(x1045)))+(((IkReal(-0.00349770000000000))*(x1040)))+(((IkReal(-0.00349770000000000))*(x1059)))+(((IkReal(0.000719345000000000))*(x1061)))+(((IkReal(0.000719345000000000))*(x1089))));
op[152]=((IkReal(-0.0327500000000000))+(((IkReal(-1.00000000000000))*(x1253)))+(((IkReal(-1.00000000000000))*(x1255)))+(x1266)+(x1254)+(x1252)+(((IkReal(-1.00000000000000))*(x1269))));
op[153]=((x1268)+(x1235)+(((IkReal(-1.00000000000000))*(x1243)))+(((IkReal(-1.00000000000000))*(x1241)))+(((IkReal(-1.00000000000000))*(x1246))));
op[154]=((x1232)+(((IkReal(-0.126298058504250))*(x1052)))+(((IkReal(-0.126298058504250))*(x1051)))+(((IkReal(-0.00826126969500000))*(x1034)))+(((IkReal(-0.00826126969500000))*(x1039))));
op[155]=((x1243)+(x1265)+(x1235)+(((IkReal(-1.00000000000000))*(x1241)))+(((IkReal(-1.00000000000000))*(x1261))));
op[156]=((IkReal(-0.784500000000000))+(((IkReal(-1.00000000000000))*(x1259)))+(x1232));
op[157]=((((IkReal(-0.0101086200000000))*(x1047)))+(((IkReal(-0.0101086200000000))*(x1046)))+(((IkReal(0.0104031054915000))*(x1060)))+(((IkReal(0.0104031054915000))*(x1055))));
op[158]=((IkReal(-0.784500000000000))+(x1259)+(((IkReal(-1.00000000000000))*(x1232))));
op[159]=((((IkReal(-1.00000000000000))*(x1256)))+(x1265)+(x1238)+(((IkReal(-1.00000000000000))*(x1261))));
op[160]=((((IkReal(0.000331057305000000))*(x1034)))+(((IkReal(0.000331057305000000))*(x1039)))+(((IkReal(-1.00000000000000))*(x1232)))+(((IkReal(6.80860042500000e-5))*(x1051)))+(((IkReal(6.80860042500000e-5))*(x1052))));
op[161]=((((IkReal(-1.00000000000000))*(x1256)))+(x1268)+(((IkReal(-1.00000000000000))*(x1238)))+(((IkReal(-1.00000000000000))*(x1246))));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j1array[16], cj1array[16], sj1array[16], j2array[16], cj2array[16], sj2array[16], j3array[16], cj3array[16], sj3array[16];
int numsolutions = 0;
for(int ij1 = 0; ij1 < numroots; ij1 += 3)
{
IkReal htj1 = zeror[ij1+0], htj2 = zeror[ij1+1], htj3 = zeror[ij1+2];
j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
j2array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj2)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
IkReal x1272=(htj1)*(htj1);
IkReal x1273=(htj2)*(htj2);
IkReal x1274=(htj3)*(htj3);
cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1272))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1272)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1272))))));
cj2array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1273))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1273)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1273))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x1274))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x1274)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1274))))));
sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
sj2array[numsolutions]=((IkReal(2.00000000000000))*(htj2)*(((IKabs(((IkReal(1.00000000000000))+((htj2)*(htj2)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj2)*(htj2))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j1valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj1 = 16;
_nj2 = 1;
_nj3 = 1;
for(int ij1 = 0; ij1 < numsolutions; ++ij1)
    {
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
_ij2[0] = 0; _ij2[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
for(int iij1 = ij1+1; iij1 < numsolutions; ++iij1)
{
if( !j1valid[iij1] ) { continue; }
if( IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(cj2array[ij1]-cj2array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij1]-sj2array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij1]-cj3array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij1]-sj3array[iij1]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j1valid[iij1]=false; _ij1[1] = iij1; _ij2[1] = 0; _ij3[1] = 0;  break; 
}
}
    j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];

    j2 = j2array[ij1]; cj2 = cj2array[ij1]; sj2 = sj2array[ij1];

    j3 = j3array[ij1]; cj3 = cj3array[ij1]; sj3 = sj3array[ij1];

{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((r20)*(r20))+((r21)*(r21)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
IkReal x1275=((IkReal(1.00000000000000))*(sj3));
if( IKabs(((IkReal(-1.00000000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1276=((IkReal(1.00000000000000))*(IKatan2(((IkReal(-1.00000000000000))*(r21)), ((IkReal(-1.00000000000000))*(r20)))));
if( ((((r20)*(r20))+((r21)*(r21)))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1275)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1275)))+(((cj1)*(cj2)*(cj3))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1275)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1275)))+(((cj1)*(cj2)*(cj3))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1277=IKasin(((((IKabs(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21)))))) != 0)?((IkReal)1/(IKabs(IKsqrt((((r20)*(r20))+((r21)*(r21))))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1275)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1275)))+(((cj1)*(cj2)*(cj3)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1276)))+(((IkReal(-1.00000000000000))*(x1277))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(x1277)+(((IkReal(-1.00000000000000))*(x1276))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
evalcond[0]=((((IkReal(0.0946500000000000))*(r21)*(IKcos(j5))))+(pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1)))+(((IkReal(0.0946500000000000))*(r20)*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1278=((IkReal(20000.0000000000))*(cj5));
IkReal x1279=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(px)*(r10)*(x1279)))+(((py)*(r00)*(x1279)))+(((py)*(r01)*(x1278)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1278)))));
IkReal x1280=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1280)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1280)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1281=(cj5)*(cj5);
IkReal x1282=(sj5)*(sj5);
IkReal x1283=((IkReal(1.00000000000000))*(x1282));
IkReal x1284=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1285=((IkReal(1.00000000000000))*(x1281));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1283)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1285)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1285)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1284)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1284)))+(((IkReal(-1.00000000000000))*(x1283)*((r10)*(r10))))));
IkReal x1286=(cj5)*(cj5);
IkReal x1287=(sj5)*(sj5);
IkReal x1288=((IkReal(1.00000000000000))*(x1287));
IkReal x1289=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1290=((IkReal(1.00000000000000))*(x1286));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1288)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1290)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1288)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1289)))+(((IkReal(-1.00000000000000))*(x1290)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1289))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1291=((sj2)*(sj3));
IkReal x1292=((cj5)*(r01));
IkReal x1293=((cj5)*(r11));
IkReal x1294=((r00)*(sj5));
IkReal x1295=((r10)*(sj5));
IkReal x1296=((sj1)*(x1294));
IkReal x1297=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x1298=((sj1)*(x1295));
IkReal x1299=((IkReal(1.00000000000000))*(cj1)*(cj2)*(sj3));
IkReal x1300=((IkReal(1.00000000000000))*(cj1)*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(sj1)*(x1293)*(x1297)))+(((x1291)*(x1298)))+(((IkReal(-1.00000000000000))*(x1295)*(x1299)))+(((IkReal(-1.00000000000000))*(x1293)*(x1299)))+(((IkReal(-1.00000000000000))*(x1297)*(x1298)))+(((IkReal(-1.00000000000000))*(x1295)*(x1300)))+(((IkReal(-1.00000000000000))*(x1293)*(x1300)))+(((sj1)*(x1291)*(x1293))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(sj1)*(x1292)*(x1297)))+(((x1291)*(x1296)))+(((IkReal(-1.00000000000000))*(x1294)*(x1300)))+(((IkReal(-1.00000000000000))*(x1292)*(x1299)))+(((IkReal(-1.00000000000000))*(x1292)*(x1300)))+(((IkReal(-1.00000000000000))*(x1296)*(x1297)))+(((sj1)*(x1291)*(x1292)))+(((IkReal(-1.00000000000000))*(x1294)*(x1299))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(sj1)*(x1293)*(x1297)))+(((x1291)*(x1298)))+(((IkReal(-1.00000000000000))*(x1295)*(x1299)))+(((IkReal(-1.00000000000000))*(x1293)*(x1299)))+(((IkReal(-1.00000000000000))*(x1297)*(x1298)))+(((IkReal(-1.00000000000000))*(x1295)*(x1300)))+(((IkReal(-1.00000000000000))*(x1293)*(x1300)))+(((sj1)*(x1291)*(x1293)))))), ((gconst1)*(((((IkReal(-1.00000000000000))*(sj1)*(x1292)*(x1297)))+(((x1291)*(x1296)))+(((IkReal(-1.00000000000000))*(x1294)*(x1300)))+(((IkReal(-1.00000000000000))*(x1292)*(x1299)))+(((IkReal(-1.00000000000000))*(x1292)*(x1300)))+(((IkReal(-1.00000000000000))*(x1296)*(x1297)))+(((sj1)*(x1291)*(x1292)))+(((IkReal(-1.00000000000000))*(x1294)*(x1299)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1301=IKcos(j0);
IkReal x1302=IKsin(j0);
IkReal x1303=((r00)*(sj5));
IkReal x1304=((IkReal(1.00000000000000))*(cj2));
IkReal x1305=((cj5)*(r11));
IkReal x1306=((sj1)*(sj2));
IkReal x1307=((r10)*(sj5));
IkReal x1308=((IkReal(0.0946500000000000))*(x1302));
IkReal x1309=((IkReal(0.0946500000000000))*(x1301));
IkReal x1310=((IkReal(1.00000000000000))*(x1302));
IkReal x1311=((IkReal(1.00000000000000))*(x1301));
IkReal x1312=((cj5)*(r01)*(x1302));
IkReal x1313=((cj5)*(x1309));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1303)*(x1310)))+(((x1301)*(x1307)))+(((x1301)*(x1305)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1310))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1307)*(x1309)))+(((px)*(x1302)))+(((x1303)*(x1308)))+(((cj5)*(r01)*(x1308)))+(((IkReal(-1.00000000000000))*(x1305)*(x1309)))+(((IkReal(-1.00000000000000))*(py)*(x1311))));
evalcond[2]=((((IkReal(-0.392250000000000))*(x1306)))+(((IkReal(-1.00000000000000))*(x1307)*(x1308)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(r01)*(x1313)))+(((IkReal(-1.00000000000000))*(x1303)*(x1309)))+(((IkReal(-1.00000000000000))*(x1305)*(x1308)))+(((IkReal(-1.00000000000000))*(py)*(x1310)))+(((IkReal(-1.00000000000000))*(px)*(x1311))));
evalcond[3]=((((sj3)*(x1306)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1304)))+(((x1302)*(x1307)))+(((x1302)*(x1305)))+(((cj5)*(r01)*(x1301)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1304)))+(((x1301)*(x1303))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1314=((IkReal(1.00000000000000))*(sj0));
IkReal x1315=((cj5)*(r22));
IkReal x1316=((r21)*(sj5));
IkReal x1317=((IkReal(1.00000000000000))*(cj0));
IkReal x1318=((r22)*(sj5));
IkReal x1319=((cj5)*(r20));
gconst3=IKsign(((((r02)*(sj0)*(x1319)))+(((IkReal(-1.00000000000000))*(r11)*(x1317)*(x1318)))+(((IkReal(-1.00000000000000))*(r00)*(x1314)*(x1315)))+(((r01)*(sj0)*(x1318)))+(((cj0)*(r10)*(x1315)))+(((IkReal(-1.00000000000000))*(r02)*(x1314)*(x1316)))+(((IkReal(-1.00000000000000))*(r12)*(x1317)*(x1319)))+(((cj0)*(r12)*(x1316)))));
IkReal x1320=((IkReal(1.00000000000000))*(sj0));
IkReal x1321=((cj5)*(r22));
IkReal x1322=((r21)*(sj5));
IkReal x1323=((IkReal(1.00000000000000))*(cj0));
IkReal x1324=((r22)*(sj5));
IkReal x1325=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r12)*(x1323)*(x1325)))+(((IkReal(-1.00000000000000))*(r11)*(x1323)*(x1324)))+(((cj0)*(r10)*(x1321)))+(((r01)*(sj0)*(x1324)))+(((IkReal(-1.00000000000000))*(r02)*(x1320)*(x1322)))+(((cj0)*(r12)*(x1322)))+(((IkReal(-1.00000000000000))*(r00)*(x1320)*(x1321)))+(((r02)*(sj0)*(x1325))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1326=((cj3)*(sj2));
IkReal x1327=((cj2)*(cj3));
IkReal x1328=((cj2)*(sj3));
IkReal x1329=((sj2)*(sj3));
IkReal x1330=((r21)*(sj5));
IkReal x1331=((IkReal(1.00000000000000))*(cj1));
IkReal x1332=((IkReal(1.00000000000000))*(sj1));
IkReal x1333=((r22)*(x1331));
IkReal x1334=((cj5)*(r20)*(sj1));
IkReal x1335=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1326)*(x1333)))+(((r22)*(sj1)*(x1329)))+(((IkReal(-1.00000000000000))*(x1328)*(x1333)))+(((IkReal(-1.00000000000000))*(r22)*(x1327)*(x1332))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1327)*(x1330)*(x1332)))+(((sj1)*(x1329)*(x1330)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1329)*(x1332)))+(((IkReal(-1.00000000000000))*(x1326)*(x1330)*(x1331)))+(((x1328)*(x1335)))+(((x1326)*(x1335)))+(((x1327)*(x1334)))+(((IkReal(-1.00000000000000))*(x1328)*(x1330)*(x1331))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1326)*(x1333)))+(((r22)*(sj1)*(x1329)))+(((IkReal(-1.00000000000000))*(x1328)*(x1333)))+(((IkReal(-1.00000000000000))*(r22)*(x1327)*(x1332)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1327)*(x1330)*(x1332)))+(((sj1)*(x1329)*(x1330)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1329)*(x1332)))+(((IkReal(-1.00000000000000))*(x1326)*(x1330)*(x1331)))+(((x1328)*(x1335)))+(((x1326)*(x1335)))+(((x1327)*(x1334)))+(((IkReal(-1.00000000000000))*(x1328)*(x1330)*(x1331)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1336=IKsin(j4);
IkReal x1337=IKcos(j4);
IkReal x1338=((IkReal(1.00000000000000))*(cj2));
IkReal x1339=((cj3)*(sj1));
IkReal x1340=((cj1)*(sj3));
IkReal x1341=((IkReal(1.00000000000000))*(cj5));
IkReal x1342=((IkReal(1.00000000000000))*(r01));
IkReal x1343=((cj1)*(cj3));
IkReal x1344=((r11)*(sj5));
IkReal x1345=((sj1)*(sj3));
IkReal x1346=((r01)*(sj5));
IkReal x1347=((r21)*(sj5));
IkReal x1348=((cj0)*(x1336));
IkReal x1349=((cj5)*(x1336));
IkReal x1350=((sj0)*(x1337));
IkReal x1351=((IkReal(1.00000000000000))*(x1336));
IkReal x1352=((cj0)*(x1337));
IkReal x1353=((sj0)*(sj5)*(x1336));
IkReal x1354=((IkReal(1.00000000000000))*(x1352));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1347)*(x1351)))+(((r22)*(x1337)))+(((r20)*(x1349))));
evalcond[1]=((((cj5)*(r00)*(x1350)))+(((IkReal(-1.00000000000000))*(r10)*(x1341)*(x1352)))+(((x1344)*(x1352)))+(((r12)*(x1348)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1351)))+(((IkReal(-1.00000000000000))*(sj5)*(x1342)*(x1350))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1354)))+(((x1346)*(x1348)))+(((IkReal(-1.00000000000000))*(r12)*(x1350)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1336)*(x1341)))+(((sj0)*(x1336)*(x1344)))+(((IkReal(-1.00000000000000))*(r00)*(x1341)*(x1348))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x1354)))+(((IkReal(-1.00000000000000))*(r10)*(x1341)*(x1348)))+(((x1344)*(x1348)))+(((r02)*(x1350)))+(((r00)*(sj0)*(x1349)))+(((IkReal(-1.00000000000000))*(x1342)*(x1353))));
evalcond[4]=((((sj2)*(x1345)))+(((cj5)*(r20)*(x1337)))+(((IkReal(-1.00000000000000))*(x1338)*(x1340)))+(((IkReal(-1.00000000000000))*(sj2)*(x1343)))+(((IkReal(-1.00000000000000))*(x1337)*(x1347)))+(((IkReal(-1.00000000000000))*(r22)*(x1351)))+(((IkReal(-1.00000000000000))*(x1338)*(x1339))));
evalcond[5]=((((sj2)*(x1340)))+(((IkReal(-1.00000000000000))*(x1338)*(x1343)))+(((r12)*(sj0)*(x1336)))+(((IkReal(-1.00000000000000))*(r10)*(x1341)*(x1350)))+(((x1344)*(x1350)))+(((r02)*(x1348)))+(((sj2)*(x1339)))+(((x1346)*(x1352)))+(((IkReal(-1.00000000000000))*(r00)*(x1341)*(x1352)))+(((cj2)*(x1345))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1355=IKsin(j4);
IkReal x1356=IKcos(j4);
IkReal x1357=((IkReal(1.00000000000000))*(cj2));
IkReal x1358=((cj3)*(sj1));
IkReal x1359=((cj1)*(sj3));
IkReal x1360=((IkReal(1.00000000000000))*(cj5));
IkReal x1361=((IkReal(1.00000000000000))*(r01));
IkReal x1362=((cj1)*(cj3));
IkReal x1363=((r11)*(sj5));
IkReal x1364=((sj1)*(sj3));
IkReal x1365=((r01)*(sj5));
IkReal x1366=((r21)*(sj5));
IkReal x1367=((cj0)*(x1355));
IkReal x1368=((cj5)*(x1355));
IkReal x1369=((sj0)*(x1356));
IkReal x1370=((IkReal(1.00000000000000))*(x1355));
IkReal x1371=((cj0)*(x1356));
IkReal x1372=((sj0)*(sj5)*(x1355));
IkReal x1373=((IkReal(1.00000000000000))*(x1371));
evalcond[0]=((((r22)*(x1356)))+(((r20)*(x1368)))+(((IkReal(-1.00000000000000))*(x1366)*(x1370))));
evalcond[1]=((((cj5)*(r00)*(x1369)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1370)))+(((IkReal(-1.00000000000000))*(sj5)*(x1361)*(x1369)))+(((r12)*(x1367)))+(((IkReal(-1.00000000000000))*(r10)*(x1360)*(x1371)))+(((x1363)*(x1371))));
evalcond[2]=((((sj0)*(x1355)*(x1363)))+(((IkReal(-1.00000000000000))*(r00)*(x1360)*(x1367)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1355)*(x1360)))+(((IkReal(-1.00000000000000))*(r02)*(x1373)))+(((x1365)*(x1367)))+(((IkReal(-1.00000000000000))*(r12)*(x1369))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1363)*(x1367)))+(((r02)*(x1369)))+(((r00)*(sj0)*(x1368)))+(((IkReal(-1.00000000000000))*(r12)*(x1373)))+(((IkReal(-1.00000000000000))*(r10)*(x1360)*(x1367)))+(((IkReal(-1.00000000000000))*(x1361)*(x1372))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1356)*(x1366)))+(((IkReal(-1.00000000000000))*(sj2)*(x1362)))+(((IkReal(-1.00000000000000))*(r22)*(x1370)))+(((cj5)*(r20)*(x1356)))+(((sj2)*(x1364)))+(((IkReal(-1.00000000000000))*(x1357)*(x1359)))+(((IkReal(-1.00000000000000))*(x1357)*(x1358))));
evalcond[5]=((((x1365)*(x1371)))+(((IkReal(-1.00000000000000))*(r00)*(x1360)*(x1371)))+(((x1363)*(x1369)))+(((r02)*(x1367)))+(((r12)*(sj0)*(x1355)))+(((IkReal(-1.00000000000000))*(r10)*(x1360)*(x1369)))+(((IkReal(-1.00000000000000))*(x1357)*(x1362)))+(((cj2)*(x1364)))+(((sj2)*(x1358)))+(((sj2)*(x1359))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1374=((cj3)*(sj2));
IkReal x1375=((cj2)*(sj3));
IkReal x1376=((cj5)*(r20));
IkReal x1377=((r21)*(sj5));
IkReal x1378=((IkReal(1.00000000000000))*(cj1));
IkReal x1379=((r22)*(x1378));
IkReal x1380=((sj1)*(sj2)*(sj3));
IkReal x1381=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(x1381)))+(((IkReal(-1.00000000000000))*(x1375)*(x1379)))+(((IkReal(-1.00000000000000))*(x1374)*(x1379)))+(((r22)*(x1380))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1375)*(x1377)*(x1378)))+(((cj1)*(x1374)*(x1376)))+(((IkReal(-1.00000000000000))*(x1377)*(x1381)))+(((IkReal(-1.00000000000000))*(x1376)*(x1380)))+(((cj1)*(x1375)*(x1376)))+(((IkReal(-1.00000000000000))*(x1374)*(x1377)*(x1378)))+(((x1376)*(x1381)))+(((x1377)*(x1380))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(r22)*(x1381)))+(((IkReal(-1.00000000000000))*(x1375)*(x1379)))+(((IkReal(-1.00000000000000))*(x1374)*(x1379)))+(((r22)*(x1380)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x1375)*(x1377)*(x1378)))+(((cj1)*(x1374)*(x1376)))+(((IkReal(-1.00000000000000))*(x1377)*(x1381)))+(((IkReal(-1.00000000000000))*(x1376)*(x1380)))+(((cj1)*(x1375)*(x1376)))+(((IkReal(-1.00000000000000))*(x1374)*(x1377)*(x1378)))+(((x1376)*(x1381)))+(((x1377)*(x1380)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1382=IKsin(j4);
IkReal x1383=IKcos(j4);
IkReal x1384=((IkReal(1.00000000000000))*(cj1));
IkReal x1385=((cj5)*(r20));
IkReal x1386=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1382)*(x1386)))+(((r22)*(x1383)))+(((x1382)*(x1385))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1382)))+(((IkReal(-1.00000000000000))*(x1383)*(x1386)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1384)))+(((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((sj1)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1384)))+(((x1383)*(x1385))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1387=((IkReal(20000.0000000000))*(cj5));
IkReal x1388=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((IkReal(-1.00000000000000))*(px)*(r11)*(x1387)))+(((py)*(r00)*(x1388)))+(((py)*(r01)*(x1387)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1388)))));
IkReal x1389=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1389)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1389)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1390=(sj5)*(sj5);
IkReal x1391=(cj5)*(cj5);
IkReal x1392=((cj4)*(sj5));
IkReal x1393=((IkReal(1.00000000000000))*(r02));
IkReal x1394=((r01)*(r10));
IkReal x1395=((cj4)*(cj5));
IkReal x1396=((sj4)*(x1391));
IkReal x1397=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1398=((sj4)*(x1390));
gconst6=IKsign(((((r01)*(r12)*(x1395)))+(((IkReal(-1.00000000000000))*(x1397)*(x1398)))+(((r00)*(r12)*(x1392)))+(((x1394)*(x1396)))+(((x1394)*(x1398)))+(((IkReal(-1.00000000000000))*(x1396)*(x1397)))+(((IkReal(-1.00000000000000))*(r11)*(x1393)*(x1395)))+(((IkReal(-1.00000000000000))*(r10)*(x1392)*(x1393)))));
IkReal x1399=(sj5)*(sj5);
IkReal x1400=(cj5)*(cj5);
IkReal x1401=((cj4)*(sj5));
IkReal x1402=((IkReal(1.00000000000000))*(r02));
IkReal x1403=((r01)*(r10));
IkReal x1404=((cj4)*(cj5));
IkReal x1405=((sj4)*(x1400));
IkReal x1406=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1407=((sj4)*(x1399));
dummyeval[0]=((((r00)*(r12)*(x1401)))+(((IkReal(-1.00000000000000))*(x1406)*(x1407)))+(((IkReal(-1.00000000000000))*(x1405)*(x1406)))+(((r01)*(r12)*(x1404)))+(((IkReal(-1.00000000000000))*(r11)*(x1402)*(x1404)))+(((x1403)*(x1407)))+(((x1403)*(x1405)))+(((IkReal(-1.00000000000000))*(r10)*(x1401)*(x1402))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1408=IKcos(j0);
IkReal x1409=IKsin(j0);
IkReal x1410=((IkReal(1.00000000000000))*(cj5));
IkReal x1411=((IkReal(0.0946500000000000))*(sj5));
IkReal x1412=((IkReal(1.00000000000000))*(cj2));
IkReal x1413=((cj3)*(sj1));
IkReal x1414=((cj1)*(sj3));
IkReal x1415=((IkReal(0.0946500000000000))*(cj5));
IkReal x1416=((r02)*(sj4));
IkReal x1417=((cj1)*(cj3));
IkReal x1418=((sj1)*(sj2));
IkReal x1419=((sj4)*(sj5));
IkReal x1420=((IkReal(1.00000000000000))*(sj5));
IkReal x1421=((cj4)*(r02));
IkReal x1422=((cj4)*(r12));
IkReal x1423=((cj4)*(sj5));
IkReal x1424=((r12)*(sj4));
IkReal x1425=((r01)*(x1409));
IkReal x1426=((r00)*(x1408));
IkReal x1427=((r00)*(x1409));
IkReal x1428=((r11)*(x1408));
IkReal x1429=((r01)*(x1408));
IkReal x1430=((r11)*(x1409));
IkReal x1431=((r10)*(x1409));
IkReal x1432=((IkReal(1.00000000000000))*(x1409));
IkReal x1433=((r10)*(x1408));
IkReal x1434=((IkReal(1.00000000000000))*(x1408));
evalcond[0]=((((sj5)*(x1433)))+(((IkReal(-1.00000000000000))*(x1420)*(x1427)))+(((cj5)*(x1428)))+(((IkReal(-1.00000000000000))*(x1410)*(x1425))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1415)*(x1428)))+(((px)*(x1409)))+(((x1415)*(x1425)))+(((x1411)*(x1427)))+(((IkReal(-1.00000000000000))*(x1411)*(x1433)))+(((IkReal(-1.00000000000000))*(py)*(x1434))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj4)*(x1410)*(x1433)))+(((x1408)*(x1424)))+(((x1423)*(x1428)))+(((cj4)*(cj5)*(x1427)))+(((IkReal(-1.00000000000000))*(x1416)*(x1432)))+(((IkReal(-1.00000000000000))*(cj4)*(x1420)*(x1425))));
evalcond[3]=((((x1419)*(x1430)))+(((IkReal(-1.00000000000000))*(x1422)*(x1432)))+(((IkReal(-1.00000000000000))*(sj4)*(x1410)*(x1426)))+(((IkReal(-1.00000000000000))*(sj4)*(x1410)*(x1431)))+(((x1419)*(x1429)))+(((IkReal(-1.00000000000000))*(x1421)*(x1434))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1422)*(x1434)))+(((x1409)*(x1421)))+(((IkReal(-1.00000000000000))*(x1419)*(x1425)))+(((IkReal(-1.00000000000000))*(sj4)*(x1410)*(x1433)))+(((x1419)*(x1428)))+(((cj5)*(sj4)*(x1427))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1415)*(x1429)))+(((IkReal(-0.392250000000000))*(x1418)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1434)))+(((IkReal(-1.00000000000000))*(x1411)*(x1431)))+(((IkReal(-1.00000000000000))*(x1415)*(x1430)))+(((IkReal(-1.00000000000000))*(py)*(x1432)))+(((IkReal(-1.00000000000000))*(x1411)*(x1426))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj2)*(x1417)))+(((IkReal(-1.00000000000000))*(x1412)*(x1413)))+(((IkReal(-1.00000000000000))*(x1412)*(x1414)))+(((sj5)*(x1431)))+(((cj5)*(x1430)))+(((sj5)*(x1426)))+(((cj5)*(x1429)))+(((sj3)*(x1418))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj4)*(x1410)*(x1431)))+(((sj2)*(x1413)))+(((sj2)*(x1414)))+(((x1423)*(x1429)))+(((IkReal(-1.00000000000000))*(x1412)*(x1417)))+(((x1409)*(x1424)))+(((IkReal(-1.00000000000000))*(cj4)*(x1410)*(x1426)))+(((x1423)*(x1430)))+(((x1408)*(x1416)))+(((cj2)*(sj1)*(sj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1435=((IkReal(2183.00000000000))*(sj5));
IkReal x1436=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r11)*(x1436)))+(((r10)*(x1435))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r01)*(x1436)))+(((r00)*(x1435))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r11)*(x1436)))+(((r10)*(x1435)))))), ((gconst5)*(((((r01)*(x1436)))+(((r00)*(x1435)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1437=IKcos(j0);
IkReal x1438=IKsin(j0);
IkReal x1439=((IkReal(1.00000000000000))*(cj5));
IkReal x1440=((IkReal(0.0946500000000000))*(sj5));
IkReal x1441=((IkReal(1.00000000000000))*(cj2));
IkReal x1442=((cj3)*(sj1));
IkReal x1443=((cj1)*(sj3));
IkReal x1444=((IkReal(0.0946500000000000))*(cj5));
IkReal x1445=((r02)*(sj4));
IkReal x1446=((cj1)*(cj3));
IkReal x1447=((sj1)*(sj2));
IkReal x1448=((sj4)*(sj5));
IkReal x1449=((IkReal(1.00000000000000))*(sj5));
IkReal x1450=((cj4)*(r02));
IkReal x1451=((cj4)*(r12));
IkReal x1452=((cj4)*(sj5));
IkReal x1453=((r12)*(sj4));
IkReal x1454=((r01)*(x1438));
IkReal x1455=((r00)*(x1437));
IkReal x1456=((r00)*(x1438));
IkReal x1457=((r11)*(x1437));
IkReal x1458=((r01)*(x1437));
IkReal x1459=((r11)*(x1438));
IkReal x1460=((r10)*(x1438));
IkReal x1461=((IkReal(1.00000000000000))*(x1438));
IkReal x1462=((r10)*(x1437));
IkReal x1463=((IkReal(1.00000000000000))*(x1437));
evalcond[0]=((((cj5)*(x1457)))+(((IkReal(-1.00000000000000))*(x1439)*(x1454)))+(((IkReal(-1.00000000000000))*(x1449)*(x1456)))+(((sj5)*(x1462))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(py)*(x1463)))+(((px)*(x1438)))+(((IkReal(-1.00000000000000))*(x1440)*(x1462)))+(((x1440)*(x1456)))+(((x1444)*(x1454)))+(((IkReal(-1.00000000000000))*(x1444)*(x1457))));
evalcond[2]=((((x1437)*(x1453)))+(((IkReal(-1.00000000000000))*(cj4)*(x1449)*(x1454)))+(((IkReal(-1.00000000000000))*(x1445)*(x1461)))+(((IkReal(-1.00000000000000))*(cj4)*(x1439)*(x1462)))+(((x1452)*(x1457)))+(((cj4)*(cj5)*(x1456))));
evalcond[3]=((((x1448)*(x1459)))+(((x1448)*(x1458)))+(((IkReal(-1.00000000000000))*(sj4)*(x1439)*(x1460)))+(((IkReal(-1.00000000000000))*(x1450)*(x1463)))+(((IkReal(-1.00000000000000))*(sj4)*(x1439)*(x1455)))+(((IkReal(-1.00000000000000))*(x1451)*(x1461))));
evalcond[4]=((IkReal(1.00000000000000))+(((cj5)*(sj4)*(x1456)))+(((x1448)*(x1457)))+(((IkReal(-1.00000000000000))*(sj4)*(x1439)*(x1462)))+(((x1438)*(x1450)))+(((IkReal(-1.00000000000000))*(x1448)*(x1454)))+(((IkReal(-1.00000000000000))*(x1451)*(x1463))));
evalcond[5]=((((IkReal(-1.00000000000000))*(py)*(x1461)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1440)*(x1455)))+(((IkReal(-1.00000000000000))*(x1440)*(x1460)))+(((IkReal(-0.392250000000000))*(x1447)))+(((IkReal(-1.00000000000000))*(px)*(x1463)))+(((IkReal(-1.00000000000000))*(x1444)*(x1459)))+(((IkReal(-1.00000000000000))*(x1444)*(x1458))));
evalcond[6]=((((cj5)*(x1459)))+(((cj5)*(x1458)))+(((IkReal(-1.00000000000000))*(x1441)*(x1442)))+(((IkReal(-1.00000000000000))*(x1441)*(x1443)))+(((sj5)*(x1455)))+(((sj3)*(x1447)))+(((IkReal(-1.00000000000000))*(sj2)*(x1446)))+(((sj5)*(x1460))));
evalcond[7]=((((x1437)*(x1445)))+(((IkReal(-1.00000000000000))*(x1441)*(x1446)))+(((x1438)*(x1453)))+(((IkReal(-1.00000000000000))*(cj4)*(x1439)*(x1455)))+(((sj2)*(x1443)))+(((sj2)*(x1442)))+(((IkReal(-1.00000000000000))*(cj4)*(x1439)*(x1460)))+(((x1452)*(x1459)))+(((x1452)*(x1458)))+(((cj2)*(sj1)*(sj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1464=((IkReal(2183.00000000000))*(sj5));
IkReal x1465=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r11)*(x1465)))+(((r10)*(x1464))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r01)*(x1465)))+(((r00)*(x1464))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r11)*(x1465)))+(((r10)*(x1464)))))), ((gconst0)*(((((r01)*(x1465)))+(((r00)*(x1464)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1466=IKcos(j0);
IkReal x1467=IKsin(j0);
IkReal x1468=((r00)*(sj5));
IkReal x1469=((IkReal(1.00000000000000))*(cj2));
IkReal x1470=((cj5)*(r11));
IkReal x1471=((sj1)*(sj2));
IkReal x1472=((r10)*(sj5));
IkReal x1473=((IkReal(0.0946500000000000))*(x1467));
IkReal x1474=((IkReal(0.0946500000000000))*(x1466));
IkReal x1475=((IkReal(1.00000000000000))*(x1467));
IkReal x1476=((IkReal(1.00000000000000))*(x1466));
IkReal x1477=((cj5)*(r01)*(x1467));
IkReal x1478=((cj5)*(x1474));
evalcond[0]=((((x1466)*(x1470)))+(((x1466)*(x1472)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1475)))+(((IkReal(-1.00000000000000))*(x1468)*(x1475))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1470)*(x1474)))+(((px)*(x1467)))+(((IkReal(-1.00000000000000))*(py)*(x1476)))+(((cj5)*(r01)*(x1473)))+(((x1468)*(x1473)))+(((IkReal(-1.00000000000000))*(x1472)*(x1474))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1478)))+(((IkReal(-1.00000000000000))*(x1470)*(x1473)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1476)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1468)*(x1474)))+(((IkReal(-1.00000000000000))*(py)*(x1475)))+(((IkReal(-0.392250000000000))*(x1471)))+(((IkReal(-1.00000000000000))*(x1472)*(x1473))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1469)))+(((cj5)*(r01)*(x1466)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1469)))+(((x1467)*(x1472)))+(((x1467)*(x1470)))+(((x1466)*(x1468)))+(((sj3)*(x1471))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1479=((IkReal(1.00000000000000))*(sj0));
IkReal x1480=((cj5)*(r22));
IkReal x1481=((r21)*(sj5));
IkReal x1482=((IkReal(1.00000000000000))*(cj0));
IkReal x1483=((r22)*(sj5));
IkReal x1484=((cj5)*(r20));
gconst3=IKsign(((((cj0)*(r12)*(x1481)))+(((IkReal(-1.00000000000000))*(r02)*(x1479)*(x1481)))+(((IkReal(-1.00000000000000))*(r11)*(x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(r00)*(x1479)*(x1480)))+(((r01)*(sj0)*(x1483)))+(((r02)*(sj0)*(x1484)))+(((cj0)*(r10)*(x1480)))+(((IkReal(-1.00000000000000))*(r12)*(x1482)*(x1484)))));
IkReal x1485=((IkReal(1.00000000000000))*(sj0));
IkReal x1486=((cj5)*(r22));
IkReal x1487=((r21)*(sj5));
IkReal x1488=((IkReal(1.00000000000000))*(cj0));
IkReal x1489=((r22)*(sj5));
IkReal x1490=((cj5)*(r20));
dummyeval[0]=((((cj0)*(r12)*(x1487)))+(((IkReal(-1.00000000000000))*(r11)*(x1488)*(x1489)))+(((IkReal(-1.00000000000000))*(r00)*(x1485)*(x1486)))+(((r01)*(sj0)*(x1489)))+(((IkReal(-1.00000000000000))*(r02)*(x1485)*(x1487)))+(((r02)*(sj0)*(x1490)))+(((cj0)*(r10)*(x1486)))+(((IkReal(-1.00000000000000))*(r12)*(x1488)*(x1490))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1491=((cj3)*(sj2));
IkReal x1492=((cj2)*(cj3));
IkReal x1493=((cj2)*(sj3));
IkReal x1494=((sj2)*(sj3));
IkReal x1495=((r21)*(sj5));
IkReal x1496=((IkReal(1.00000000000000))*(cj1));
IkReal x1497=((IkReal(1.00000000000000))*(sj1));
IkReal x1498=((r22)*(x1496));
IkReal x1499=((cj5)*(r20)*(sj1));
IkReal x1500=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1493)*(x1498)))+(((IkReal(-1.00000000000000))*(x1491)*(x1498)))+(((IkReal(-1.00000000000000))*(r22)*(x1492)*(x1497)))+(((r22)*(sj1)*(x1494))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1492)*(x1495)*(x1497)))+(((IkReal(-1.00000000000000))*(x1493)*(x1495)*(x1496)))+(((x1492)*(x1499)))+(((x1491)*(x1500)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1494)*(x1497)))+(((IkReal(-1.00000000000000))*(x1491)*(x1495)*(x1496)))+(((sj1)*(x1494)*(x1495)))+(((x1493)*(x1500))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1493)*(x1498)))+(((IkReal(-1.00000000000000))*(x1491)*(x1498)))+(((IkReal(-1.00000000000000))*(r22)*(x1492)*(x1497)))+(((r22)*(sj1)*(x1494)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1492)*(x1495)*(x1497)))+(((IkReal(-1.00000000000000))*(x1493)*(x1495)*(x1496)))+(((x1492)*(x1499)))+(((x1491)*(x1500)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1494)*(x1497)))+(((IkReal(-1.00000000000000))*(x1491)*(x1495)*(x1496)))+(((sj1)*(x1494)*(x1495)))+(((x1493)*(x1500)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1501=IKsin(j4);
IkReal x1502=IKcos(j4);
IkReal x1503=((IkReal(1.00000000000000))*(cj2));
IkReal x1504=((cj3)*(sj1));
IkReal x1505=((cj1)*(sj3));
IkReal x1506=((IkReal(1.00000000000000))*(cj5));
IkReal x1507=((IkReal(1.00000000000000))*(r01));
IkReal x1508=((cj1)*(cj3));
IkReal x1509=((r11)*(sj5));
IkReal x1510=((sj1)*(sj3));
IkReal x1511=((r01)*(sj5));
IkReal x1512=((r21)*(sj5));
IkReal x1513=((cj0)*(x1501));
IkReal x1514=((cj5)*(x1501));
IkReal x1515=((sj0)*(x1502));
IkReal x1516=((IkReal(1.00000000000000))*(x1501));
IkReal x1517=((cj0)*(x1502));
IkReal x1518=((sj0)*(sj5)*(x1501));
IkReal x1519=((IkReal(1.00000000000000))*(x1517));
evalcond[0]=((((r20)*(x1514)))+(((r22)*(x1502)))+(((IkReal(-1.00000000000000))*(x1512)*(x1516))));
evalcond[1]=((((x1509)*(x1517)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1516)))+(((cj5)*(r00)*(x1515)))+(((r12)*(x1513)))+(((IkReal(-1.00000000000000))*(sj5)*(x1507)*(x1515)))+(((IkReal(-1.00000000000000))*(r10)*(x1506)*(x1517))));
evalcond[2]=((((sj0)*(x1501)*(x1509)))+(((IkReal(-1.00000000000000))*(r02)*(x1519)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1501)*(x1506)))+(((IkReal(-1.00000000000000))*(r12)*(x1515)))+(((x1511)*(x1513)))+(((IkReal(-1.00000000000000))*(r00)*(x1506)*(x1513))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1509)*(x1513)))+(((IkReal(-1.00000000000000))*(x1507)*(x1518)))+(((r00)*(sj0)*(x1514)))+(((r02)*(x1515)))+(((IkReal(-1.00000000000000))*(r10)*(x1506)*(x1513)))+(((IkReal(-1.00000000000000))*(r12)*(x1519))));
evalcond[4]=((((sj2)*(x1510)))+(((IkReal(-1.00000000000000))*(r22)*(x1516)))+(((cj5)*(r20)*(x1502)))+(((IkReal(-1.00000000000000))*(sj2)*(x1508)))+(((IkReal(-1.00000000000000))*(x1503)*(x1505)))+(((IkReal(-1.00000000000000))*(x1503)*(x1504)))+(((IkReal(-1.00000000000000))*(x1502)*(x1512))));
evalcond[5]=((((x1509)*(x1515)))+(((cj2)*(x1510)))+(((r02)*(x1513)))+(((r12)*(sj0)*(x1501)))+(((IkReal(-1.00000000000000))*(x1503)*(x1508)))+(((IkReal(-1.00000000000000))*(r10)*(x1506)*(x1515)))+(((x1511)*(x1517)))+(((IkReal(-1.00000000000000))*(r00)*(x1506)*(x1517)))+(((sj2)*(x1505)))+(((sj2)*(x1504))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1520=IKsin(j4);
IkReal x1521=IKcos(j4);
IkReal x1522=((IkReal(1.00000000000000))*(cj2));
IkReal x1523=((cj3)*(sj1));
IkReal x1524=((cj1)*(sj3));
IkReal x1525=((IkReal(1.00000000000000))*(cj5));
IkReal x1526=((IkReal(1.00000000000000))*(r01));
IkReal x1527=((cj1)*(cj3));
IkReal x1528=((r11)*(sj5));
IkReal x1529=((sj1)*(sj3));
IkReal x1530=((r01)*(sj5));
IkReal x1531=((r21)*(sj5));
IkReal x1532=((cj0)*(x1520));
IkReal x1533=((cj5)*(x1520));
IkReal x1534=((sj0)*(x1521));
IkReal x1535=((IkReal(1.00000000000000))*(x1520));
IkReal x1536=((cj0)*(x1521));
IkReal x1537=((sj0)*(sj5)*(x1520));
IkReal x1538=((IkReal(1.00000000000000))*(x1536));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1531)*(x1535)))+(((r20)*(x1533)))+(((r22)*(x1521))));
evalcond[1]=((((r12)*(x1532)))+(((IkReal(-1.00000000000000))*(sj5)*(x1526)*(x1534)))+(((IkReal(-1.00000000000000))*(r10)*(x1525)*(x1536)))+(((x1528)*(x1536)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1535)))+(((cj5)*(r00)*(x1534))));
evalcond[2]=((((sj0)*(x1520)*(x1528)))+(((x1530)*(x1532)))+(((IkReal(-1.00000000000000))*(r02)*(x1538)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1520)*(x1525)))+(((IkReal(-1.00000000000000))*(r12)*(x1534)))+(((IkReal(-1.00000000000000))*(r00)*(x1525)*(x1532))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x1538)))+(((IkReal(-1.00000000000000))*(r10)*(x1525)*(x1532)))+(((x1528)*(x1532)))+(((r00)*(sj0)*(x1533)))+(((r02)*(x1534)))+(((IkReal(-1.00000000000000))*(x1526)*(x1537))));
evalcond[4]=((((sj2)*(x1529)))+(((IkReal(-1.00000000000000))*(r22)*(x1535)))+(((cj5)*(r20)*(x1521)))+(((IkReal(-1.00000000000000))*(sj2)*(x1527)))+(((IkReal(-1.00000000000000))*(x1521)*(x1531)))+(((IkReal(-1.00000000000000))*(x1522)*(x1524)))+(((IkReal(-1.00000000000000))*(x1522)*(x1523))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1525)*(x1534)))+(((sj2)*(x1524)))+(((sj2)*(x1523)))+(((x1528)*(x1534)))+(((x1530)*(x1536)))+(((r12)*(sj0)*(x1520)))+(((cj2)*(x1529)))+(((IkReal(-1.00000000000000))*(x1522)*(x1527)))+(((r02)*(x1532)))+(((IkReal(-1.00000000000000))*(r00)*(x1525)*(x1536))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(((IkReal(0.0946500000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0946500000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1539=((IkReal(1.00000000000000))*(IKatan2(((IkReal(0.0946500000000000))*(r21)), ((IkReal(0.0946500000000000))*(r20)))));
if( (((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1540=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1540)))+(((IkReal(-1.00000000000000))*(x1539))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1539)))+(x1540));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1541=((IkReal(1.00000000000000))*(sj3));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1541)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1541)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(r21)*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r20)*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1542=((IkReal(20000.0000000000))*(cj5));
IkReal x1543=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((IkReal(-1.00000000000000))*(px)*(r11)*(x1542)))+(((py)*(r01)*(x1542)))+(((py)*(r00)*(x1543)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1543)))));
IkReal x1544=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1544)))+(((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1544)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1545=(cj5)*(cj5);
IkReal x1546=(sj5)*(sj5);
IkReal x1547=((IkReal(1.00000000000000))*(x1546));
IkReal x1548=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1549=((IkReal(1.00000000000000))*(x1545));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1549)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1548)))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1548)))+(((IkReal(-1.00000000000000))*(x1547)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(x1549)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1547)*((r00)*(r00))))));
IkReal x1550=(cj5)*(cj5);
IkReal x1551=(sj5)*(sj5);
IkReal x1552=((IkReal(1.00000000000000))*(x1551));
IkReal x1553=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1554=((IkReal(1.00000000000000))*(x1550));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1554)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1552)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(x1552)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1553)))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1553)))+(((IkReal(-1.00000000000000))*(x1554)*((r11)*(r11)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1555=((sj2)*(sj3));
IkReal x1556=((cj5)*(r01));
IkReal x1557=((cj5)*(r11));
IkReal x1558=((r00)*(sj5));
IkReal x1559=((r10)*(sj5));
IkReal x1560=((sj1)*(x1558));
IkReal x1561=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x1562=((sj1)*(x1559));
IkReal x1563=((IkReal(1.00000000000000))*(cj1)*(cj2)*(sj3));
IkReal x1564=((IkReal(1.00000000000000))*(cj1)*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((x1555)*(x1562)))+(((IkReal(-1.00000000000000))*(x1559)*(x1563)))+(((IkReal(-1.00000000000000))*(x1559)*(x1564)))+(((IkReal(-1.00000000000000))*(sj1)*(x1557)*(x1561)))+(((IkReal(-1.00000000000000))*(x1557)*(x1563)))+(((IkReal(-1.00000000000000))*(x1557)*(x1564)))+(((IkReal(-1.00000000000000))*(x1561)*(x1562)))+(((sj1)*(x1555)*(x1557))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((x1555)*(x1560)))+(((IkReal(-1.00000000000000))*(sj1)*(x1556)*(x1561)))+(((IkReal(-1.00000000000000))*(x1560)*(x1561)))+(((IkReal(-1.00000000000000))*(x1556)*(x1563)))+(((IkReal(-1.00000000000000))*(x1556)*(x1564)))+(((sj1)*(x1555)*(x1556)))+(((IkReal(-1.00000000000000))*(x1558)*(x1564)))+(((IkReal(-1.00000000000000))*(x1558)*(x1563))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((x1555)*(x1562)))+(((IkReal(-1.00000000000000))*(x1559)*(x1563)))+(((IkReal(-1.00000000000000))*(x1559)*(x1564)))+(((IkReal(-1.00000000000000))*(sj1)*(x1557)*(x1561)))+(((IkReal(-1.00000000000000))*(x1557)*(x1563)))+(((IkReal(-1.00000000000000))*(x1557)*(x1564)))+(((IkReal(-1.00000000000000))*(x1561)*(x1562)))+(((sj1)*(x1555)*(x1557)))))), ((gconst1)*(((((x1555)*(x1560)))+(((IkReal(-1.00000000000000))*(sj1)*(x1556)*(x1561)))+(((IkReal(-1.00000000000000))*(x1560)*(x1561)))+(((IkReal(-1.00000000000000))*(x1556)*(x1563)))+(((IkReal(-1.00000000000000))*(x1556)*(x1564)))+(((sj1)*(x1555)*(x1556)))+(((IkReal(-1.00000000000000))*(x1558)*(x1564)))+(((IkReal(-1.00000000000000))*(x1558)*(x1563)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1565=IKcos(j0);
IkReal x1566=IKsin(j0);
IkReal x1567=((r00)*(sj5));
IkReal x1568=((IkReal(1.00000000000000))*(cj2));
IkReal x1569=((cj5)*(r11));
IkReal x1570=((sj1)*(sj2));
IkReal x1571=((r10)*(sj5));
IkReal x1572=((IkReal(0.0946500000000000))*(x1566));
IkReal x1573=((IkReal(0.0946500000000000))*(x1565));
IkReal x1574=((IkReal(1.00000000000000))*(x1566));
IkReal x1575=((IkReal(1.00000000000000))*(x1565));
IkReal x1576=((cj5)*(r01)*(x1566));
IkReal x1577=((cj5)*(x1573));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1567)*(x1574)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1574)))+(((x1565)*(x1571)))+(((x1565)*(x1569))));
evalcond[1]=((IkReal(0.109150000000000))+(((x1567)*(x1572)))+(((IkReal(-1.00000000000000))*(x1571)*(x1573)))+(((IkReal(-1.00000000000000))*(py)*(x1575)))+(((IkReal(-1.00000000000000))*(x1569)*(x1573)))+(((px)*(x1566)))+(((cj5)*(r01)*(x1572))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1571)*(x1572)))+(((IkReal(-0.392250000000000))*(x1570)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x1574)))+(((IkReal(-1.00000000000000))*(x1567)*(x1573)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1569)*(x1572)))+(((IkReal(-1.00000000000000))*(px)*(x1575)))+(((IkReal(-1.00000000000000))*(r01)*(x1577))));
evalcond[3]=((((x1566)*(x1569)))+(((x1566)*(x1571)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1568)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1568)))+(((cj5)*(r01)*(x1565)))+(((x1565)*(x1567)))+(((sj3)*(x1570))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1578=((IkReal(1.00000000000000))*(sj0));
IkReal x1579=((cj5)*(r22));
IkReal x1580=((r21)*(sj5));
IkReal x1581=((IkReal(1.00000000000000))*(cj0));
IkReal x1582=((r22)*(sj5));
IkReal x1583=((cj5)*(r20));
gconst3=IKsign(((((cj0)*(r10)*(x1579)))+(((IkReal(-1.00000000000000))*(r00)*(x1578)*(x1579)))+(((IkReal(-1.00000000000000))*(r02)*(x1578)*(x1580)))+(((cj0)*(r12)*(x1580)))+(((IkReal(-1.00000000000000))*(r11)*(x1581)*(x1582)))+(((r01)*(sj0)*(x1582)))+(((IkReal(-1.00000000000000))*(r12)*(x1581)*(x1583)))+(((r02)*(sj0)*(x1583)))));
IkReal x1584=((IkReal(1.00000000000000))*(sj0));
IkReal x1585=((cj5)*(r22));
IkReal x1586=((r21)*(sj5));
IkReal x1587=((IkReal(1.00000000000000))*(cj0));
IkReal x1588=((r22)*(sj5));
IkReal x1589=((cj5)*(r20));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r02)*(x1584)*(x1586)))+(((cj0)*(r10)*(x1585)))+(((cj0)*(r12)*(x1586)))+(((IkReal(-1.00000000000000))*(r00)*(x1584)*(x1585)))+(((r01)*(sj0)*(x1588)))+(((IkReal(-1.00000000000000))*(r12)*(x1587)*(x1589)))+(((r02)*(sj0)*(x1589)))+(((IkReal(-1.00000000000000))*(r11)*(x1587)*(x1588))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1590=((cj3)*(sj2));
IkReal x1591=((cj2)*(cj3));
IkReal x1592=((cj2)*(sj3));
IkReal x1593=((sj2)*(sj3));
IkReal x1594=((r21)*(sj5));
IkReal x1595=((IkReal(1.00000000000000))*(cj1));
IkReal x1596=((IkReal(1.00000000000000))*(sj1));
IkReal x1597=((r22)*(x1595));
IkReal x1598=((cj5)*(r20)*(sj1));
IkReal x1599=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1592)*(x1597)))+(((IkReal(-1.00000000000000))*(r22)*(x1591)*(x1596)))+(((r22)*(sj1)*(x1593)))+(((IkReal(-1.00000000000000))*(x1590)*(x1597))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1592)*(x1594)*(x1595)))+(((x1590)*(x1599)))+(((sj1)*(x1593)*(x1594)))+(((IkReal(-1.00000000000000))*(x1590)*(x1594)*(x1595)))+(((x1592)*(x1599)))+(((x1591)*(x1598)))+(((IkReal(-1.00000000000000))*(x1591)*(x1594)*(x1596)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1593)*(x1596))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1592)*(x1597)))+(((IkReal(-1.00000000000000))*(r22)*(x1591)*(x1596)))+(((r22)*(sj1)*(x1593)))+(((IkReal(-1.00000000000000))*(x1590)*(x1597)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1592)*(x1594)*(x1595)))+(((x1590)*(x1599)))+(((sj1)*(x1593)*(x1594)))+(((IkReal(-1.00000000000000))*(x1590)*(x1594)*(x1595)))+(((x1592)*(x1599)))+(((x1591)*(x1598)))+(((IkReal(-1.00000000000000))*(x1591)*(x1594)*(x1596)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1593)*(x1596)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1600=IKsin(j4);
IkReal x1601=IKcos(j4);
IkReal x1602=((IkReal(1.00000000000000))*(cj2));
IkReal x1603=((cj3)*(sj1));
IkReal x1604=((cj1)*(sj3));
IkReal x1605=((IkReal(1.00000000000000))*(cj5));
IkReal x1606=((IkReal(1.00000000000000))*(r01));
IkReal x1607=((cj1)*(cj3));
IkReal x1608=((r11)*(sj5));
IkReal x1609=((sj1)*(sj3));
IkReal x1610=((r01)*(sj5));
IkReal x1611=((r21)*(sj5));
IkReal x1612=((cj0)*(x1600));
IkReal x1613=((cj5)*(x1600));
IkReal x1614=((sj0)*(x1601));
IkReal x1615=((IkReal(1.00000000000000))*(x1600));
IkReal x1616=((cj0)*(x1601));
IkReal x1617=((sj0)*(sj5)*(x1600));
IkReal x1618=((IkReal(1.00000000000000))*(x1616));
evalcond[0]=((((r20)*(x1613)))+(((IkReal(-1.00000000000000))*(x1611)*(x1615)))+(((r22)*(x1601))));
evalcond[1]=((((cj5)*(r00)*(x1614)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1615)))+(((r12)*(x1612)))+(((x1608)*(x1616)))+(((IkReal(-1.00000000000000))*(sj5)*(x1606)*(x1614)))+(((IkReal(-1.00000000000000))*(r10)*(x1605)*(x1616))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x1614)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1600)*(x1605)))+(((IkReal(-1.00000000000000))*(r00)*(x1605)*(x1612)))+(((IkReal(-1.00000000000000))*(r02)*(x1618)))+(((sj0)*(x1600)*(x1608)))+(((x1610)*(x1612))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1606)*(x1617)))+(((IkReal(-1.00000000000000))*(r12)*(x1618)))+(((r00)*(sj0)*(x1613)))+(((x1608)*(x1612)))+(((IkReal(-1.00000000000000))*(r10)*(x1605)*(x1612)))+(((r02)*(x1614))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1601)*(x1611)))+(((sj2)*(x1609)))+(((IkReal(-1.00000000000000))*(r22)*(x1615)))+(((cj5)*(r20)*(x1601)))+(((IkReal(-1.00000000000000))*(sj2)*(x1607)))+(((IkReal(-1.00000000000000))*(x1602)*(x1603)))+(((IkReal(-1.00000000000000))*(x1602)*(x1604))));
evalcond[5]=((((sj2)*(x1603)))+(((sj2)*(x1604)))+(((r12)*(sj0)*(x1600)))+(((IkReal(-1.00000000000000))*(r00)*(x1605)*(x1616)))+(((x1608)*(x1614)))+(((cj2)*(x1609)))+(((IkReal(-1.00000000000000))*(r10)*(x1605)*(x1614)))+(((IkReal(-1.00000000000000))*(x1602)*(x1607)))+(((x1610)*(x1616)))+(((r02)*(x1612))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1619=IKsin(j4);
IkReal x1620=IKcos(j4);
IkReal x1621=((IkReal(1.00000000000000))*(cj2));
IkReal x1622=((cj3)*(sj1));
IkReal x1623=((cj1)*(sj3));
IkReal x1624=((IkReal(1.00000000000000))*(cj5));
IkReal x1625=((IkReal(1.00000000000000))*(r01));
IkReal x1626=((cj1)*(cj3));
IkReal x1627=((r11)*(sj5));
IkReal x1628=((sj1)*(sj3));
IkReal x1629=((r01)*(sj5));
IkReal x1630=((r21)*(sj5));
IkReal x1631=((cj0)*(x1619));
IkReal x1632=((cj5)*(x1619));
IkReal x1633=((sj0)*(x1620));
IkReal x1634=((IkReal(1.00000000000000))*(x1619));
IkReal x1635=((cj0)*(x1620));
IkReal x1636=((sj0)*(sj5)*(x1619));
IkReal x1637=((IkReal(1.00000000000000))*(x1635));
evalcond[0]=((((r20)*(x1632)))+(((r22)*(x1620)))+(((IkReal(-1.00000000000000))*(x1630)*(x1634))));
evalcond[1]=((((x1627)*(x1635)))+(((cj5)*(r00)*(x1633)))+(((r12)*(x1631)))+(((IkReal(-1.00000000000000))*(sj5)*(x1625)*(x1633)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1634)))+(((IkReal(-1.00000000000000))*(r10)*(x1624)*(x1635))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1624)*(x1631)))+(((x1629)*(x1631)))+(((sj0)*(x1619)*(x1627)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1619)*(x1624)))+(((IkReal(-1.00000000000000))*(r02)*(x1637)))+(((IkReal(-1.00000000000000))*(r12)*(x1633))));
evalcond[3]=((IkReal(1.00000000000000))+(((x1627)*(x1631)))+(((r02)*(x1633)))+(((IkReal(-1.00000000000000))*(r12)*(x1637)))+(((IkReal(-1.00000000000000))*(x1625)*(x1636)))+(((r00)*(sj0)*(x1632)))+(((IkReal(-1.00000000000000))*(r10)*(x1624)*(x1631))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1620)*(x1630)))+(((IkReal(-1.00000000000000))*(r22)*(x1634)))+(((sj2)*(x1628)))+(((IkReal(-1.00000000000000))*(x1621)*(x1623)))+(((IkReal(-1.00000000000000))*(x1621)*(x1622)))+(((cj5)*(r20)*(x1620)))+(((IkReal(-1.00000000000000))*(sj2)*(x1626))));
evalcond[5]=((((x1627)*(x1633)))+(((r02)*(x1631)))+(((sj2)*(x1622)))+(((sj2)*(x1623)))+(((IkReal(-1.00000000000000))*(r00)*(x1624)*(x1635)))+(((x1629)*(x1635)))+(((IkReal(-1.00000000000000))*(x1621)*(x1626)))+(((cj2)*(x1628)))+(((IkReal(-1.00000000000000))*(r10)*(x1624)*(x1633)))+(((r12)*(sj0)*(x1619))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1638=((cj3)*(sj2));
IkReal x1639=((cj2)*(sj3));
IkReal x1640=((cj5)*(r20));
IkReal x1641=((r21)*(sj5));
IkReal x1642=((IkReal(1.00000000000000))*(cj1));
IkReal x1643=((r22)*(x1642));
IkReal x1644=((sj1)*(sj2)*(sj3));
IkReal x1645=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1638)*(x1643)))+(((IkReal(-1.00000000000000))*(x1639)*(x1643)))+(((IkReal(-1.00000000000000))*(r22)*(x1645)))+(((r22)*(x1644))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x1640)*(x1645)))+(((IkReal(-1.00000000000000))*(x1639)*(x1641)*(x1642)))+(((IkReal(-1.00000000000000))*(x1641)*(x1645)))+(((x1641)*(x1644)))+(((IkReal(-1.00000000000000))*(x1638)*(x1641)*(x1642)))+(((cj1)*(x1638)*(x1640)))+(((cj1)*(x1639)*(x1640)))+(((IkReal(-1.00000000000000))*(x1640)*(x1644))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x1638)*(x1643)))+(((IkReal(-1.00000000000000))*(x1639)*(x1643)))+(((IkReal(-1.00000000000000))*(r22)*(x1645)))+(((r22)*(x1644)))))), ((gconst2)*(((((x1640)*(x1645)))+(((IkReal(-1.00000000000000))*(x1639)*(x1641)*(x1642)))+(((IkReal(-1.00000000000000))*(x1641)*(x1645)))+(((x1641)*(x1644)))+(((IkReal(-1.00000000000000))*(x1638)*(x1641)*(x1642)))+(((cj1)*(x1638)*(x1640)))+(((cj1)*(x1639)*(x1640)))+(((IkReal(-1.00000000000000))*(x1640)*(x1644)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1646=IKsin(j4);
IkReal x1647=IKcos(j4);
IkReal x1648=((IkReal(1.00000000000000))*(cj1));
IkReal x1649=((cj5)*(r20));
IkReal x1650=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1646)*(x1650)))+(((x1646)*(x1649)))+(((r22)*(x1647))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1648)))+(((IkReal(-1.00000000000000))*(x1647)*(x1650)))+(((x1647)*(x1649)))+(((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((sj1)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(r22)*(x1646)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1648))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1651=((IkReal(20000.0000000000))*(cj5));
IkReal x1652=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((IkReal(-1.00000000000000))*(px)*(r11)*(x1651)))+(((py)*(r01)*(x1651)))+(((py)*(r00)*(x1652)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1652)))));
IkReal x1653=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1653)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1653)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1654=(sj5)*(sj5);
IkReal x1655=(cj5)*(cj5);
IkReal x1656=((cj4)*(sj5));
IkReal x1657=((IkReal(1.00000000000000))*(r02));
IkReal x1658=((r01)*(r10));
IkReal x1659=((cj4)*(cj5));
IkReal x1660=((sj4)*(x1655));
IkReal x1661=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1662=((sj4)*(x1654));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(x1661)*(x1662)))+(((r01)*(r12)*(x1659)))+(((x1658)*(x1660)))+(((x1658)*(x1662)))+(((IkReal(-1.00000000000000))*(r11)*(x1657)*(x1659)))+(((IkReal(-1.00000000000000))*(x1660)*(x1661)))+(((r00)*(r12)*(x1656)))+(((IkReal(-1.00000000000000))*(r10)*(x1656)*(x1657)))));
IkReal x1663=(sj5)*(sj5);
IkReal x1664=(cj5)*(cj5);
IkReal x1665=((cj4)*(sj5));
IkReal x1666=((IkReal(1.00000000000000))*(r02));
IkReal x1667=((r01)*(r10));
IkReal x1668=((cj4)*(cj5));
IkReal x1669=((sj4)*(x1664));
IkReal x1670=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1671=((sj4)*(x1663));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x1665)*(x1666)))+(((x1667)*(x1671)))+(((IkReal(-1.00000000000000))*(x1669)*(x1670)))+(((r01)*(r12)*(x1668)))+(((x1667)*(x1669)))+(((IkReal(-1.00000000000000))*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(r11)*(x1666)*(x1668)))+(((r00)*(r12)*(x1665))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1672=IKcos(j0);
IkReal x1673=IKsin(j0);
IkReal x1674=((IkReal(1.00000000000000))*(cj5));
IkReal x1675=((IkReal(0.0946500000000000))*(sj5));
IkReal x1676=((IkReal(1.00000000000000))*(cj2));
IkReal x1677=((cj3)*(sj1));
IkReal x1678=((cj1)*(sj3));
IkReal x1679=((IkReal(0.0946500000000000))*(cj5));
IkReal x1680=((r02)*(sj4));
IkReal x1681=((cj1)*(cj3));
IkReal x1682=((sj1)*(sj2));
IkReal x1683=((sj4)*(sj5));
IkReal x1684=((IkReal(1.00000000000000))*(sj5));
IkReal x1685=((cj4)*(r02));
IkReal x1686=((cj4)*(r12));
IkReal x1687=((cj4)*(sj5));
IkReal x1688=((r12)*(sj4));
IkReal x1689=((r01)*(x1673));
IkReal x1690=((r00)*(x1672));
IkReal x1691=((r00)*(x1673));
IkReal x1692=((r11)*(x1672));
IkReal x1693=((r01)*(x1672));
IkReal x1694=((r11)*(x1673));
IkReal x1695=((r10)*(x1673));
IkReal x1696=((IkReal(1.00000000000000))*(x1673));
IkReal x1697=((r10)*(x1672));
IkReal x1698=((IkReal(1.00000000000000))*(x1672));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1674)*(x1689)))+(((IkReal(-1.00000000000000))*(x1684)*(x1691)))+(((cj5)*(x1692)))+(((sj5)*(x1697))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1675)*(x1697)))+(((IkReal(-1.00000000000000))*(py)*(x1698)))+(((IkReal(-1.00000000000000))*(x1679)*(x1692)))+(((px)*(x1673)))+(((x1675)*(x1691)))+(((x1679)*(x1689))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj4)*(x1674)*(x1697)))+(((x1672)*(x1688)))+(((IkReal(-1.00000000000000))*(x1680)*(x1696)))+(((IkReal(-1.00000000000000))*(cj4)*(x1684)*(x1689)))+(((x1687)*(x1692)))+(((cj4)*(cj5)*(x1691))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1686)*(x1696)))+(((x1683)*(x1693)))+(((x1683)*(x1694)))+(((IkReal(-1.00000000000000))*(sj4)*(x1674)*(x1695)))+(((IkReal(-1.00000000000000))*(sj4)*(x1674)*(x1690)))+(((IkReal(-1.00000000000000))*(x1685)*(x1698))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1686)*(x1698)))+(((x1673)*(x1685)))+(((x1683)*(x1692)))+(((IkReal(-1.00000000000000))*(x1683)*(x1689)))+(((IkReal(-1.00000000000000))*(sj4)*(x1674)*(x1697)))+(((cj5)*(sj4)*(x1691))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1675)*(x1695)))+(((IkReal(-1.00000000000000))*(x1675)*(x1690)))+(((IkReal(-1.00000000000000))*(py)*(x1696)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(x1679)*(x1693)))+(((IkReal(-1.00000000000000))*(x1679)*(x1694)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)*(x1698)))+(((IkReal(-0.392250000000000))*(x1682))));
evalcond[6]=((((cj5)*(x1694)))+(((cj5)*(x1693)))+(((IkReal(-1.00000000000000))*(sj2)*(x1681)))+(((IkReal(-1.00000000000000))*(x1676)*(x1678)))+(((IkReal(-1.00000000000000))*(x1676)*(x1677)))+(((sj5)*(x1690)))+(((sj5)*(x1695)))+(((sj3)*(x1682))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj4)*(x1674)*(x1690)))+(((IkReal(-1.00000000000000))*(cj4)*(x1674)*(x1695)))+(((x1672)*(x1680)))+(((x1673)*(x1688)))+(((IkReal(-1.00000000000000))*(x1676)*(x1681)))+(((sj2)*(x1678)))+(((sj2)*(x1677)))+(((x1687)*(x1694)))+(((x1687)*(x1693)))+(((cj2)*(sj1)*(sj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1699=((IkReal(2183.00000000000))*(sj5));
IkReal x1700=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r10)*(x1699)))+(((r11)*(x1700))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r00)*(x1699)))+(((r01)*(x1700))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r10)*(x1699)))+(((r11)*(x1700)))))), ((gconst5)*(((((r00)*(x1699)))+(((r01)*(x1700)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1701=IKcos(j0);
IkReal x1702=IKsin(j0);
IkReal x1703=((IkReal(1.00000000000000))*(cj5));
IkReal x1704=((IkReal(0.0946500000000000))*(sj5));
IkReal x1705=((IkReal(1.00000000000000))*(cj2));
IkReal x1706=((cj3)*(sj1));
IkReal x1707=((cj1)*(sj3));
IkReal x1708=((IkReal(0.0946500000000000))*(cj5));
IkReal x1709=((r02)*(sj4));
IkReal x1710=((cj1)*(cj3));
IkReal x1711=((sj1)*(sj2));
IkReal x1712=((sj4)*(sj5));
IkReal x1713=((IkReal(1.00000000000000))*(sj5));
IkReal x1714=((cj4)*(r02));
IkReal x1715=((cj4)*(r12));
IkReal x1716=((cj4)*(sj5));
IkReal x1717=((r12)*(sj4));
IkReal x1718=((r01)*(x1702));
IkReal x1719=((r00)*(x1701));
IkReal x1720=((r00)*(x1702));
IkReal x1721=((r11)*(x1701));
IkReal x1722=((r01)*(x1701));
IkReal x1723=((r11)*(x1702));
IkReal x1724=((r10)*(x1702));
IkReal x1725=((IkReal(1.00000000000000))*(x1702));
IkReal x1726=((r10)*(x1701));
IkReal x1727=((IkReal(1.00000000000000))*(x1701));
evalcond[0]=((((sj5)*(x1726)))+(((IkReal(-1.00000000000000))*(x1703)*(x1718)))+(((cj5)*(x1721)))+(((IkReal(-1.00000000000000))*(x1713)*(x1720))));
evalcond[1]=((IkReal(0.109150000000000))+(((x1704)*(x1720)))+(((IkReal(-1.00000000000000))*(x1704)*(x1726)))+(((IkReal(-1.00000000000000))*(py)*(x1727)))+(((px)*(x1702)))+(((x1708)*(x1718)))+(((IkReal(-1.00000000000000))*(x1708)*(x1721))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj4)*(x1713)*(x1718)))+(((cj4)*(cj5)*(x1720)))+(((IkReal(-1.00000000000000))*(cj4)*(x1703)*(x1726)))+(((x1701)*(x1717)))+(((x1716)*(x1721)))+(((IkReal(-1.00000000000000))*(x1709)*(x1725))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1715)*(x1725)))+(((IkReal(-1.00000000000000))*(x1714)*(x1727)))+(((IkReal(-1.00000000000000))*(sj4)*(x1703)*(x1719)))+(((x1712)*(x1722)))+(((x1712)*(x1723)))+(((IkReal(-1.00000000000000))*(sj4)*(x1703)*(x1724))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1715)*(x1727)))+(((x1702)*(x1714)))+(((cj5)*(sj4)*(x1720)))+(((x1712)*(x1721)))+(((IkReal(-1.00000000000000))*(x1712)*(x1718)))+(((IkReal(-1.00000000000000))*(sj4)*(x1703)*(x1726))));
evalcond[5]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(x1704)*(x1724)))+(((IkReal(-1.00000000000000))*(py)*(x1725)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-0.392250000000000))*(x1711)))+(((IkReal(-1.00000000000000))*(x1704)*(x1719)))+(((IkReal(-1.00000000000000))*(px)*(x1727)))+(((IkReal(-1.00000000000000))*(x1708)*(x1722)))+(((IkReal(-1.00000000000000))*(x1708)*(x1723))));
evalcond[6]=((((sj5)*(x1724)))+(((IkReal(-1.00000000000000))*(x1705)*(x1707)))+(((IkReal(-1.00000000000000))*(x1705)*(x1706)))+(((sj3)*(x1711)))+(((sj5)*(x1719)))+(((IkReal(-1.00000000000000))*(sj2)*(x1710)))+(((cj5)*(x1723)))+(((cj5)*(x1722))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj4)*(x1703)*(x1719)))+(((x1702)*(x1717)))+(((x1701)*(x1709)))+(((IkReal(-1.00000000000000))*(x1705)*(x1710)))+(((sj2)*(x1707)))+(((sj2)*(x1706)))+(((IkReal(-1.00000000000000))*(cj4)*(x1703)*(x1724)))+(((x1716)*(x1722)))+(((x1716)*(x1723)))+(((cj2)*(sj1)*(sj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1728=((IkReal(2183.00000000000))*(sj5));
IkReal x1729=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r10)*(x1728)))+(((r11)*(x1729))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r01)*(x1729)))+(((r00)*(x1728))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r10)*(x1728)))+(((r11)*(x1729)))))), ((gconst0)*(((((r01)*(x1729)))+(((r00)*(x1728)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1730=IKcos(j0);
IkReal x1731=IKsin(j0);
IkReal x1732=((r00)*(sj5));
IkReal x1733=((IkReal(1.00000000000000))*(cj2));
IkReal x1734=((cj5)*(r11));
IkReal x1735=((sj1)*(sj2));
IkReal x1736=((r10)*(sj5));
IkReal x1737=((IkReal(0.0946500000000000))*(x1731));
IkReal x1738=((IkReal(0.0946500000000000))*(x1730));
IkReal x1739=((IkReal(1.00000000000000))*(x1731));
IkReal x1740=((IkReal(1.00000000000000))*(x1730));
IkReal x1741=((cj5)*(r01)*(x1731));
IkReal x1742=((cj5)*(x1738));
evalcond[0]=((((x1730)*(x1734)))+(((x1730)*(x1736)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1739)))+(((IkReal(-1.00000000000000))*(x1732)*(x1739))));
evalcond[1]=((IkReal(0.109150000000000))+(((cj5)*(r01)*(x1737)))+(((px)*(x1731)))+(((IkReal(-1.00000000000000))*(x1736)*(x1738)))+(((IkReal(-1.00000000000000))*(py)*(x1740)))+(((x1732)*(x1737)))+(((IkReal(-1.00000000000000))*(x1734)*(x1738))));
evalcond[2]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x1739)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1736)*(x1737)))+(((IkReal(-1.00000000000000))*(x1734)*(x1737)))+(((IkReal(-1.00000000000000))*(r01)*(x1742)))+(((IkReal(-1.00000000000000))*(x1732)*(x1738)))+(((IkReal(-1.00000000000000))*(px)*(x1740)))+(((IkReal(-0.392250000000000))*(x1735))));
evalcond[3]=((((x1730)*(x1732)))+(((cj5)*(r01)*(x1730)))+(((x1731)*(x1734)))+(((x1731)*(x1736)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1733)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1733)))+(((sj3)*(x1735))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1743=((IkReal(1.00000000000000))*(sj0));
IkReal x1744=((cj5)*(r22));
IkReal x1745=((r21)*(sj5));
IkReal x1746=((IkReal(1.00000000000000))*(cj0));
IkReal x1747=((r22)*(sj5));
IkReal x1748=((cj5)*(r20));
gconst3=IKsign(((((cj0)*(r10)*(x1744)))+(((r02)*(sj0)*(x1748)))+(((IkReal(-1.00000000000000))*(r02)*(x1743)*(x1745)))+(((r01)*(sj0)*(x1747)))+(((cj0)*(r12)*(x1745)))+(((IkReal(-1.00000000000000))*(r12)*(x1746)*(x1748)))+(((IkReal(-1.00000000000000))*(r00)*(x1743)*(x1744)))+(((IkReal(-1.00000000000000))*(r11)*(x1746)*(x1747)))));
IkReal x1749=((IkReal(1.00000000000000))*(sj0));
IkReal x1750=((cj5)*(r22));
IkReal x1751=((r21)*(sj5));
IkReal x1752=((IkReal(1.00000000000000))*(cj0));
IkReal x1753=((r22)*(sj5));
IkReal x1754=((cj5)*(r20));
dummyeval[0]=((((r02)*(sj0)*(x1754)))+(((IkReal(-1.00000000000000))*(r02)*(x1749)*(x1751)))+(((cj0)*(r12)*(x1751)))+(((IkReal(-1.00000000000000))*(r00)*(x1749)*(x1750)))+(((IkReal(-1.00000000000000))*(r12)*(x1752)*(x1754)))+(((r01)*(sj0)*(x1753)))+(((IkReal(-1.00000000000000))*(r11)*(x1752)*(x1753)))+(((cj0)*(r10)*(x1750))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1755=((cj3)*(sj2));
IkReal x1756=((cj2)*(cj3));
IkReal x1757=((cj2)*(sj3));
IkReal x1758=((sj2)*(sj3));
IkReal x1759=((r21)*(sj5));
IkReal x1760=((IkReal(1.00000000000000))*(cj1));
IkReal x1761=((IkReal(1.00000000000000))*(sj1));
IkReal x1762=((r22)*(x1760));
IkReal x1763=((cj5)*(r20)*(sj1));
IkReal x1764=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1755)*(x1762)))+(((IkReal(-1.00000000000000))*(x1757)*(x1762)))+(((IkReal(-1.00000000000000))*(r22)*(x1756)*(x1761)))+(((r22)*(sj1)*(x1758))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x1756)*(x1763)))+(((x1755)*(x1764)))+(((x1757)*(x1764)))+(((IkReal(-1.00000000000000))*(x1755)*(x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(x1757)*(x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(x1756)*(x1759)*(x1761)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1758)*(x1761)))+(((sj1)*(x1758)*(x1759))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1755)*(x1762)))+(((IkReal(-1.00000000000000))*(x1757)*(x1762)))+(((IkReal(-1.00000000000000))*(r22)*(x1756)*(x1761)))+(((r22)*(sj1)*(x1758)))))), ((gconst4)*(((((x1756)*(x1763)))+(((x1755)*(x1764)))+(((x1757)*(x1764)))+(((IkReal(-1.00000000000000))*(x1755)*(x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(x1757)*(x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(x1756)*(x1759)*(x1761)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1758)*(x1761)))+(((sj1)*(x1758)*(x1759)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1765=IKsin(j4);
IkReal x1766=IKcos(j4);
IkReal x1767=((IkReal(1.00000000000000))*(cj2));
IkReal x1768=((cj3)*(sj1));
IkReal x1769=((cj1)*(sj3));
IkReal x1770=((IkReal(1.00000000000000))*(cj5));
IkReal x1771=((IkReal(1.00000000000000))*(r01));
IkReal x1772=((cj1)*(cj3));
IkReal x1773=((r11)*(sj5));
IkReal x1774=((sj1)*(sj3));
IkReal x1775=((r01)*(sj5));
IkReal x1776=((r21)*(sj5));
IkReal x1777=((cj0)*(x1765));
IkReal x1778=((cj5)*(x1765));
IkReal x1779=((sj0)*(x1766));
IkReal x1780=((IkReal(1.00000000000000))*(x1765));
IkReal x1781=((cj0)*(x1766));
IkReal x1782=((sj0)*(sj5)*(x1765));
IkReal x1783=((IkReal(1.00000000000000))*(x1781));
evalcond[0]=((((r20)*(x1778)))+(((r22)*(x1766)))+(((IkReal(-1.00000000000000))*(x1776)*(x1780))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1780)))+(((r12)*(x1777)))+(((IkReal(-1.00000000000000))*(sj5)*(x1771)*(x1779)))+(((IkReal(-1.00000000000000))*(r10)*(x1770)*(x1781)))+(((cj5)*(r00)*(x1779)))+(((x1773)*(x1781))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1770)*(x1777)))+(((sj0)*(x1765)*(x1773)))+(((IkReal(-1.00000000000000))*(r12)*(x1779)))+(((x1775)*(x1777)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1765)*(x1770)))+(((IkReal(-1.00000000000000))*(r02)*(x1783))));
evalcond[3]=((IkReal(1.00000000000000))+(((r02)*(x1779)))+(((IkReal(-1.00000000000000))*(r12)*(x1783)))+(((x1773)*(x1777)))+(((r00)*(sj0)*(x1778)))+(((IkReal(-1.00000000000000))*(r10)*(x1770)*(x1777)))+(((IkReal(-1.00000000000000))*(x1771)*(x1782))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1766)*(x1776)))+(((IkReal(-1.00000000000000))*(r22)*(x1780)))+(((cj5)*(r20)*(x1766)))+(((IkReal(-1.00000000000000))*(sj2)*(x1772)))+(((sj2)*(x1774)))+(((IkReal(-1.00000000000000))*(x1767)*(x1768)))+(((IkReal(-1.00000000000000))*(x1767)*(x1769))));
evalcond[5]=((((x1775)*(x1781)))+(((r02)*(x1777)))+(((sj2)*(x1769)))+(((sj2)*(x1768)))+(((IkReal(-1.00000000000000))*(x1767)*(x1772)))+(((r12)*(sj0)*(x1765)))+(((x1773)*(x1779)))+(((IkReal(-1.00000000000000))*(r10)*(x1770)*(x1779)))+(((IkReal(-1.00000000000000))*(r00)*(x1770)*(x1781)))+(((cj2)*(x1774))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1784=IKsin(j4);
IkReal x1785=IKcos(j4);
IkReal x1786=((IkReal(1.00000000000000))*(cj2));
IkReal x1787=((cj3)*(sj1));
IkReal x1788=((cj1)*(sj3));
IkReal x1789=((IkReal(1.00000000000000))*(cj5));
IkReal x1790=((IkReal(1.00000000000000))*(r01));
IkReal x1791=((cj1)*(cj3));
IkReal x1792=((r11)*(sj5));
IkReal x1793=((sj1)*(sj3));
IkReal x1794=((r01)*(sj5));
IkReal x1795=((r21)*(sj5));
IkReal x1796=((cj0)*(x1784));
IkReal x1797=((cj5)*(x1784));
IkReal x1798=((sj0)*(x1785));
IkReal x1799=((IkReal(1.00000000000000))*(x1784));
IkReal x1800=((cj0)*(x1785));
IkReal x1801=((sj0)*(sj5)*(x1784));
IkReal x1802=((IkReal(1.00000000000000))*(x1800));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1795)*(x1799)))+(((r22)*(x1785)))+(((r20)*(x1797))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1799)))+(((IkReal(-1.00000000000000))*(r10)*(x1789)*(x1800)))+(((cj5)*(r00)*(x1798)))+(((x1792)*(x1800)))+(((IkReal(-1.00000000000000))*(sj5)*(x1790)*(x1798)))+(((r12)*(x1796))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1789)*(x1796)))+(((IkReal(-1.00000000000000))*(r12)*(x1798)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1784)*(x1789)))+(((sj0)*(x1784)*(x1792)))+(((IkReal(-1.00000000000000))*(r02)*(x1802)))+(((x1794)*(x1796))));
evalcond[3]=((IkReal(1.00000000000000))+(((r02)*(x1798)))+(((x1792)*(x1796)))+(((IkReal(-1.00000000000000))*(r10)*(x1789)*(x1796)))+(((r00)*(sj0)*(x1797)))+(((IkReal(-1.00000000000000))*(r12)*(x1802)))+(((IkReal(-1.00000000000000))*(x1790)*(x1801))));
evalcond[4]=((((sj2)*(x1793)))+(((IkReal(-1.00000000000000))*(r22)*(x1799)))+(((IkReal(-1.00000000000000))*(sj2)*(x1791)))+(((cj5)*(r20)*(x1785)))+(((IkReal(-1.00000000000000))*(x1785)*(x1795)))+(((IkReal(-1.00000000000000))*(x1786)*(x1787)))+(((IkReal(-1.00000000000000))*(x1786)*(x1788))));
evalcond[5]=((((sj2)*(x1788)))+(((sj2)*(x1787)))+(((IkReal(-1.00000000000000))*(r00)*(x1789)*(x1800)))+(((cj2)*(x1793)))+(((x1794)*(x1800)))+(((r12)*(sj0)*(x1784)))+(((r02)*(x1796)))+(((x1792)*(x1798)))+(((IkReal(-1.00000000000000))*(x1786)*(x1791)))+(((IkReal(-1.00000000000000))*(r10)*(x1789)*(x1798))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(((IkReal(0.0946500000000000))*(r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0946500000000000))*(r20))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x1803=((IkReal(1.00000000000000))*(IKatan2(((IkReal(0.0946500000000000))*(r21)), ((IkReal(0.0946500000000000))*(r20)))));
if( (((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x1804=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.00895862250000000))*((r21)*(r21))))+(((IkReal(0.00895862250000000))*((r20)*(r20))))))))):(IkReal)1.0e30))*(((pz)+(((IkReal(0.392250000000000))*(cj1)*(sj2)))+(((IkReal(0.425000000000000))*(sj1)))+(((IkReal(0.392250000000000))*(cj2)*(sj1)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x1803)))+(((IkReal(-1.00000000000000))*(x1804))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x1803)))+(x1804));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[1];
IkReal x1805=((IkReal(1.00000000000000))*(sj3));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1805)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(sj2)*(x1805)))+(((cj1)*(cj2)*(cj3)))+(((IkReal(-1.00000000000000))*(r21)*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r20)*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x1806=((IkReal(20000.0000000000))*(cj5));
IkReal x1807=((IkReal(20000.0000000000))*(sj5));
gconst0=IKsign(((((py)*(r00)*(x1807)))+(((py)*(r01)*(x1806)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1807)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1806)))));
IkReal x1808=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1808)))+(((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1808)))+(((py)*(r00)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x1809=(cj5)*(cj5);
IkReal x1810=(sj5)*(sj5);
IkReal x1811=((IkReal(1.00000000000000))*(x1810));
IkReal x1812=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1813=((IkReal(1.00000000000000))*(x1809));
gconst1=IKsign(((((IkReal(-1.00000000000000))*(x1811)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1812)))+(((IkReal(-1.00000000000000))*(x1813)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1813)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1811)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1812)))));
IkReal x1814=(cj5)*(cj5);
IkReal x1815=(sj5)*(sj5);
IkReal x1816=((IkReal(1.00000000000000))*(x1815));
IkReal x1817=((IkReal(2.00000000000000))*(cj5)*(sj5));
IkReal x1818=((IkReal(1.00000000000000))*(x1814));
dummyeval[0]=((((IkReal(-1.00000000000000))*(x1818)*((r11)*(r11))))+(((IkReal(-1.00000000000000))*(x1816)*((r10)*(r10))))+(((IkReal(-1.00000000000000))*(r10)*(r11)*(x1817)))+(((IkReal(-1.00000000000000))*(x1818)*((r01)*(r01))))+(((IkReal(-1.00000000000000))*(x1816)*((r00)*(r00))))+(((IkReal(-1.00000000000000))*(r00)*(r01)*(x1817))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1819=((sj2)*(sj3));
IkReal x1820=((cj5)*(r01));
IkReal x1821=((cj5)*(r11));
IkReal x1822=((r00)*(sj5));
IkReal x1823=((r10)*(sj5));
IkReal x1824=((sj1)*(x1822));
IkReal x1825=((IkReal(1.00000000000000))*(cj2)*(cj3));
IkReal x1826=((sj1)*(x1823));
IkReal x1827=((IkReal(1.00000000000000))*(cj1)*(cj2)*(sj3));
IkReal x1828=((IkReal(1.00000000000000))*(cj1)*(cj3)*(sj2));
if( IKabs(((gconst1)*(((((IkReal(-1.00000000000000))*(x1821)*(x1828)))+(((IkReal(-1.00000000000000))*(x1821)*(x1827)))+(((IkReal(-1.00000000000000))*(sj1)*(x1821)*(x1825)))+(((x1819)*(x1826)))+(((sj1)*(x1819)*(x1821)))+(((IkReal(-1.00000000000000))*(x1825)*(x1826)))+(((IkReal(-1.00000000000000))*(x1823)*(x1827)))+(((IkReal(-1.00000000000000))*(x1823)*(x1828))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((x1819)*(x1824)))+(((sj1)*(x1819)*(x1820)))+(((IkReal(-1.00000000000000))*(sj1)*(x1820)*(x1825)))+(((IkReal(-1.00000000000000))*(x1822)*(x1828)))+(((IkReal(-1.00000000000000))*(x1822)*(x1827)))+(((IkReal(-1.00000000000000))*(x1824)*(x1825)))+(((IkReal(-1.00000000000000))*(x1820)*(x1827)))+(((IkReal(-1.00000000000000))*(x1820)*(x1828))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((IkReal(-1.00000000000000))*(x1821)*(x1828)))+(((IkReal(-1.00000000000000))*(x1821)*(x1827)))+(((IkReal(-1.00000000000000))*(sj1)*(x1821)*(x1825)))+(((x1819)*(x1826)))+(((sj1)*(x1819)*(x1821)))+(((IkReal(-1.00000000000000))*(x1825)*(x1826)))+(((IkReal(-1.00000000000000))*(x1823)*(x1827)))+(((IkReal(-1.00000000000000))*(x1823)*(x1828)))))), ((gconst1)*(((((x1819)*(x1824)))+(((sj1)*(x1819)*(x1820)))+(((IkReal(-1.00000000000000))*(sj1)*(x1820)*(x1825)))+(((IkReal(-1.00000000000000))*(x1822)*(x1828)))+(((IkReal(-1.00000000000000))*(x1822)*(x1827)))+(((IkReal(-1.00000000000000))*(x1824)*(x1825)))+(((IkReal(-1.00000000000000))*(x1820)*(x1827)))+(((IkReal(-1.00000000000000))*(x1820)*(x1828)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1829=IKcos(j0);
IkReal x1830=IKsin(j0);
IkReal x1831=((r00)*(sj5));
IkReal x1832=((IkReal(1.00000000000000))*(cj2));
IkReal x1833=((cj5)*(r11));
IkReal x1834=((sj1)*(sj2));
IkReal x1835=((r10)*(sj5));
IkReal x1836=((IkReal(0.0946500000000000))*(x1830));
IkReal x1837=((IkReal(0.0946500000000000))*(x1829));
IkReal x1838=((IkReal(1.00000000000000))*(x1830));
IkReal x1839=((IkReal(1.00000000000000))*(x1829));
IkReal x1840=((cj5)*(r01)*(x1830));
IkReal x1841=((cj5)*(x1837));
evalcond[0]=((((x1829)*(x1833)))+(((x1829)*(x1835)))+(((IkReal(-1.00000000000000))*(cj5)*(r01)*(x1838)))+(((IkReal(-1.00000000000000))*(x1831)*(x1838))));
evalcond[1]=((IkReal(0.109150000000000))+(((px)*(x1830)))+(((IkReal(-1.00000000000000))*(x1833)*(x1837)))+(((IkReal(-1.00000000000000))*(py)*(x1839)))+(((IkReal(-1.00000000000000))*(x1835)*(x1837)))+(((x1831)*(x1836)))+(((cj5)*(r01)*(x1836))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1833)*(x1836)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x1838)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(r01)*(x1841)))+(((IkReal(-1.00000000000000))*(x1835)*(x1836)))+(((IkReal(-1.00000000000000))*(x1831)*(x1837)))+(((IkReal(-1.00000000000000))*(px)*(x1839)))+(((IkReal(-0.392250000000000))*(x1834))));
evalcond[3]=((((x1829)*(x1831)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((sj3)*(x1834)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1832)))+(((cj5)*(r01)*(x1829)))+(((x1830)*(x1835)))+(((x1830)*(x1833)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1832))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x1842=((IkReal(1.00000000000000))*(sj0));
IkReal x1843=((cj5)*(r22));
IkReal x1844=((r21)*(sj5));
IkReal x1845=((IkReal(1.00000000000000))*(cj0));
IkReal x1846=((r22)*(sj5));
IkReal x1847=((cj5)*(r20));
gconst3=IKsign(((((IkReal(-1.00000000000000))*(r12)*(x1845)*(x1847)))+(((IkReal(-1.00000000000000))*(r11)*(x1845)*(x1846)))+(((cj0)*(r12)*(x1844)))+(((IkReal(-1.00000000000000))*(r02)*(x1842)*(x1844)))+(((IkReal(-1.00000000000000))*(r00)*(x1842)*(x1843)))+(((cj0)*(r10)*(x1843)))+(((r01)*(sj0)*(x1846)))+(((r02)*(sj0)*(x1847)))));
IkReal x1848=((IkReal(1.00000000000000))*(sj0));
IkReal x1849=((cj5)*(r22));
IkReal x1850=((r21)*(sj5));
IkReal x1851=((IkReal(1.00000000000000))*(cj0));
IkReal x1852=((r22)*(sj5));
IkReal x1853=((cj5)*(r20));
dummyeval[0]=((((cj0)*(r12)*(x1850)))+(((IkReal(-1.00000000000000))*(r11)*(x1851)*(x1852)))+(((r01)*(sj0)*(x1852)))+(((IkReal(-1.00000000000000))*(r12)*(x1851)*(x1853)))+(((cj0)*(r10)*(x1849)))+(((r02)*(sj0)*(x1853)))+(((IkReal(-1.00000000000000))*(r02)*(x1848)*(x1850)))+(((IkReal(-1.00000000000000))*(r00)*(x1848)*(x1849))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1854=((cj3)*(sj2));
IkReal x1855=((cj2)*(cj3));
IkReal x1856=((cj2)*(sj3));
IkReal x1857=((sj2)*(sj3));
IkReal x1858=((r21)*(sj5));
IkReal x1859=((IkReal(1.00000000000000))*(cj1));
IkReal x1860=((IkReal(1.00000000000000))*(sj1));
IkReal x1861=((r22)*(x1859));
IkReal x1862=((cj5)*(r20)*(sj1));
IkReal x1863=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1856)*(x1861)))+(((IkReal(-1.00000000000000))*(x1854)*(x1861)))+(((r22)*(sj1)*(x1857)))+(((IkReal(-1.00000000000000))*(r22)*(x1855)*(x1860))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x1856)*(x1858)*(x1859)))+(((x1856)*(x1863)))+(((x1854)*(x1863)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1857)*(x1860)))+(((IkReal(-1.00000000000000))*(x1854)*(x1858)*(x1859)))+(((x1855)*(x1862)))+(((sj1)*(x1857)*(x1858)))+(((IkReal(-1.00000000000000))*(x1855)*(x1858)*(x1860))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x1856)*(x1861)))+(((IkReal(-1.00000000000000))*(x1854)*(x1861)))+(((r22)*(sj1)*(x1857)))+(((IkReal(-1.00000000000000))*(r22)*(x1855)*(x1860)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(x1856)*(x1858)*(x1859)))+(((x1856)*(x1863)))+(((x1854)*(x1863)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x1857)*(x1860)))+(((IkReal(-1.00000000000000))*(x1854)*(x1858)*(x1859)))+(((x1855)*(x1862)))+(((sj1)*(x1857)*(x1858)))+(((IkReal(-1.00000000000000))*(x1855)*(x1858)*(x1860)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1864=IKsin(j4);
IkReal x1865=IKcos(j4);
IkReal x1866=((IkReal(1.00000000000000))*(cj2));
IkReal x1867=((cj3)*(sj1));
IkReal x1868=((cj1)*(sj3));
IkReal x1869=((IkReal(1.00000000000000))*(cj5));
IkReal x1870=((IkReal(1.00000000000000))*(r01));
IkReal x1871=((cj1)*(cj3));
IkReal x1872=((r11)*(sj5));
IkReal x1873=((sj1)*(sj3));
IkReal x1874=((r01)*(sj5));
IkReal x1875=((r21)*(sj5));
IkReal x1876=((cj0)*(x1864));
IkReal x1877=((cj5)*(x1864));
IkReal x1878=((sj0)*(x1865));
IkReal x1879=((IkReal(1.00000000000000))*(x1864));
IkReal x1880=((cj0)*(x1865));
IkReal x1881=((sj0)*(sj5)*(x1864));
IkReal x1882=((IkReal(1.00000000000000))*(x1880));
evalcond[0]=((((r22)*(x1865)))+(((r20)*(x1877)))+(((IkReal(-1.00000000000000))*(x1875)*(x1879))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x1870)*(x1878)))+(((x1872)*(x1880)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1879)))+(((IkReal(-1.00000000000000))*(r10)*(x1869)*(x1880)))+(((r12)*(x1876)))+(((cj5)*(r00)*(x1878))));
evalcond[2]=((((sj0)*(x1864)*(x1872)))+(((x1874)*(x1876)))+(((IkReal(-1.00000000000000))*(r02)*(x1882)))+(((IkReal(-1.00000000000000))*(r12)*(x1878)))+(((IkReal(-1.00000000000000))*(r00)*(x1869)*(x1876)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1864)*(x1869))));
evalcond[3]=((IkReal(1.00000000000000))+(((r00)*(sj0)*(x1877)))+(((r02)*(x1878)))+(((IkReal(-1.00000000000000))*(x1870)*(x1881)))+(((IkReal(-1.00000000000000))*(r12)*(x1882)))+(((IkReal(-1.00000000000000))*(r10)*(x1869)*(x1876)))+(((x1872)*(x1876))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x1879)))+(((IkReal(-1.00000000000000))*(x1866)*(x1868)))+(((IkReal(-1.00000000000000))*(x1866)*(x1867)))+(((sj2)*(x1873)))+(((IkReal(-1.00000000000000))*(x1865)*(x1875)))+(((cj5)*(r20)*(x1865)))+(((IkReal(-1.00000000000000))*(sj2)*(x1871))));
evalcond[5]=((((x1874)*(x1880)))+(((r02)*(x1876)))+(((r12)*(sj0)*(x1864)))+(((cj2)*(x1873)))+(((IkReal(-1.00000000000000))*(x1866)*(x1871)))+(((IkReal(-1.00000000000000))*(r10)*(x1869)*(x1878)))+(((sj2)*(x1867)))+(((sj2)*(x1868)))+(((x1872)*(x1878)))+(((IkReal(-1.00000000000000))*(r00)*(x1869)*(x1880))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x1883=IKsin(j4);
IkReal x1884=IKcos(j4);
IkReal x1885=((IkReal(1.00000000000000))*(cj2));
IkReal x1886=((cj3)*(sj1));
IkReal x1887=((cj1)*(sj3));
IkReal x1888=((IkReal(1.00000000000000))*(cj5));
IkReal x1889=((IkReal(1.00000000000000))*(r01));
IkReal x1890=((cj1)*(cj3));
IkReal x1891=((r11)*(sj5));
IkReal x1892=((sj1)*(sj3));
IkReal x1893=((r01)*(sj5));
IkReal x1894=((r21)*(sj5));
IkReal x1895=((cj0)*(x1883));
IkReal x1896=((cj5)*(x1883));
IkReal x1897=((sj0)*(x1884));
IkReal x1898=((IkReal(1.00000000000000))*(x1883));
IkReal x1899=((cj0)*(x1884));
IkReal x1900=((sj0)*(sj5)*(x1883));
IkReal x1901=((IkReal(1.00000000000000))*(x1899));
evalcond[0]=((((r20)*(x1896)))+(((IkReal(-1.00000000000000))*(x1894)*(x1898)))+(((r22)*(x1884))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(sj0)*(x1898)))+(((cj5)*(r00)*(x1897)))+(((x1891)*(x1899)))+(((IkReal(-1.00000000000000))*(sj5)*(x1889)*(x1897)))+(((IkReal(-1.00000000000000))*(r10)*(x1888)*(x1899)))+(((r12)*(x1895))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1888)*(x1895)))+(((sj0)*(x1883)*(x1891)))+(((x1893)*(x1895)))+(((IkReal(-1.00000000000000))*(r12)*(x1897)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x1883)*(x1888)))+(((IkReal(-1.00000000000000))*(r02)*(x1901))));
evalcond[3]=((IkReal(1.00000000000000))+(((r02)*(x1897)))+(((IkReal(-1.00000000000000))*(x1889)*(x1900)))+(((x1891)*(x1895)))+(((IkReal(-1.00000000000000))*(r12)*(x1901)))+(((IkReal(-1.00000000000000))*(r10)*(x1888)*(x1895)))+(((r00)*(sj0)*(x1896))));
evalcond[4]=((((sj2)*(x1892)))+(((IkReal(-1.00000000000000))*(x1884)*(x1894)))+(((IkReal(-1.00000000000000))*(sj2)*(x1890)))+(((IkReal(-1.00000000000000))*(r22)*(x1898)))+(((cj5)*(r20)*(x1884)))+(((IkReal(-1.00000000000000))*(x1885)*(x1887)))+(((IkReal(-1.00000000000000))*(x1885)*(x1886))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1888)*(x1899)))+(((sj2)*(x1886)))+(((sj2)*(x1887)))+(((r02)*(x1895)))+(((x1893)*(x1899)))+(((x1891)*(x1897)))+(((cj2)*(x1892)))+(((IkReal(-1.00000000000000))*(x1885)*(x1890)))+(((r12)*(sj0)*(x1883)))+(((IkReal(-1.00000000000000))*(r10)*(x1888)*(x1897))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1902=((cj3)*(sj2));
IkReal x1903=((cj2)*(sj3));
IkReal x1904=((cj5)*(r20));
IkReal x1905=((r21)*(sj5));
IkReal x1906=((IkReal(1.00000000000000))*(cj1));
IkReal x1907=((r22)*(x1906));
IkReal x1908=((sj1)*(sj2)*(sj3));
IkReal x1909=((cj2)*(cj3)*(sj1));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1902)*(x1907)))+(((IkReal(-1.00000000000000))*(x1903)*(x1907)))+(((r22)*(x1908)))+(((IkReal(-1.00000000000000))*(r22)*(x1909))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1904)*(x1908)))+(((cj1)*(x1902)*(x1904)))+(((x1905)*(x1908)))+(((IkReal(-1.00000000000000))*(x1903)*(x1905)*(x1906)))+(((x1904)*(x1909)))+(((IkReal(-1.00000000000000))*(x1905)*(x1909)))+(((IkReal(-1.00000000000000))*(x1902)*(x1905)*(x1906)))+(((cj1)*(x1903)*(x1904))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x1902)*(x1907)))+(((IkReal(-1.00000000000000))*(x1903)*(x1907)))+(((r22)*(x1908)))+(((IkReal(-1.00000000000000))*(r22)*(x1909)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x1904)*(x1908)))+(((cj1)*(x1902)*(x1904)))+(((x1905)*(x1908)))+(((IkReal(-1.00000000000000))*(x1903)*(x1905)*(x1906)))+(((x1904)*(x1909)))+(((IkReal(-1.00000000000000))*(x1905)*(x1909)))+(((IkReal(-1.00000000000000))*(x1902)*(x1905)*(x1906)))+(((cj1)*(x1903)*(x1904)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x1910=IKsin(j4);
IkReal x1911=IKcos(j4);
IkReal x1912=((IkReal(1.00000000000000))*(cj1));
IkReal x1913=((cj5)*(r20));
IkReal x1914=((IkReal(1.00000000000000))*(r21)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1910)*(x1914)))+(((r22)*(x1911)))+(((x1910)*(x1913))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1911)*(x1914)))+(((x1911)*(x1913)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1912)))+(((IkReal(-1.00000000000000))*(cj2)*(cj3)*(sj1)))+(((IkReal(-1.00000000000000))*(cj3)*(sj2)*(x1912)))+(((sj1)*(sj2)*(sj3)))+(((IkReal(-1.00000000000000))*(r22)*(x1910))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
IkReal x1915=((IkReal(20000.0000000000))*(cj5));
IkReal x1916=((IkReal(20000.0000000000))*(sj5));
gconst5=IKsign(((((py)*(r00)*(x1916)))+(((py)*(r01)*(x1915)))+(((IkReal(-1.00000000000000))*(px)*(r11)*(x1915)))+(((IkReal(-1.00000000000000))*(px)*(r10)*(x1916)))));
IkReal x1917=((IkReal(1.00000000000000))*(px));
dummyeval[0]=((((cj5)*(py)*(r01)))+(((IkReal(-1.00000000000000))*(cj5)*(r11)*(x1917)))+(((py)*(r00)*(sj5)))+(((IkReal(-1.00000000000000))*(r10)*(sj5)*(x1917))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
IkReal x1918=(sj5)*(sj5);
IkReal x1919=(cj5)*(cj5);
IkReal x1920=((cj4)*(sj5));
IkReal x1921=((IkReal(1.00000000000000))*(r02));
IkReal x1922=((r01)*(r10));
IkReal x1923=((cj4)*(cj5));
IkReal x1924=((sj4)*(x1919));
IkReal x1925=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1926=((sj4)*(x1918));
gconst6=IKsign(((((IkReal(-1.00000000000000))*(r11)*(x1921)*(x1923)))+(((r01)*(r12)*(x1923)))+(((r00)*(r12)*(x1920)))+(((IkReal(-1.00000000000000))*(x1924)*(x1925)))+(((IkReal(-1.00000000000000))*(x1925)*(x1926)))+(((IkReal(-1.00000000000000))*(r10)*(x1920)*(x1921)))+(((x1922)*(x1924)))+(((x1922)*(x1926)))));
IkReal x1927=(sj5)*(sj5);
IkReal x1928=(cj5)*(cj5);
IkReal x1929=((cj4)*(sj5));
IkReal x1930=((IkReal(1.00000000000000))*(r02));
IkReal x1931=((r01)*(r10));
IkReal x1932=((cj4)*(cj5));
IkReal x1933=((sj4)*(x1928));
IkReal x1934=((IkReal(1.00000000000000))*(r00)*(r11));
IkReal x1935=((sj4)*(x1927));
dummyeval[0]=((((IkReal(-1.00000000000000))*(r10)*(x1929)*(x1930)))+(((IkReal(-1.00000000000000))*(x1933)*(x1934)))+(((x1931)*(x1933)))+(((x1931)*(x1935)))+(((IkReal(-1.00000000000000))*(x1934)*(x1935)))+(((r00)*(r12)*(x1929)))+(((IkReal(-1.00000000000000))*(r11)*(x1930)*(x1932)))+(((r01)*(r12)*(x1932))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((cj5)*(r11)))+(((r10)*(sj5)))))), ((gconst6)*(((((r00)*(sj5)))+(((cj5)*(r01)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1936=IKcos(j0);
IkReal x1937=IKsin(j0);
IkReal x1938=((IkReal(1.00000000000000))*(cj5));
IkReal x1939=((IkReal(0.0946500000000000))*(sj5));
IkReal x1940=((IkReal(1.00000000000000))*(cj2));
IkReal x1941=((cj3)*(sj1));
IkReal x1942=((cj1)*(sj3));
IkReal x1943=((IkReal(0.0946500000000000))*(cj5));
IkReal x1944=((r02)*(sj4));
IkReal x1945=((cj1)*(cj3));
IkReal x1946=((sj1)*(sj2));
IkReal x1947=((sj4)*(sj5));
IkReal x1948=((IkReal(1.00000000000000))*(sj5));
IkReal x1949=((cj4)*(r02));
IkReal x1950=((cj4)*(r12));
IkReal x1951=((cj4)*(sj5));
IkReal x1952=((r12)*(sj4));
IkReal x1953=((r01)*(x1937));
IkReal x1954=((r00)*(x1936));
IkReal x1955=((r00)*(x1937));
IkReal x1956=((r11)*(x1936));
IkReal x1957=((r01)*(x1936));
IkReal x1958=((r11)*(x1937));
IkReal x1959=((r10)*(x1937));
IkReal x1960=((IkReal(1.00000000000000))*(x1937));
IkReal x1961=((r10)*(x1936));
IkReal x1962=((IkReal(1.00000000000000))*(x1936));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1948)*(x1955)))+(((sj5)*(x1961)))+(((cj5)*(x1956)))+(((IkReal(-1.00000000000000))*(x1938)*(x1953))));
evalcond[1]=((IkReal(0.109150000000000))+(((x1943)*(x1953)))+(((x1939)*(x1955)))+(((px)*(x1937)))+(((IkReal(-1.00000000000000))*(x1943)*(x1956)))+(((IkReal(-1.00000000000000))*(x1939)*(x1961)))+(((IkReal(-1.00000000000000))*(py)*(x1962))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj4)*(x1938)*(x1961)))+(((IkReal(-1.00000000000000))*(cj4)*(x1948)*(x1953)))+(((IkReal(-1.00000000000000))*(x1944)*(x1960)))+(((x1951)*(x1956)))+(((x1936)*(x1952)))+(((cj4)*(cj5)*(x1955))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1949)*(x1962)))+(((IkReal(-1.00000000000000))*(x1950)*(x1960)))+(((IkReal(-1.00000000000000))*(sj4)*(x1938)*(x1954)))+(((IkReal(-1.00000000000000))*(sj4)*(x1938)*(x1959)))+(((x1947)*(x1957)))+(((x1947)*(x1958))));
evalcond[4]=((IkReal(1.00000000000000))+(((x1937)*(x1949)))+(((IkReal(-1.00000000000000))*(sj4)*(x1938)*(x1961)))+(((IkReal(-1.00000000000000))*(x1947)*(x1953)))+(((IkReal(-1.00000000000000))*(x1950)*(x1962)))+(((cj5)*(sj4)*(x1955)))+(((x1947)*(x1956))));
evalcond[5]=((((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-0.392250000000000))*(x1946)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1943)*(x1957)))+(((IkReal(-1.00000000000000))*(x1943)*(x1958)))+(((IkReal(-1.00000000000000))*(px)*(x1962)))+(((IkReal(-1.00000000000000))*(py)*(x1960)))+(((IkReal(-1.00000000000000))*(x1939)*(x1954)))+(((IkReal(-1.00000000000000))*(x1939)*(x1959))));
evalcond[6]=((((sj3)*(x1946)))+(((sj5)*(x1959)))+(((sj5)*(x1954)))+(((IkReal(-1.00000000000000))*(x1940)*(x1942)))+(((IkReal(-1.00000000000000))*(x1940)*(x1941)))+(((cj5)*(x1957)))+(((cj5)*(x1958)))+(((IkReal(-1.00000000000000))*(sj2)*(x1945))));
evalcond[7]=((((sj2)*(x1942)))+(((sj2)*(x1941)))+(((x1937)*(x1952)))+(((IkReal(-1.00000000000000))*(x1940)*(x1945)))+(((x1951)*(x1957)))+(((x1951)*(x1958)))+(((x1936)*(x1944)))+(((cj2)*(sj1)*(sj3)))+(((IkReal(-1.00000000000000))*(cj4)*(x1938)*(x1959)))+(((IkReal(-1.00000000000000))*(cj4)*(x1938)*(x1954))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1963=((IkReal(2183.00000000000))*(sj5));
IkReal x1964=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst5)*(((((r10)*(x1963)))+(((r11)*(x1964))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r00)*(x1963)))+(((r01)*(x1964))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst5)*(((((r10)*(x1963)))+(((r11)*(x1964)))))), ((gconst5)*(((((r00)*(x1963)))+(((r01)*(x1964)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[8];
IkReal x1965=IKcos(j0);
IkReal x1966=IKsin(j0);
IkReal x1967=((IkReal(1.00000000000000))*(cj5));
IkReal x1968=((IkReal(0.0946500000000000))*(sj5));
IkReal x1969=((IkReal(1.00000000000000))*(cj2));
IkReal x1970=((cj3)*(sj1));
IkReal x1971=((cj1)*(sj3));
IkReal x1972=((IkReal(0.0946500000000000))*(cj5));
IkReal x1973=((r02)*(sj4));
IkReal x1974=((cj1)*(cj3));
IkReal x1975=((sj1)*(sj2));
IkReal x1976=((sj4)*(sj5));
IkReal x1977=((IkReal(1.00000000000000))*(sj5));
IkReal x1978=((cj4)*(r02));
IkReal x1979=((cj4)*(r12));
IkReal x1980=((cj4)*(sj5));
IkReal x1981=((r12)*(sj4));
IkReal x1982=((r01)*(x1966));
IkReal x1983=((r00)*(x1965));
IkReal x1984=((r00)*(x1966));
IkReal x1985=((r11)*(x1965));
IkReal x1986=((r01)*(x1965));
IkReal x1987=((r11)*(x1966));
IkReal x1988=((r10)*(x1966));
IkReal x1989=((IkReal(1.00000000000000))*(x1966));
IkReal x1990=((r10)*(x1965));
IkReal x1991=((IkReal(1.00000000000000))*(x1965));
evalcond[0]=((((sj5)*(x1990)))+(((IkReal(-1.00000000000000))*(x1977)*(x1984)))+(((cj5)*(x1985)))+(((IkReal(-1.00000000000000))*(x1967)*(x1982))));
evalcond[1]=((IkReal(0.109150000000000))+(((x1968)*(x1984)))+(((x1972)*(x1982)))+(((px)*(x1966)))+(((IkReal(-1.00000000000000))*(x1972)*(x1985)))+(((IkReal(-1.00000000000000))*(py)*(x1991)))+(((IkReal(-1.00000000000000))*(x1968)*(x1990))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1973)*(x1989)))+(((x1980)*(x1985)))+(((cj4)*(cj5)*(x1984)))+(((x1965)*(x1981)))+(((IkReal(-1.00000000000000))*(cj4)*(x1977)*(x1982)))+(((IkReal(-1.00000000000000))*(cj4)*(x1967)*(x1990))));
evalcond[3]=((((x1976)*(x1986)))+(((x1976)*(x1987)))+(((IkReal(-1.00000000000000))*(x1979)*(x1989)))+(((IkReal(-1.00000000000000))*(sj4)*(x1967)*(x1988)))+(((IkReal(-1.00000000000000))*(sj4)*(x1967)*(x1983)))+(((IkReal(-1.00000000000000))*(x1978)*(x1991))));
evalcond[4]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1979)*(x1991)))+(((x1976)*(x1985)))+(((IkReal(-1.00000000000000))*(x1976)*(x1982)))+(((cj5)*(sj4)*(x1984)))+(((x1966)*(x1978)))+(((IkReal(-1.00000000000000))*(sj4)*(x1967)*(x1990))));
evalcond[5]=((((IkReal(-1.00000000000000))*(px)*(x1991)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1972)*(x1986)))+(((IkReal(-1.00000000000000))*(x1972)*(x1987)))+(((IkReal(-1.00000000000000))*(x1968)*(x1988)))+(((IkReal(-1.00000000000000))*(x1968)*(x1983)))+(((IkReal(-0.392250000000000))*(x1975)))+(((IkReal(-1.00000000000000))*(py)*(x1989))));
evalcond[6]=((((IkReal(-1.00000000000000))*(sj2)*(x1974)))+(((sj5)*(x1988)))+(((sj5)*(x1983)))+(((sj3)*(x1975)))+(((cj5)*(x1986)))+(((cj5)*(x1987)))+(((IkReal(-1.00000000000000))*(x1969)*(x1971)))+(((IkReal(-1.00000000000000))*(x1969)*(x1970))));
evalcond[7]=((((IkReal(-1.00000000000000))*(cj4)*(x1967)*(x1983)))+(((IkReal(-1.00000000000000))*(cj4)*(x1967)*(x1988)))+(((sj2)*(x1971)))+(((sj2)*(x1970)))+(((x1980)*(x1986)))+(((x1980)*(x1987)))+(((x1966)*(x1981)))+(((x1965)*(x1973)))+(((IkReal(-1.00000000000000))*(x1969)*(x1974)))+(((cj2)*(sj1)*(sj3))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x1992=((IkReal(2183.00000000000))*(sj5));
IkReal x1993=((IkReal(2183.00000000000))*(cj5));
if( IKabs(((gconst0)*(((((r11)*(x1993)))+(((r10)*(x1992))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r00)*(x1992)))+(((r01)*(x1993))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst0)*(((((r11)*(x1993)))+(((r10)*(x1992)))))), ((gconst0)*(((((r00)*(x1992)))+(((r01)*(x1993)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[4];
IkReal x1994=IKcos(j0);
IkReal x1995=IKsin(j0);
IkReal x1996=((r00)*(sj5));
IkReal x1997=((IkReal(1.00000000000000))*(cj2));
IkReal x1998=((cj5)*(r11));
IkReal x1999=((sj1)*(sj2));
IkReal x2000=((r10)*(sj5));
IkReal x2001=((IkReal(0.0946500000000000))*(x1995));
IkReal x2002=((IkReal(0.0946500000000000))*(x1994));
IkReal x2003=((IkReal(1.00000000000000))*(x1995));
IkReal x2004=((IkReal(1.00000000000000))*(x1994));
IkReal x2005=((cj5)*(r01)*(x1995));
IkReal x2006=((cj5)*(x2002));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(r01)*(x2003)))+(((x1994)*(x1998)))+(((x1994)*(x2000)))+(((IkReal(-1.00000000000000))*(x1996)*(x2003))));
evalcond[1]=((IkReal(0.109150000000000))+(((IkReal(-1.00000000000000))*(x1998)*(x2002)))+(((IkReal(-1.00000000000000))*(py)*(x2004)))+(((cj5)*(r01)*(x2001)))+(((IkReal(-1.00000000000000))*(x2000)*(x2002)))+(((x1996)*(x2001)))+(((px)*(x1995))));
evalcond[2]=((((IkReal(-1.00000000000000))*(px)*(x2004)))+(((IkReal(-1.00000000000000))*(x1998)*(x2001)))+(((IkReal(-1.00000000000000))*(py)*(x2003)))+(((IkReal(0.392250000000000))*(cj1)*(cj2)))+(((IkReal(-1.00000000000000))*(r01)*(x2006)))+(((IkReal(0.425000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x2000)*(x2001)))+(((IkReal(-1.00000000000000))*(x1996)*(x2002)))+(((IkReal(-0.392250000000000))*(x1999))));
evalcond[3]=((((cj5)*(r01)*(x1994)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(sj2)))+(((sj3)*(x1999)))+(((x1995)*(x1998)))+(((x1994)*(x1996)))+(((x1995)*(x2000)))+(((IkReal(-1.00000000000000))*(cj3)*(sj1)*(x1997)))+(((IkReal(-1.00000000000000))*(cj1)*(sj3)*(x1997))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst3;
IkReal x2007=((IkReal(1.00000000000000))*(sj0));
IkReal x2008=((cj5)*(r22));
IkReal x2009=((r21)*(sj5));
IkReal x2010=((IkReal(1.00000000000000))*(cj0));
IkReal x2011=((r22)*(sj5));
IkReal x2012=((cj5)*(r20));
gconst3=IKsign(((((r02)*(sj0)*(x2012)))+(((cj0)*(r10)*(x2008)))+(((IkReal(-1.00000000000000))*(r12)*(x2010)*(x2012)))+(((IkReal(-1.00000000000000))*(r02)*(x2007)*(x2009)))+(((r01)*(sj0)*(x2011)))+(((IkReal(-1.00000000000000))*(r00)*(x2007)*(x2008)))+(((IkReal(-1.00000000000000))*(r11)*(x2010)*(x2011)))+(((cj0)*(r12)*(x2009)))));
IkReal x2013=((IkReal(1.00000000000000))*(sj0));
IkReal x2014=((cj5)*(r22));
IkReal x2015=((r21)*(sj5));
IkReal x2016=((IkReal(1.00000000000000))*(cj0));
IkReal x2017=((r22)*(sj5));
IkReal x2018=((cj5)*(r20));
dummyeval[0]=((((cj0)*(r10)*(x2014)))+(((r02)*(sj0)*(x2018)))+(((cj0)*(r12)*(x2015)))+(((IkReal(-1.00000000000000))*(r11)*(x2016)*(x2017)))+(((IkReal(-1.00000000000000))*(r00)*(x2013)*(x2014)))+(((IkReal(-1.00000000000000))*(r02)*(x2013)*(x2015)))+(((r01)*(sj0)*(x2017)))+(((IkReal(-1.00000000000000))*(r12)*(x2016)*(x2018))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5))))));
dummyeval[0]=(((r22)*(r22))+((((cj5)*(cj5))*((r20)*(r20))))+(((IkReal(-2.00000000000000))*(cj5)*(r20)*(r21)*(sj5)))+((((r21)*(r21))*((sj5)*(sj5)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x2019=((cj3)*(sj2));
IkReal x2020=((cj2)*(cj3));
IkReal x2021=((cj2)*(sj3));
IkReal x2022=((sj2)*(sj3));
IkReal x2023=((r21)*(sj5));
IkReal x2024=((IkReal(1.00000000000000))*(cj1));
IkReal x2025=((IkReal(1.00000000000000))*(sj1));
IkReal x2026=((r22)*(x2024));
IkReal x2027=((cj5)*(r20)*(sj1));
IkReal x2028=((cj1)*(cj5)*(r20));
if( IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(x2021)*(x2026)))+(((IkReal(-1.00000000000000))*(x2019)*(x2026)))+(((IkReal(-1.00000000000000))*(r22)*(x2020)*(x2025)))+(((r22)*(sj1)*(x2022))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((x2020)*(x2027)))+(((IkReal(-1.00000000000000))*(x2021)*(x2023)*(x2024)))+(((x2019)*(x2028)))+(((IkReal(-1.00000000000000))*(x2020)*(x2023)*(x2025)))+(((IkReal(-1.00000000000000))*(x2019)*(x2023)*(x2024)))+(((x2021)*(x2028)))+(((sj1)*(x2022)*(x2023)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x2022)*(x2025))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst4)*(((((IkReal(-1.00000000000000))*(x2021)*(x2026)))+(((IkReal(-1.00000000000000))*(x2019)*(x2026)))+(((IkReal(-1.00000000000000))*(r22)*(x2020)*(x2025)))+(((r22)*(sj1)*(x2022)))))), ((gconst4)*(((((x2020)*(x2027)))+(((IkReal(-1.00000000000000))*(x2021)*(x2023)*(x2024)))+(((x2019)*(x2028)))+(((IkReal(-1.00000000000000))*(x2020)*(x2023)*(x2025)))+(((IkReal(-1.00000000000000))*(x2019)*(x2023)*(x2024)))+(((x2021)*(x2028)))+(((sj1)*(x2022)*(x2023)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)*(x2022)*(x2025)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2029=IKsin(j4);
IkReal x2030=IKcos(j4);
IkReal x2031=((IkReal(1.00000000000000))*(cj2));
IkReal x2032=((cj3)*(sj1));
IkReal x2033=((cj1)*(sj3));
IkReal x2034=((IkReal(1.00000000000000))*(cj5));
IkReal x2035=((IkReal(1.00000000000000))*(r01));
IkReal x2036=((cj1)*(cj3));
IkReal x2037=((r11)*(sj5));
IkReal x2038=((sj1)*(sj3));
IkReal x2039=((r01)*(sj5));
IkReal x2040=((r21)*(sj5));
IkReal x2041=((cj0)*(x2029));
IkReal x2042=((cj5)*(x2029));
IkReal x2043=((sj0)*(x2030));
IkReal x2044=((IkReal(1.00000000000000))*(x2029));
IkReal x2045=((cj0)*(x2030));
IkReal x2046=((sj0)*(sj5)*(x2029));
IkReal x2047=((IkReal(1.00000000000000))*(x2045));
evalcond[0]=((((r22)*(x2030)))+(((r20)*(x2042)))+(((IkReal(-1.00000000000000))*(x2040)*(x2044))));
evalcond[1]=((((x2037)*(x2045)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x2044)))+(((r12)*(x2041)))+(((IkReal(-1.00000000000000))*(sj5)*(x2035)*(x2043)))+(((IkReal(-1.00000000000000))*(r10)*(x2034)*(x2045)))+(((cj5)*(r00)*(x2043))));
evalcond[2]=((((sj0)*(x2029)*(x2037)))+(((IkReal(-1.00000000000000))*(r00)*(x2034)*(x2041)))+(((IkReal(-1.00000000000000))*(r02)*(x2047)))+(((x2039)*(x2041)))+(((IkReal(-1.00000000000000))*(r12)*(x2043)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2029)*(x2034))));
evalcond[3]=((IkReal(1.00000000000000))+(((x2037)*(x2041)))+(((r02)*(x2043)))+(((IkReal(-1.00000000000000))*(r10)*(x2034)*(x2041)))+(((IkReal(-1.00000000000000))*(x2035)*(x2046)))+(((r00)*(sj0)*(x2042)))+(((IkReal(-1.00000000000000))*(r12)*(x2047))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x2044)))+(((sj2)*(x2038)))+(((IkReal(-1.00000000000000))*(sj2)*(x2036)))+(((cj5)*(r20)*(x2030)))+(((IkReal(-1.00000000000000))*(x2031)*(x2032)))+(((IkReal(-1.00000000000000))*(x2031)*(x2033)))+(((IkReal(-1.00000000000000))*(x2030)*(x2040))));
evalcond[5]=((((x2037)*(x2043)))+(((sj2)*(x2032)))+(((sj2)*(x2033)))+(((IkReal(-1.00000000000000))*(r00)*(x2034)*(x2045)))+(((r12)*(sj0)*(x2029)))+(((r02)*(x2041)))+(((x2039)*(x2045)))+(((IkReal(-1.00000000000000))*(r10)*(x2034)*(x2043)))+(((cj2)*(x2038)))+(((IkReal(-1.00000000000000))*(x2031)*(x2036))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
if( IKabs(((gconst3)*(r22))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst3)*(r22)), ((gconst3)*(((((r21)*(sj5)))+(((IkReal(-1.00000000000000))*(cj5)*(r20)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[6];
IkReal x2048=IKsin(j4);
IkReal x2049=IKcos(j4);
IkReal x2050=((IkReal(1.00000000000000))*(cj2));
IkReal x2051=((cj3)*(sj1));
IkReal x2052=((cj1)*(sj3));
IkReal x2053=((IkReal(1.00000000000000))*(cj5));
IkReal x2054=((IkReal(1.00000000000000))*(r01));
IkReal x2055=((cj1)*(cj3));
IkReal x2056=((r11)*(sj5));
IkReal x2057=((sj1)*(sj3));
IkReal x2058=((r01)*(sj5));
IkReal x2059=((r21)*(sj5));
IkReal x2060=((cj0)*(x2048));
IkReal x2061=((cj5)*(x2048));
IkReal x2062=((sj0)*(x2049));
IkReal x2063=((IkReal(1.00000000000000))*(x2048));
IkReal x2064=((cj0)*(x2049));
IkReal x2065=((sj0)*(sj5)*(x2048));
IkReal x2066=((IkReal(1.00000000000000))*(x2064));
evalcond[0]=((((r22)*(x2049)))+(((r20)*(x2061)))+(((IkReal(-1.00000000000000))*(x2059)*(x2063))));
evalcond[1]=((((x2056)*(x2064)))+(((IkReal(-1.00000000000000))*(r02)*(sj0)*(x2063)))+(((r12)*(x2060)))+(((IkReal(-1.00000000000000))*(r10)*(x2053)*(x2064)))+(((IkReal(-1.00000000000000))*(sj5)*(x2054)*(x2062)))+(((cj5)*(r00)*(x2062))));
evalcond[2]=((((sj0)*(x2048)*(x2056)))+(((IkReal(-1.00000000000000))*(r02)*(x2066)))+(((x2058)*(x2060)))+(((IkReal(-1.00000000000000))*(r12)*(x2062)))+(((IkReal(-1.00000000000000))*(r10)*(sj0)*(x2048)*(x2053)))+(((IkReal(-1.00000000000000))*(r00)*(x2053)*(x2060))));
evalcond[3]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r12)*(x2066)))+(((x2056)*(x2060)))+(((r02)*(x2062)))+(((IkReal(-1.00000000000000))*(r10)*(x2053)*(x2060)))+(((IkReal(-1.00000000000000))*(x2054)*(x2065)))+(((r00)*(sj0)*(x2061))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r22)*(x2063)))+(((sj2)*(x2057)))+(((cj5)*(r20)*(x2049)))+(((IkReal(-1.00000000000000))*(sj2)*(x2055)))+(((IkReal(-1.00000000000000))*(x2050)*(x2052)))+(((IkReal(-1.00000000000000))*(x2050)*(x2051)))+(((IkReal(-1.00000000000000))*(x2049)*(x2059))));
evalcond[5]=((((x2056)*(x2062)))+(((r12)*(sj0)*(x2048)))+(((sj2)*(x2051)))+(((sj2)*(x2052)))+(((r02)*(x2060)))+(((IkReal(-1.00000000000000))*(r10)*(x2053)*(x2062)))+(((x2058)*(x2064)))+(((IkReal(-1.00000000000000))*(x2050)*(x2055)))+(((IkReal(-1.00000000000000))*(r00)*(x2053)*(x2064)))+(((cj2)*(x2057))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

template<int D>
static inline bool matrixinverse(IkReal* A)
{
    int n = D;
    int info;
    IkReal IKFAST_ALIGNED16(work[D*D*(D-1)]);
    int ipiv[D];
    dgetrf_(&n, &n, A, &n, &ipiv[0], &info);
    if( info != 0 ) {
        return false;
    }
    int worksize=D*D*(D-1);
    dgetri_(&n, A, &n, &ipiv[0], &work[0], &worksize, &info);
    return info==0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - ur5_iml (c03f4c1f62bf903ee6b6ba26e361cec0)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
